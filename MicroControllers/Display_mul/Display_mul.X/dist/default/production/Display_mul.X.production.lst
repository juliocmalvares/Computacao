

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 05 21:32:38 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 1.41
    15                           ; Generated 25/01/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           	psect	smallconst
    50  000800                     __psmallconst:
    51                           	opt stack 0
    52  000800  00                 	db	0
    53  000801                     _display:
    54                           	opt stack 0
    55  000801  3F                 	db	63
    56  000802  06                 	db	6
    57  000803  5B                 	db	91
    58  000804  4F                 	db	79
    59  000805  66                 	db	102
    60  000806  6D                 	db	109
    61  000807  7D                 	db	125
    62  000808  07                 	db	7
    63  000809  7F                 	db	127
    64  00080A  6F                 	db	111
    65  00080B                     __end_of_display:
    66                           	opt stack 0
    67  0000                     _PORTB	set	3969
    68  0000                     _PORTCbits	set	3970
    69  0000                     _TRISC	set	3988
    70  0000                     _TRISB	set	3987
    71  0000                     _ADCON1	set	4033
    72                           
    73                           ; #config settings
    74  00080B  00                 	db	0	; dummy byte at the end
    75  0000                     
    76                           	psect	cinit
    77  0009C6                     __pcinit:
    78                           	opt stack 0
    79  0009C6                     start_initialization:
    80                           	opt stack 0
    81  0009C6                     __initialization:
    82                           	opt stack 0
    83  0009C6                     end_of_initialization:
    84                           	opt stack 0
    85  0009C6                     __end_of__initialization:
    86                           	opt stack 0
    87  0009C6  0E00               	movlw	low (__Lsmallconst shr (0+16))
    88  0009C8  6EF8               	movwf	tblptru,c
    89  0009CA  0E08               	movlw	high __Lsmallconst
    90  0009CC  6EF7               	movwf	tblptrh,c
    91  0009CE  0100               	movlb	0
    92  0009D0  EF06  F004         	goto	_main	;jump to C main() function
    93                           tblptru	equ	0xFF8
    94                           tblptrh	equ	0xFF7
    95                           
    96                           	psect	cstackCOMRAM
    97  000001                     __pcstackCOMRAM:
    98                           	opt stack 0
    99  000001                     ?___lwmod:
   100                           	opt stack 0
   101  000001                     ___lwmod@dividend:
   102                           	opt stack 0
   103                           
   104                           ; 2 bytes @ 0x0
   105  000001                     	ds	2
   106  000003                     ___lwmod@divisor:
   107                           	opt stack 0
   108                           
   109                           ; 2 bytes @ 0x2
   110  000003                     	ds	2
   111  000005                     ___lwmod@counter:
   112                           	opt stack 0
   113                           
   114                           ; 1 bytes @ 0x4
   115  000005                     	ds	1
   116  000006                     ?___lwdiv:
   117                           	opt stack 0
   118  000006                     ___lwdiv@dividend:
   119                           	opt stack 0
   120                           
   121                           ; 2 bytes @ 0x5
   122  000006                     	ds	2
   123  000008                     ___lwdiv@divisor:
   124                           	opt stack 0
   125                           
   126                           ; 2 bytes @ 0x7
   127  000008                     	ds	2
   128  00000A                     ___lwdiv@quotient:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x9
   132  00000A                     	ds	2
   133  00000C                     ___lwdiv@counter:
   134                           	opt stack 0
   135                           
   136                           ; 1 bytes @ 0xB
   137  00000C                     	ds	1
   138  00000D                     ??_main:
   139                           
   140                           ; 1 bytes @ 0xC
   141  00000D                     	ds	2
   142  00000F                     main@uni:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0xE
   146  00000F                     	ds	2
   147  000011                     main@cen:
   148                           	opt stack 0
   149                           
   150                           ; 2 bytes @ 0x10
   151  000011                     	ds	2
   152  000013                     main@dez:
   153                           	opt stack 0
   154                           
   155                           ; 2 bytes @ 0x12
   156  000013                     	ds	2
   157  000015                     main@num:
   158                           	opt stack 0
   159                           
   160                           ; 2 bytes @ 0x14
   161  000015                     	ds	2
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 29 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;  num             2   20[COMRAM] unsigned int 
   175 ;;  dez             2   18[COMRAM] unsigned int 
   176 ;;  cen             2   16[COMRAM] unsigned int 
   177 ;;  uni             2   14[COMRAM] unsigned int 
   178 ;; Return value:  Size  Location     Type
   179 ;;                  1    wreg      void 
   180 ;; Registers used:
   181 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   187 ;;      Params:         0       0       0       0       0       0       0       0       0
   188 ;;      Locals:         8       0       0       0       0       0       0       0       0
   189 ;;      Temps:          2       0       0       0       0       0       0       0       0
   190 ;;      Totals:        10       0       0       0       0       0       0       0       0
   191 ;;Total ram usage:       10 bytes
   192 ;; Hardware stack levels required when called:    1
   193 ;; This function calls:
   194 ;;		___lwdiv
   195 ;;		___lwmod
   196 ;; This function is called by:
   197 ;;		Startup code after reset
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           	psect	text0
   202  00080C                     __ptext0:
   203                           	opt stack 0
   204  00080C                     _main:
   205                           	opt stack 30
   206                           
   207                           ;main.c: 30: ADCON1 = 0x0F;
   208                           
   209                           ;incstack = 0
   210  00080C  0E0F               	movlw	15
   211  00080E  6EC1               	movwf	4033,c	;volatile
   212                           
   213                           ;main.c: 31: TRISB = 0x00;
   214  000810  0E00               	movlw	0
   215  000812  6E93               	movwf	3987,c	;volatile
   216                           
   217                           ;main.c: 32: TRISC = 0x00;
   218  000814  0E00               	movlw	0
   219  000816  6E94               	movwf	3988,c	;volatile
   220                           
   221                           ;main.c: 34: unsigned int uni, cen, dez, num;
   222                           ;main.c: 35: num = 456;
   223  000818  0E01               	movlw	1
   224  00081A  6E16               	movwf	main@num+1,c
   225  00081C  0EC8               	movlw	200
   226  00081E  6E15               	movwf	main@num,c
   227  000820                     l716:
   228                           
   229                           ;main.c: 45: PORTCbits.RC0 = 1;
   230  000820  8082               	bsf	3970,0,c	;volatile
   231                           
   232                           ;main.c: 46: cen = (num-100)-((num%100)/100);
   233  000822  0E00               	movlw	0
   234  000824  6E04               	movwf	___lwmod@divisor+1,c
   235  000826  0E64               	movlw	100
   236  000828  6E03               	movwf	___lwmod@divisor,c
   237  00082A  C015  F001         	movff	main@num,___lwmod@dividend
   238  00082E  C016  F002         	movff	main@num+1,___lwmod@dividend+1
   239  000832  ECC2  F004         	call	___lwmod	;wreg free
   240  000836  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   241  00083A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   242  00083E  0E00               	movlw	0
   243  000840  6E09               	movwf	___lwdiv@divisor+1,c
   244  000842  0E64               	movlw	100
   245  000844  6E08               	movwf	___lwdiv@divisor,c
   246  000846  EC99  F004         	call	___lwdiv	;wreg free
   247  00084A  0E64               	movlw	100
   248  00084C  2606               	addwf	?___lwdiv,f,c
   249  00084E  0E00               	movlw	0
   250  000850  2207               	addwfc	?___lwdiv+1,f,c
   251  000852  1E06               	comf	?___lwdiv,f,c
   252  000854  1E07               	comf	?___lwdiv+1,f,c
   253  000856  4A06               	infsnz	?___lwdiv,f,c
   254  000858  2A07               	incf	?___lwdiv+1,f,c
   255  00085A  5015               	movf	main@num,w,c
   256  00085C  2406               	addwf	?___lwdiv,w,c
   257  00085E  6E11               	movwf	main@cen,c
   258  000860  5016               	movf	main@num+1,w,c
   259  000862  2007               	addwfc	?___lwdiv+1,w,c
   260  000864  6E12               	movwf	main@cen+1,c
   261                           
   262                           ;main.c: 47: PORTB = display[cen];
   263  000866  0E01               	movlw	low _display
   264  000868  2411               	addwf	main@cen,w,c
   265  00086A  6EF6               	movwf	tblptrl,c
   266  00086C  0E08               	movlw	high _display
   267  00086E  2012               	addwfc	main@cen+1,w,c
   268  000870  6EF7               	movwf	tblptrh,c
   269  000872                     	if	0	;There are less than 3 active tblptr bytes
   270  000872                     	endif
   271  000872  0008               	tblrd		*
   272  000874  CFF5 FF81          	movff	tablat,3969	;volatile
   273                           
   274                           ;main.c: 50: PORTCbits.RC1 = 1;
   275  000878  8282               	bsf	3970,1,c	;volatile
   276                           
   277                           ;main.c: 51: dez = (num%100);
   278  00087A  C015  F001         	movff	main@num,___lwmod@dividend
   279  00087E  C016  F002         	movff	main@num+1,___lwmod@dividend+1
   280  000882  0E00               	movlw	0
   281  000884  6E04               	movwf	___lwmod@divisor+1,c
   282  000886  0E64               	movlw	100
   283  000888  6E03               	movwf	___lwmod@divisor,c
   284  00088A  ECC2  F004         	call	___lwmod	;wreg free
   285  00088E  C001  F013         	movff	?___lwmod,main@dez
   286  000892  C002  F014         	movff	?___lwmod+1,main@dez+1
   287                           
   288                           ;main.c: 52: dez = (dez/10) - ((dez%10)/10);
   289  000896  C013  F006         	movff	main@dez,___lwdiv@dividend
   290  00089A  C014  F007         	movff	main@dez+1,___lwdiv@dividend+1
   291  00089E  0E00               	movlw	0
   292  0008A0  6E09               	movwf	___lwdiv@divisor+1,c
   293  0008A2  0E0A               	movlw	10
   294  0008A4  6E08               	movwf	___lwdiv@divisor,c
   295  0008A6  EC99  F004         	call	___lwdiv	;wreg free
   296  0008AA  C006  F00D         	movff	?___lwdiv,??_main
   297  0008AE  C007  F00E         	movff	?___lwdiv+1,??_main+1
   298  0008B2  0E00               	movlw	0
   299  0008B4  6E04               	movwf	___lwmod@divisor+1,c
   300  0008B6  0E0A               	movlw	10
   301  0008B8  6E03               	movwf	___lwmod@divisor,c
   302  0008BA  C013  F001         	movff	main@dez,___lwmod@dividend
   303  0008BE  C014  F002         	movff	main@dez+1,___lwmod@dividend+1
   304  0008C2  ECC2  F004         	call	___lwmod	;wreg free
   305  0008C6  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   306  0008CA  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   307  0008CE  0E00               	movlw	0
   308  0008D0  6E09               	movwf	___lwdiv@divisor+1,c
   309  0008D2  0E0A               	movlw	10
   310  0008D4  6E08               	movwf	___lwdiv@divisor,c
   311  0008D6  EC99  F004         	call	___lwdiv	;wreg free
   312  0008DA  1E06               	comf	?___lwdiv,f,c
   313  0008DC  1E07               	comf	?___lwdiv+1,f,c
   314  0008DE  4A06               	infsnz	?___lwdiv,f,c
   315  0008E0  2A07               	incf	?___lwdiv+1,f,c
   316  0008E2  5006               	movf	?___lwdiv,w,c
   317  0008E4  240D               	addwf	??_main,w,c
   318  0008E6  6E13               	movwf	main@dez,c
   319  0008E8  5007               	movf	?___lwdiv+1,w,c
   320  0008EA  200E               	addwfc	??_main+1,w,c
   321  0008EC  6E14               	movwf	main@dez+1,c
   322                           
   323                           ;main.c: 53: PORTB = display[dez];
   324  0008EE  0E01               	movlw	low _display
   325  0008F0  2413               	addwf	main@dez,w,c
   326  0008F2  6EF6               	movwf	tblptrl,c
   327  0008F4  0E08               	movlw	high _display
   328  0008F6  2014               	addwfc	main@dez+1,w,c
   329  0008F8  6EF7               	movwf	tblptrh,c
   330  0008FA                     	if	0	;There are less than 3 active tblptr bytes
   331  0008FA                     	endif
   332  0008FA  0008               	tblrd		*
   333  0008FC  CFF5 FF81          	movff	tablat,3969	;volatile
   334                           
   335                           ;main.c: 56: PORTCbits.RC2 = 1;
   336  000900  8482               	bsf	3970,2,c	;volatile
   337                           
   338                           ;main.c: 57: uni = num%10;
   339  000902  C015  F001         	movff	main@num,___lwmod@dividend
   340  000906  C016  F002         	movff	main@num+1,___lwmod@dividend+1
   341  00090A  0E00               	movlw	0
   342  00090C  6E04               	movwf	___lwmod@divisor+1,c
   343  00090E  0E0A               	movlw	10
   344  000910  6E03               	movwf	___lwmod@divisor,c
   345  000912  ECC2  F004         	call	___lwmod	;wreg free
   346  000916  C001  F00F         	movff	?___lwmod,main@uni
   347  00091A  C002  F010         	movff	?___lwmod+1,main@uni+1
   348                           
   349                           ;main.c: 58: PORTB = display[uni];
   350  00091E  0E01               	movlw	low _display
   351  000920  240F               	addwf	main@uni,w,c
   352  000922  6EF6               	movwf	tblptrl,c
   353  000924  0E08               	movlw	high _display
   354  000926  2010               	addwfc	main@uni+1,w,c
   355  000928  6EF7               	movwf	tblptrh,c
   356  00092A                     	if	0	;There are less than 3 active tblptr bytes
   357  00092A                     	endif
   358  00092A  0008               	tblrd		*
   359  00092C  CFF5 FF81          	movff	tablat,3969	;volatile
   360  000930  D777               	goto	l716
   361  000932                     __end_of_main:
   362                           	opt stack 0
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           
   368 ;; *************** function ___lwmod *****************
   369 ;; Defined at:
   370 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;  dividend        2    0[COMRAM] unsigned int 
   373 ;;  divisor         2    2[COMRAM] unsigned int 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  counter         1    4[COMRAM] unsigned char 
   376 ;; Return value:  Size  Location     Type
   377 ;;                  2    0[COMRAM] unsigned int 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   385 ;;      Params:         4       0       0       0       0       0       0       0       0
   386 ;;      Locals:         1       0       0       0       0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0       0       0       0       0
   388 ;;      Totals:         5       0       0       0       0       0       0       0       0
   389 ;;Total ram usage:        5 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text1
   399  000984                     __ptext1:
   400                           	opt stack 0
   401  000984                     ___lwmod:
   402                           	opt stack 30
   403                           
   404                           ;incstack = 0
   405  000984  5003               	movf	___lwmod@divisor,w,c
   406  000986  1004               	iorwf	___lwmod@divisor+1,w,c
   407  000988  B4D8               	btfsc	status,2,c
   408  00098A  D018               	goto	l431
   409  00098C  0E01               	movlw	1
   410  00098E  6E05               	movwf	___lwmod@counter,c
   411  000990  D004               	goto	l704
   412  000992                     l702:
   413  000992  90D8               	bcf	status,0,c
   414  000994  3603               	rlcf	___lwmod@divisor,f,c
   415  000996  3604               	rlcf	___lwmod@divisor+1,f,c
   416  000998  2A05               	incf	___lwmod@counter,f,c
   417  00099A                     l704:
   418  00099A  AE04               	btfss	___lwmod@divisor+1,7,c
   419  00099C  D7FA               	goto	l702
   420  00099E                     l706:
   421  00099E  5003               	movf	___lwmod@divisor,w,c
   422  0009A0  5C01               	subwf	___lwmod@dividend,w,c
   423  0009A2  5004               	movf	___lwmod@divisor+1,w,c
   424  0009A4  5802               	subwfb	___lwmod@dividend+1,w,c
   425  0009A6  A0D8               	btfss	status,0,c
   426  0009A8  D004               	goto	l710
   427  0009AA  5003               	movf	___lwmod@divisor,w,c
   428  0009AC  5E01               	subwf	___lwmod@dividend,f,c
   429  0009AE  5004               	movf	___lwmod@divisor+1,w,c
   430  0009B0  5A02               	subwfb	___lwmod@dividend+1,f,c
   431  0009B2                     l710:
   432  0009B2  90D8               	bcf	status,0,c
   433  0009B4  3204               	rrcf	___lwmod@divisor+1,f,c
   434  0009B6  3203               	rrcf	___lwmod@divisor,f,c
   435  0009B8  2E05               	decfsz	___lwmod@counter,f,c
   436  0009BA  D7F1               	goto	l706
   437  0009BC                     l431:
   438  0009BC  C001  F001         	movff	___lwmod@dividend,?___lwmod
   439  0009C0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   440  0009C4  0012               	return		;funcret
   441  0009C6                     __end_of___lwmod:
   442                           	opt stack 0
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           status	equ	0xFD8
   448                           
   449 ;; *************** function ___lwdiv *****************
   450 ;; Defined at:
   451 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  dividend        2    5[COMRAM] unsigned int 
   454 ;;  divisor         2    7[COMRAM] unsigned int 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  quotient        2    9[COMRAM] unsigned int 
   457 ;;  counter         1   11[COMRAM] unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  2    5[COMRAM] unsigned int 
   460 ;; Registers used:
   461 ;;		wreg, status,2, status,0
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   467 ;;      Params:         4       0       0       0       0       0       0       0       0
   468 ;;      Locals:         3       0       0       0       0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0
   470 ;;      Totals:         7       0       0       0       0       0       0       0       0
   471 ;;Total ram usage:        7 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text2
   481  000932                     __ptext2:
   482                           	opt stack 0
   483  000932                     ___lwdiv:
   484                           	opt stack 30
   485                           
   486                           ;incstack = 0
   487  000932  0E00               	movlw	0
   488  000934  6E0B               	movwf	___lwdiv@quotient+1,c
   489  000936  0E00               	movlw	0
   490  000938  6E0A               	movwf	___lwdiv@quotient,c
   491  00093A  5008               	movf	___lwdiv@divisor,w,c
   492  00093C  1009               	iorwf	___lwdiv@divisor+1,w,c
   493  00093E  B4D8               	btfsc	status,2,c
   494  000940  D01C               	goto	l421
   495  000942  0E01               	movlw	1
   496  000944  6E0C               	movwf	___lwdiv@counter,c
   497  000946  D004               	goto	l684
   498  000948                     l682:
   499  000948  90D8               	bcf	status,0,c
   500  00094A  3608               	rlcf	___lwdiv@divisor,f,c
   501  00094C  3609               	rlcf	___lwdiv@divisor+1,f,c
   502  00094E  2A0C               	incf	___lwdiv@counter,f,c
   503  000950                     l684:
   504  000950  AE09               	btfss	___lwdiv@divisor+1,7,c
   505  000952  D7FA               	goto	l682
   506  000954                     l686:
   507  000954  90D8               	bcf	status,0,c
   508  000956  360A               	rlcf	___lwdiv@quotient,f,c
   509  000958  360B               	rlcf	___lwdiv@quotient+1,f,c
   510  00095A  5008               	movf	___lwdiv@divisor,w,c
   511  00095C  5C06               	subwf	___lwdiv@dividend,w,c
   512  00095E  5009               	movf	___lwdiv@divisor+1,w,c
   513  000960  5807               	subwfb	___lwdiv@dividend+1,w,c
   514  000962  A0D8               	btfss	status,0,c
   515  000964  D005               	goto	l694
   516  000966  5008               	movf	___lwdiv@divisor,w,c
   517  000968  5E06               	subwf	___lwdiv@dividend,f,c
   518  00096A  5009               	movf	___lwdiv@divisor+1,w,c
   519  00096C  5A07               	subwfb	___lwdiv@dividend+1,f,c
   520  00096E  800A               	bsf	___lwdiv@quotient,0,c
   521  000970                     l694:
   522  000970  90D8               	bcf	status,0,c
   523  000972  3209               	rrcf	___lwdiv@divisor+1,f,c
   524  000974  3208               	rrcf	___lwdiv@divisor,f,c
   525  000976  2E0C               	decfsz	___lwdiv@counter,f,c
   526  000978  D7ED               	goto	l686
   527  00097A                     l421:
   528  00097A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
   529  00097E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
   530  000982  0012               	return		;funcret
   531  000984                     __end_of___lwdiv:
   532                           	opt stack 0
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           status	equ	0xFD8
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           status	equ	0xFD8
   543                           
   544                           	psect	rparam
   545  0000                     tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1126
                                             12 COMRAM    10    10      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     503
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     420
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     16      16       1       23.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 05 21:32:38 2018

                    l421 097A                      l431 09BC                      l710 09B2  
                    l702 0992                      l704 099A                      l706 099E  
                    l716 0820                      l682 0948                      l684 0950  
                    l694 0970                      l686 0954                     _main 080C  
                   start 0000             ___param_bank 000000                    ?_main 0001  
        __end_of___lwdiv 0984          __end_of___lwmod 09C6                    _PORTB 000F81  
                  _TRISB 000F93                    _TRISC 000F94          __end_of_display 080B  
                  tablat 000FF5                    status 000FD8          __initialization 09C6  
           __end_of_main 0932                   ??_main 000D            __activetblptr 000001  
                 _ADCON1 000FC1                ??___lwdiv 000A                ??___lwmod 0005  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 09C6  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 0932  
                ___lwmod 0984             __psmallconst 0800                  __pcinit 09C6  
                __ramtop 0800                  __ptext0 080C                  __ptext1 0984  
                __ptext2 0932                  _display 0801                  main@cen 0011  
                main@dez 0013                  main@num 0015                  main@uni 000F  
   end_of_initialization 09C6                _PORTCbits 000F82      start_initialization 09C6  
       ___lwdiv@dividend 0006                 ?___lwdiv 0006                 ?___lwmod 0001  
            __smallconst 0800         ___lwdiv@quotient 000A                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800         __size_of___lwdiv 0052  
       __size_of___lwmod 0042          ___lwdiv@divisor 0008          ___lwdiv@counter 000C  
          __size_of_main 0126         ___lwmod@dividend 0001          ___lwmod@divisor 0003  
        ___lwmod@counter 0005  
