

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Apr 04 13:48:26 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4450
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4450 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	smallconst
    51  000500                     __psmallconst:
    52                           	opt stack 0
    53  000500  00                 	db	0
    54  000501                     _display:
    55                           	opt stack 0
    56  000501  3F                 	db	63
    57  000502  06                 	db	6
    58  000503  5B                 	db	91
    59  000504  4F                 	db	79
    60  000505  66                 	db	102
    61  000506  6D                 	db	109
    62  000507  7D                 	db	125
    63  000508  07                 	db	7
    64  000509  7F                 	db	127
    65  00050A  6F                 	db	111
    66  00050B                     __end_of_display:
    67                           	opt stack 0
    68  0000                     _TMR0	set	4054
    69  0000                     _TRISB	set	3987
    70  0000                     _ADCON1	set	4033
    71  0000                     _T0CONbits	set	4053
    72  0000                     _PORTB	set	3969
    73  0000                     _INTCONbits	set	4082
    74  0000                     _TMR0IF	set	32658
    75                           
    76                           ; #config settings
    77  00050B  00                 	db	0	; dummy byte at the end
    78  0000                     
    79                           	psect	cinit
    80  000536                     __pcinit:
    81                           	opt stack 0
    82  000536                     start_initialization:
    83                           	opt stack 0
    84  000536                     __initialization:
    85                           	opt stack 0
    86                           
    87                           ; Clear objects allocated to COMRAM (2 bytes)
    88  000536  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
    89  000538  6A12               	clrf	__pbssCOMRAM& (0+255),c
    90  00053A                     end_of_initialization:
    91                           	opt stack 0
    92  00053A                     __end_of__initialization:
    93                           	opt stack 0
    94  00053A  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    95  00053C  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    96  00053E  0E00               	movlw	low (__Lsmallconst shr (0+16))
    97  000540  6EF8               	movwf	tblptru,c
    98  000542  0E05               	movlw	high __Lsmallconst
    99  000544  6EF7               	movwf	tblptrh,c
   100  000546  0100               	movlb	0
   101  000548  EF86  F002         	goto	_main	;jump to C main() function
   102                           tblptru	equ	0xFF8
   103                           tblptrh	equ	0xFF7
   104                           
   105                           	psect	bssCOMRAM
   106  000012                     __pbssCOMRAM:
   107                           	opt stack 0
   108  000012                     _x:
   109                           	opt stack 0
   110  000012                     	ds	2
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           
   114                           	psect	cstackCOMRAM
   115  000001                     __pcstackCOMRAM:
   116                           	opt stack 0
   117  000001                     ??_pic_isr:
   118  000001                     
   119                           ; 1 bytes @ 0x0
   120  000001                     	ds	17
   121  000012                     tblptru	equ	0xFF8
   122                           tblptrh	equ	0xFF7
   123                           
   124                           ; 1 bytes @ 0x11
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 43 in file "main.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;		None
   135 ;; Return value:  Size  Location     Type
   136 ;;                  1    wreg      void 
   137 ;; Registers used:
   138 ;;		wreg, status,2
   139 ;; Tracked objects:
   140 ;;		On entry : 0/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   144 ;;      Params:         0       0       0       0
   145 ;;      Locals:         0       0       0       0
   146 ;;      Temps:          0       0       0       0
   147 ;;      Totals:         0       0       0       0
   148 ;;Total ram usage:        0 bytes
   149 ;; Hardware stack levels required when called:    1
   150 ;; This function calls:
   151 ;;		Nothing
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158  00050C                     __ptext0:
   159                           	opt stack 0
   160  00050C                     _main:
   161                           	opt stack 30
   162                           
   163                           ;main.c: 44: T0CONbits.TMR0ON = 0;
   164                           
   165                           ;incstack = 0
   166  00050C  9ED5               	bcf	4053,7,c	;volatile
   167                           
   168                           ;main.c: 45: INTCONbits.TMR0IE = 1;
   169  00050E  8AF2               	bsf	intcon,5,c	;volatile
   170                           
   171                           ;main.c: 47: INTCONbits.TMR0IF = 0;
   172  000510  94F2               	bcf	intcon,2,c	;volatile
   173                           
   174                           ;main.c: 49: T0CONbits.T08BIT = 0;
   175  000512  9CD5               	bcf	4053,6,c	;volatile
   176                           
   177                           ;main.c: 50: T0CONbits.PSA = 0;
   178  000514  96D5               	bcf	4053,3,c	;volatile
   179                           
   180                           ;main.c: 51: T0CONbits.T0PS0 = 1;
   181  000516  80D5               	bsf	4053,0,c	;volatile
   182                           
   183                           ;main.c: 52: T0CONbits.T0PS1 = 1;
   184  000518  82D5               	bsf	4053,1,c	;volatile
   185                           
   186                           ;main.c: 53: T0CONbits.T0PS2 = 0;
   187  00051A  94D5               	bcf	4053,2,c	;volatile
   188                           
   189                           ;main.c: 55: T0CONbits.T0CS = 0;
   190  00051C  9AD5               	bcf	4053,5,c	;volatile
   191                           
   192                           ;main.c: 56: TMR0 = 0;
   193  00051E  0E00               	movlw	0
   194  000520  6ED7               	movwf	4055,c	;volatile
   195  000522  0E00               	movlw	0
   196  000524  6ED6               	movwf	4054,c	;volatile
   197                           
   198                           ;main.c: 58: T0CONbits.TMR0ON = 1;
   199  000526  8ED5               	bsf	4053,7,c	;volatile
   200                           
   201                           ;main.c: 60: INTCONbits.GIEH = 1;
   202  000528  8EF2               	bsf	intcon,7,c	;volatile
   203                           
   204                           ;main.c: 61: INTCONbits.GIEL = 1;
   205  00052A  8CF2               	bsf	intcon,6,c	;volatile
   206                           
   207                           ;main.c: 67: ADCON1 = 0x0F;
   208  00052C  0E0F               	movlw	15
   209  00052E  6EC1               	movwf	4033,c	;volatile
   210                           
   211                           ;main.c: 68: TRISB = 0x00;
   212  000530  0E00               	movlw	0
   213  000532  6E93               	movwf	3987,c	;volatile
   214  000534                     l27:
   215  000534  D7FF               	goto	l27
   216  000536                     __end_of_main:
   217                           	opt stack 0
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           intcon	equ	0xFF2
   221                           
   222 ;; *************** function _pic_isr *****************
   223 ;; Defined at:
   224 ;;		line 29 in file "main.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   238 ;;      Params:         0       0       0       0
   239 ;;      Locals:         0       0       0       0
   240 ;;      Temps:         17       0       0       0
   241 ;;      Totals:        17       0       0       0
   242 ;;Total ram usage:       17 bytes
   243 ;; Hardware stack levels used:    1
   244 ;; This function calls:
   245 ;;		Nothing
   246 ;; This function is called by:
   247 ;;		Interrupt level 1
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	intcodelo
   252  000018                     __pintcodelo:
   253                           	opt stack 0
   254  000018                     _pic_isr:
   255                           	opt stack 30
   256                           
   257                           ;incstack = 0
   258  000018  8014               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   259  00001A  CFD8 F001          	movff	status,??_pic_isr
   260  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   261  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   262  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   263  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   264  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   265  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   266  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   267  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   268  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   269  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   270  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   271  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   272  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   273  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   274  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   275  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   276                           
   277                           ;main.c: 30: if(TMR0IF){
   278  00005E  A4F2               	btfss	intcon,2,c	;volatile
   279  000060  D021               	goto	i1l24
   280                           
   281                           ;main.c: 31: TMR0 = 0;
   282  000062  0E00               	movlw	0
   283  000064  6ED7               	movwf	4055,c	;volatile
   284  000066  0E00               	movlw	0
   285  000068  6ED6               	movwf	4054,c	;volatile
   286                           
   287                           ;main.c: 32: INTCONbits.TMR0IF = 0;
   288  00006A  94F2               	bcf	intcon,2,c	;volatile
   289                           
   290                           ;main.c: 33: if(x < 10){
   291  00006C  BE13               	btfsc	_x+1,7,c
   292  00006E  D006               	goto	i1l636
   293  000070  5013               	movf	_x+1,w,c
   294  000072  E118               	bnz	i1l24
   295  000074  0E0A               	movlw	10
   296  000076  5C12               	subwf	_x,w,c
   297  000078  B0D8               	btfsc	status,0,c
   298  00007A  D014               	goto	i1l24
   299  00007C                     i1l636:
   300                           
   301                           ;main.c: 34: PORTB = display[x];
   302  00007C  0E01               	movlw	low _display
   303  00007E  2412               	addwf	_x,w,c
   304  000080  6EF6               	movwf	tblptrl,c
   305  000082  0E05               	movlw	high _display
   306  000084  2013               	addwfc	_x+1,w,c
   307  000086  6EF7               	movwf	tblptrh,c
   308  000088                     	if	0	;There are less than 3 active tblptr bytes
   309  000088                     	endif
   310  000088  0008               	tblrd		*
   311  00008A  CFF5 FF81          	movff	tablat,3969	;volatile
   312                           
   313                           ;main.c: 35: x++;
   314  00008E  4A12               	infsnz	_x,f,c
   315  000090  2A13               	incf	_x+1,f,c
   316                           
   317                           ;main.c: 36: if(x == 10) x = 0;
   318  000092  0E0A               	movlw	10
   319  000094  1812               	xorwf	_x,w,c
   320  000096  1013               	iorwf	_x+1,w,c
   321  000098  A4D8               	btfss	status,2,c
   322  00009A  D004               	goto	i1l24
   323  00009C  0E00               	movlw	0
   324  00009E  6E13               	movwf	_x+1,c
   325  0000A0  0E00               	movlw	0
   326  0000A2  6E12               	movwf	_x,c
   327  0000A4                     i1l24:
   328  0000A4  C011  FFF5         	movff	??_pic_isr+16,tablat
   329  0000A8  C010  FFF8         	movff	??_pic_isr+15,tblptru
   330  0000AC  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   331  0000B0  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   332  0000B4  C00D  FFF4         	movff	??_pic_isr+12,prodh
   333  0000B8  C00C  FFF3         	movff	??_pic_isr+11,prodl
   334  0000BC  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   335  0000C0  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   336  0000C4  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   337  0000C8  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   338  0000CC  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   339  0000D0  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   340  0000D4  C005  FFFB         	movff	??_pic_isr+4,pclatu
   341  0000D8  C004  FFFA         	movff	??_pic_isr+3,pclath
   342  0000DC  C003  FFE0         	movff	??_pic_isr+2,bsr
   343  0000E0  C002  FFE8         	movff	??_pic_isr+1,wreg
   344  0000E4  C001  FFD8         	movff	??_pic_isr,status
   345  0000E8  9014               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   346  0000EA  0010               	retfie	
   347  0000EC                     __end_of_pic_isr:
   348                           	opt stack 0
   349                           pclatu	equ	0xFFB
   350                           pclath	equ	0xFFA
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           prodh	equ	0xFF4
   356                           prodl	equ	0xFF3
   357                           intcon	equ	0xFF2
   358                           fsr0h	equ	0xFEA
   359                           fsr0l	equ	0xFE9
   360                           wreg	equ	0xFE8
   361                           fsr1h	equ	0xFE2
   362                           fsr1l	equ	0xFE1
   363                           bsr	equ	0xFE0
   364                           fsr2h	equ	0xFDA
   365                           fsr2l	equ	0xFD9
   366                           status	equ	0xFD8
   367                           pclatu	equ	0xFFB
   368                           pclath	equ	0xFFA
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           prodh	equ	0xFF4
   374                           prodl	equ	0xFF3
   375                           intcon	equ	0xFF2
   376                           fsr0h	equ	0xFEA
   377                           fsr0l	equ	0xFE9
   378                           wreg	equ	0xFE8
   379                           fsr1h	equ	0xFE2
   380                           fsr1l	equ	0xFE1
   381                           bsr	equ	0xFE0
   382                           fsr2h	equ	0xFDA
   383                           fsr2l	equ	0xFD9
   384                           status	equ	0xFD8
   385                           
   386                           	psect	rparam
   387  0000                     pclatu	equ	0xFFB
   388                           pclath	equ	0xFFA
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           prodh	equ	0xFF4
   394                           prodl	equ	0xFF3
   395                           intcon	equ	0xFF2
   396                           fsr0h	equ	0xFEA
   397                           fsr0l	equ	0xFE9
   398                           wreg	equ	0xFE8
   399                           fsr1h	equ	0xFE2
   400                           fsr1l	equ	0xFE1
   401                           bsr	equ	0xFE0
   402                           fsr2h	equ	0xFDA
   403                           fsr2l	equ	0xFD9
   404                           status	equ	0xFD8
   405                           
   406                           	psect	temp
   407  000014                     btemp:
   408                           	opt stack 0
   409  000014                     	ds	1
   410  0000                     int$flags	set	btemp
   411                           pclatu	equ	0xFFB
   412                           pclath	equ	0xFFA
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           prodh	equ	0xFF4
   418                           prodl	equ	0xFF3
   419                           intcon	equ	0xFF2
   420                           fsr0h	equ	0xFEA
   421                           fsr0l	equ	0xFE9
   422                           wreg	equ	0xFE8
   423                           fsr1h	equ	0xFE2
   424                           fsr1l	equ	0xFE1
   425                           bsr	equ	0xFE0
   426                           fsr2h	equ	0xFDA
   427                           fsr2l	equ	0xFD9
   428                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK4           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      11        0.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BIGRAM_1           100      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      13       1       20.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13       3        0.0%
DATA                 0      0      13      12        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Apr 04 13:48:26 2018

                      _x 0012                       l27 0534                       bsr 000FE0  
                    wreg 000FE8                     i1l24 00A4                     _TMR0 000FD6  
                   _main 050C                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0014                     prodh 000FF4  
                   prodl 000FF3                     start 00EC             ___param_bank 000000  
                  ?_main 0001                    i1l636 007C                    _PORTB 000F81  
                  _TRISB 000F93          __end_of_display 050B          __end_of_pic_isr 00EC  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
        __initialization 0536             __end_of_main 0536                   ??_main 0012  
          __activetblptr 000001                   _ADCON1 000FC1                   _TMR0IF 007F92  
              ??_pic_isr 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 053A          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0500                  __pcinit 0536                  __ramtop 0500  
                __ptext0 050C                  _display 0501                _T0CONbits 000FD5  
                _pic_isr 0018     end_of_initialization 053A      start_initialization 0536  
            __pbssCOMRAM 0012              __pintcodelo 0018              __smallconst 0500  
               ?_pic_isr 0001                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0500         __size_of_pic_isr 00D4            __size_of_main 002A  
               int$flags 0014               _INTCONbits 000FF2                 intlevel1 0000  
