

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jul 04 13:37:45 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataCOMRAM
    89  0015A6                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _constante_ad
    93  0015A6  28                 	db	40
    94  0015A7  A0                 	db	160
    95  0015A8  3B                 	db	59
    96                           
    97                           ;initializer for _ano
    98  0015A9  07E2               	dw	2018
    99                           
   100                           ;initializer for _desp_min
   101  0015AB  0A                 	db	10
   102                           
   103                           ;initializer for _desp_hora
   104  0015AC  05                 	db	5
   105                           
   106                           ;initializer for _mes
   107  0015AD  06                 	db	6
   108                           
   109                           ;initializer for _dia
   110  0015AE  04                 	db	4
   111                           
   112                           ;initializer for _tela_atual
   113  0015AF  01                 	db	1
   114                           
   115                           ;initializer for _revisao
   116  0015B0  02                 	db	2
   117                           
   118                           ;initializer for _versao
   119  0015B1  01                 	db	1
   120                           
   121                           	psect	smallconst
   122  000800                     __psmallconst:
   123                           	opt stack 0
   124  000800  00                 	db	0
   125  000801                     _dpowers:
   126                           	opt stack 0
   127  000801  0001               	dw	1
   128  000803  000A               	dw	10
   129  000805  0064               	dw	100
   130  000807  03E8               	dw	1000
   131  000809  2710               	dw	10000
   132  00080B                     __end_of_dpowers:
   133                           	opt stack 0
   134  0000                     _TMR0	set	4054
   135  0000                     _TRISBbits	set	3987
   136  0000                     _TRISB	set	3987
   137  0000                     _PORTB	set	3969
   138  0000                     _LATBbits	set	3978
   139  0000                     _TXREG	set	4013
   140  0000                     _TRISCbits	set	3988
   141  0000                     _TXSTA	set	4012
   142  0000                     _RCSTA	set	4011
   143  0000                     _SPBRG	set	4015
   144  0000                     _TRISA	set	3986
   145  0000                     _T0CONbits	set	4053
   146  0000                     _RCREG	set	4014
   147  0000                     _PIR1bits	set	3998
   148  0000                     _INTCONbits	set	4082
   149  0000                     _PORTAbits	set	3968
   150  0000                     _PORTDbits	set	3971
   151  0000                     _TXIF	set	31988
   152  0000                     _PEIE	set	32662
   153  0000                     _RCIE	set	31981
   154  0000                     _RCIP	set	31997
   155  0000                     _RCIF	set	31989
   156  0000                     _TMR0IF	set	32658
   157  00080B                     STR_11:
   158  00080B  20                 	db	32
   159  00080C  20                 	db	32
   160  00080D  20                 	db	32
   161  00080E  20                 	db	32
   162  00080F  20                 	db	32
   163  000810  20                 	db	32
   164  000811  20                 	db	32
   165  000812  20                 	db	32
   166  000813  20                 	db	32
   167  000814  20                 	db	32
   168  000815  20                 	db	32
   169  000816  20                 	db	32
   170  000817  20                 	db	32
   171  000818  20                 	db	32
   172  000819  20                 	db	32
   173  00081A  20                 	db	32
   174  00081B  00                 	db	0
   175  00081C                     STR_9:
   176  00081C  54                 	db	84	;'T'
   177  00081D  65                 	db	101	;'e'
   178  00081E  6D                 	db	109	;'m'
   179  00081F  70                 	db	112	;'p'
   180  000820  65                 	db	101	;'e'
   181  000821  72                 	db	114	;'r'
   182  000822  61                 	db	97	;'a'
   183  000823  74                 	db	116	;'t'
   184  000824  75                 	db	117	;'u'
   185  000825  72                 	db	114	;'r'
   186  000826  61                 	db	97	;'a'
   187  000827  00                 	db	0
   188  000828                     STR_7:
   189  000828  44                 	db	68	;'D'
   190  000829  65                 	db	101	;'e'
   191  00082A  73                 	db	115	;'s'
   192  00082B  70                 	db	112	;'p'
   193  00082C  65                 	db	101	;'e'
   194  00082D  72                 	db	114	;'r'
   195  00082E  74                 	db	116	;'t'
   196  00082F  61                 	db	97	;'a'
   197  000830  64                 	db	100	;'d'
   198  000831  6F                 	db	111	;'o'
   199  000832  72                 	db	114	;'r'
   200  000833  00                 	db	0
   201  000834                     STR_4:
   202  000834  25                 	db	37
   203  000835  64                 	db	100	;'d'
   204  000836  2F                 	db	47
   205  000837  25                 	db	37
   206  000838  64                 	db	100	;'d'
   207  000839  2F                 	db	47
   208  00083A  25                 	db	37
   209  00083B  64                 	db	100	;'d'
   210  00083C  00                 	db	0
   211  00083D                     STR_2:
   212  00083D  25                 	db	37
   213  00083E  64                 	db	100	;'d'
   214  00083F  3A                 	db	58	;':'
   215  000840  25                 	db	37
   216  000841  64                 	db	100	;'d'
   217  000842  3A                 	db	58	;':'
   218  000843  25                 	db	37
   219  000844  64                 	db	100	;'d'
   220  000845  00                 	db	0
   221  000846                     STR_1:
   222  000846  48                 	db	72	;'H'
   223  000847  6F                 	db	111	;'o'
   224  000848  72                 	db	114	;'r'
   225  000849  61                 	db	97	;'a'
   226  00084A  3A                 	db	58	;':'
   227  00084B  20                 	db	32
   228  00084C  00                 	db	0
   229  00084D                     STR_3:
   230  00084D  44                 	db	68	;'D'
   231  00084E  61                 	db	97	;'a'
   232  00084F  74                 	db	116	;'t'
   233  000850  61                 	db	97	;'a'
   234  000851  3A                 	db	58	;':'
   235  000852  20                 	db	32
   236  000853  00                 	db	0
   237  000854                     STR_5:
   238  000854  41                 	db	65	;'A'
   239  000855  6C                 	db	108	;'l'
   240  000856  61                 	db	97	;'a'
   241  000857  72                 	db	114	;'r'
   242  000858  6D                 	db	109	;'m'
   243  000859  65                 	db	101	;'e'
   244  00085A  00                 	db	0
   245  00085B                     STR_8:
   246  00085B  25                 	db	37
   247  00085C  64                 	db	100	;'d'
   248  00085D  2E                 	db	46
   249  00085E  25                 	db	37
   250  00085F  64                 	db	100	;'d'
   251  000860  00                 	db	0
   252  000861                     STR_10:
   253  000861  25                 	db	37
   254  000862  64                 	db	100	;'d'
   255  000863  20                 	db	32
   256  000864  43                 	db	67	;'C'
   257  000865  00                 	db	0
   258  0000                     
   259                           ; #config settings
   260  000866  00                 	db	0	; dummy byte at the end
   261  0000                     
   262                           	psect	cinit
   263  00132C                     __pcinit:
   264                           	opt stack 0
   265  00132C                     start_initialization:
   266                           	opt stack 0
   267  00132C                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Initialize objects allocated to COMRAM (12 bytes)
   271                           ; load TBLPTR registers with __pidataCOMRAM
   272  00132C  0EA6               	movlw	low __pidataCOMRAM
   273  00132E  6EF6               	movwf	tblptrl,c
   274  001330  0E15               	movlw	high __pidataCOMRAM
   275  001332  6EF7               	movwf	tblptrh,c
   276  001334  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   277  001336  6EF8               	movwf	tblptru,c
   278  001338  EE00  F041         	lfsr	0,__pdataCOMRAM
   279  00133C  EE10 F00C          	lfsr	1,12
   280  001340                     copy_data0:
   281  001340  0009               	tblrd		*+
   282  001342  CFF5 FFEE          	movff	tablat,postinc0
   283  001346  50E5               	movf	postdec1,w,c
   284  001348  50E1               	movf	fsr1l,w,c
   285  00134A  E1FA               	bnz	copy_data0
   286                           
   287                           ; Clear objects allocated to BANK0 (16 bytes)
   288  00134C  EE00  F071         	lfsr	0,__pbssBANK0
   289  001350  0E10               	movlw	16
   290  001352                     clear_0:
   291  001352  6AEE               	clrf	postinc0,c
   292  001354  06E8               	decf	wreg,f,c
   293  001356  E1FD               	bnz	clear_0
   294                           
   295                           ; Clear objects allocated to COMRAM (31 bytes)
   296  001358  EE00  F022         	lfsr	0,__pbssCOMRAM
   297  00135C  0E1F               	movlw	31
   298  00135E                     clear_1:
   299  00135E  6AEE               	clrf	postinc0,c
   300  001360  06E8               	decf	wreg,f,c
   301  001362  E1FD               	bnz	clear_1
   302  001364                     end_of_initialization:
   303                           	opt stack 0
   304  001364                     __end_of__initialization:
   305                           	opt stack 0
   306  001364  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   307  001366  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   308  001368  0100               	movlb	0
   309  00136A  EFB6  F007         	goto	_main	;jump to C main() function
   310                           tblptru	equ	0xFF8
   311                           tblptrh	equ	0xFF7
   312                           tblptrl	equ	0xFF6
   313                           tablat	equ	0xFF5
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           postdec1	equ	0xFE5
   317                           fsr1l	equ	0xFE1
   318                           
   319                           	psect	bssCOMRAM
   320  000022                     __pbssCOMRAM:
   321                           	opt stack 0
   322  000022                     _temperatura:
   323                           	opt stack 0
   324  000022                     	ds	3
   325  000025                     _ADResult:
   326                           	opt stack 0
   327  000025                     	ds	2
   328  000027                     _i:
   329                           	opt stack 0
   330  000027                     	ds	2
   331  000029                     _calcula_temp:
   332                           	opt stack 0
   333  000029                     	ds	1
   334  00002A                     _despertou:
   335                           	opt stack 0
   336  00002A                     	ds	1
   337  00002B                     _contador_alarme:
   338                           	opt stack 0
   339  00002B                     	ds	1
   340  00002C                     _segundo:
   341                           	opt stack 0
   342  00002C                     	ds	1
   343  00002D                     _minuto:
   344                           	opt stack 0
   345  00002D                     	ds	1
   346  00002E                     _hora:
   347                           	opt stack 0
   348  00002E                     	ds	1
   349  00002F                     _contador_um_segundo:
   350                           	opt stack 0
   351  00002F                     	ds	1
   352  000030                     _contador_interrupcao:
   353                           	opt stack 0
   354  000030                     	ds	1
   355  000031                     _estado:
   356                           	opt stack 0
   357  000031                     	ds	1
   358  000032                     _serial_data:
   359                           	opt stack 0
   360  000032                     	ds	1
   361  000033                     _BUFFRESP:
   362                           	opt stack 0
   363  000033                     	ds	7
   364  00003A                     _BUFFCOM:
   365                           	opt stack 0
   366  00003A                     	ds	7
   367                           tblptru	equ	0xFF8
   368                           tblptrh	equ	0xFF7
   369                           tblptrl	equ	0xFF6
   370                           tablat	equ	0xFF5
   371                           postinc0	equ	0xFEE
   372                           wreg	equ	0xFE8
   373                           postdec1	equ	0xFE5
   374                           fsr1l	equ	0xFE1
   375                           
   376                           	psect	dataCOMRAM
   377  000041                     __pdataCOMRAM:
   378                           	opt stack 0
   379  000041                     _constante_ad:
   380                           	opt stack 0
   381  000041                     	ds	3
   382  000044                     _ano:
   383                           	opt stack 0
   384  000044                     	ds	2
   385  000046                     _desp_min:
   386                           	opt stack 0
   387  000046                     	ds	1
   388  000047                     _desp_hora:
   389                           	opt stack 0
   390  000047                     	ds	1
   391  000048                     _mes:
   392                           	opt stack 0
   393  000048                     	ds	1
   394  000049                     _dia:
   395                           	opt stack 0
   396  000049                     	ds	1
   397  00004A                     _tela_atual:
   398                           	opt stack 0
   399  00004A                     	ds	1
   400  00004B                     _revisao:
   401                           	opt stack 0
   402  00004B                     	ds	1
   403  00004C                     _versao:
   404                           	opt stack 0
   405  00004C                     	ds	1
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           
   415                           	psect	bssBANK0
   416  000071                     __pbssBANK0:
   417                           	opt stack 0
   418  000071                     _buffer:
   419                           	opt stack 0
   420  000071                     	ds	16
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           postinc0	equ	0xFEE
   426                           wreg	equ	0xFE8
   427                           postdec1	equ	0xFE5
   428                           fsr1l	equ	0xFE1
   429                           
   430                           	psect	cstackBANK0
   431  000060                     __pcstackBANK0:
   432                           	opt stack 0
   433  000060                     ?_sprintf:
   434                           	opt stack 0
   435  000060                     calculaCRCBUFFRESP@crc1:
   436                           	opt stack 0
   437  000060                     verificaCRCBUFFCOM@crc1:
   438                           	opt stack 0
   439  000060                     sprintf@sp:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x0
   443  000060                     	ds	1
   444  000061                     calculaCRCBUFFRESP@crc2:
   445                           	opt stack 0
   446  000061                     verificaCRCBUFFCOM@crc2:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x1
   450  000061                     	ds	1
   451  000062                     verificaCRCBUFFCOM@CRC_OK:
   452                           	opt stack 0
   453  000062                     calculaCRCBUFFRESP@crc:
   454                           	opt stack 0
   455  000062                     sprintf@f:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x2
   459  000062                     	ds	1
   460  000063                     verificaCRCBUFFCOM@crc:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x3
   464  000063                     	ds	1
   465  000064                     ??_trataComando:
   466                           
   467                           ; 1 bytes @ 0x4
   468  000064                     	ds	2
   469  000066                     trataComando@iterator:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x6
   473  000066                     	ds	4
   474  00006A                     sprintf@ap:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0xA
   478  00006A                     	ds	2
   479  00006C                     sprintf@flag:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0xC
   483  00006C                     	ds	1
   484  00006D                     sprintf@prec:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0xD
   488  00006D                     	ds	1
   489  00006E                     sprintf@val:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0xE
   493  00006E                     	ds	2
   494  000070                     sprintf@c:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x10
   498  000070                     	ds	1
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	cstackCOMRAM
   509  000001                     __pcstackCOMRAM:
   510                           	opt stack 0
   511  000001                     ??_pic_isr:
   512  000001                     
   513                           ; 1 bytes @ 0x0
   514  000001                     	ds	17
   515  000012                     ??_Delay10KTCYx:
   516  000012                     ?_crc16:
   517                           	opt stack 0
   518  000012                     ?___lwdiv:
   519                           	opt stack 0
   520  000012                     enviaByte@BYTE:
   521                           	opt stack 0
   522  000012                     Delay10TCYx@unit:
   523                           	opt stack 0
   524  000012                     Delay1KTCYx@unit:
   525                           	opt stack 0
   526  000012                     crc16@data_p:
   527                           	opt stack 0
   528  000012                     tx_data@cont:
   529                           	opt stack 0
   530  000012                     ___lwdiv@dividend:
   531                           	opt stack 0
   532  000012                     memcpy@d1:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x11
   536  000012                     	ds	1
   537  000013                     ??_SetDDRamAddr:
   538  000013                     WriteCmdXLCD@cmd:
   539                           	opt stack 0
   540  000013                     WriteDataXLCD@data:
   541                           	opt stack 0
   542  000013                     Delay10KTCYx@unit:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x12
   546  000013                     	ds	1
   547  000014                     crc16@length:
   548                           	opt stack 0
   549  000014                     putrsXLCD@buffer:
   550                           	opt stack 0
   551  000014                     ___lwdiv@divisor:
   552                           	opt stack 0
   553  000014                     memcpy@s1:
   554                           	opt stack 0
   555                           
   556                           ; 3 bytes @ 0x13
   557  000014                     	ds	2
   558  000016                     ??_crc16:
   559  000016                     SetDDRamAddr@DDaddr:
   560                           	opt stack 0
   561  000016                     ___lwdiv@counter:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x15
   565  000016                     	ds	1
   566  000017                     OpenXLCD@lcdtype:
   567                           	opt stack 0
   568  000017                     ___lwdiv@quotient:
   569                           	opt stack 0
   570  000017                     memcpy@n:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x16
   574  000017                     	ds	1
   575  000018                     
   576                           ; 1 bytes @ 0x17
   577  000018                     	ds	1
   578  000019                     ?___lwmod:
   579                           	opt stack 0
   580  000019                     ___lwmod@dividend:
   581                           	opt stack 0
   582  000019                     memcpy@s:
   583                           	opt stack 0
   584                           
   585                           ; 3 bytes @ 0x18
   586  000019                     	ds	1
   587  00001A                     crc16@i:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x19
   591  00001A                     	ds	1
   592  00001B                     crc16@data:
   593                           	opt stack 0
   594  00001B                     ___lwmod@divisor:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x1A
   598  00001B                     	ds	1
   599  00001C                     memcpy@d:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x1B
   603  00001C                     	ds	1
   604  00001D                     ___lwmod@counter:
   605                           	opt stack 0
   606  00001D                     crc16@crc:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x1C
   610  00001D                     	ds	1
   611  00001E                     ??_sprintf:
   612                           
   613                           ; 1 bytes @ 0x1D
   614  00001E                     	ds	1
   615  00001F                     ??_calculaCRCBUFFRESP:
   616  00001F                     telas@troca_tela:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x1E
   620  00001F                     	ds	1
   621  000020                     ??_troca_telas:
   622  000020                     ??_trata_despertador:
   623                           
   624                           ; 1 bytes @ 0x1F
   625  000020                     	ds	2
   626  000022                     tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           ; 1 bytes @ 0x21
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 299 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   655 ;;      Params:         0       0       0       0       0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels required when called:    8
   661 ;; This function calls:
   662 ;;		_despertar
   663 ;;		_init_XLCD
   664 ;;		_maquinaEstado
   665 ;;		_telas
   666 ;;		_trata_data
   667 ;;		_trata_despertador
   668 ;;		_trata_hora
   669 ;;		_troca_telas
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text0
   676  000F6C                     __ptext0:
   677                           	opt stack 0
   678  000F6C                     _main:
   679                           	opt stack 23
   680                           
   681                           ;main.c: 300: T0CONbits.TMR0ON = 0;
   682                           
   683                           ;incstack = 0
   684  000F6C  9ED5               	bcf	4053,7,c	;volatile
   685                           
   686                           ;main.c: 301: INTCONbits.TMR0IE = 1;
   687  000F6E  8AF2               	bsf	intcon,5,c	;volatile
   688                           
   689                           ;main.c: 302: INTCONbits.TMR0IF = 0;
   690  000F70  94F2               	bcf	intcon,2,c	;volatile
   691                           
   692                           ;main.c: 303: T0CONbits.T08BIT = 0;
   693  000F72  9CD5               	bcf	4053,6,c	;volatile
   694                           
   695                           ;main.c: 304: T0CONbits.PSA = 0;
   696  000F74  96D5               	bcf	4053,3,c	;volatile
   697                           
   698                           ;main.c: 306: T0CONbits.T0PS0 = 1;
   699  000F76  80D5               	bsf	4053,0,c	;volatile
   700                           
   701                           ;main.c: 307: T0CONbits.T0PS1 = 1;
   702  000F78  82D5               	bsf	4053,1,c	;volatile
   703                           
   704                           ;main.c: 308: T0CONbits.T0PS2 = 0;
   705  000F7A  94D5               	bcf	4053,2,c	;volatile
   706                           
   707                           ;main.c: 310: T0CONbits.T0CS = 0;
   708  000F7C  9AD5               	bcf	4053,5,c	;volatile
   709                           
   710                           ;main.c: 311: TMR0 = 32768;
   711  000F7E  0E80               	movlw	128
   712  000F80  6ED7               	movwf	4055,c	;volatile
   713  000F82  0E00               	movlw	0
   714  000F84  6ED6               	movwf	4054,c	;volatile
   715                           
   716                           ;main.c: 312: T0CONbits.TMR0ON = 1;
   717  000F86  8ED5               	bsf	4053,7,c	;volatile
   718                           
   719                           ;main.c: 313: INTCONbits.GIEH = 1;
   720  000F88  8EF2               	bsf	intcon,7,c	;volatile
   721                           
   722                           ;main.c: 314: INTCONbits.GIEL = 1;
   723  000F8A  8CF2               	bsf	intcon,6,c	;volatile
   724                           
   725                           ;main.c: 317: TRISA = 0x00000000;
   726  000F8C  0E00               	movlw	0
   727  000F8E  6E92               	movwf	3986,c	;volatile
   728                           
   729                           ;main.c: 318: init_XLCD();
   730  000F90  ECA9  F00A         	call	_init_XLCD	;wreg free
   731                           
   732                           ;main.c: 320: SPBRG = (((48000000/64)/9600)-1);
   733  000F94  0E4D               	movlw	77
   734  000F96  6EAF               	movwf	4015,c	;volatile
   735                           
   736                           ;main.c: 324: RCSTA = 0b10010000;
   737  000F98  0E90               	movlw	144
   738  000F9A  6EAB               	movwf	4011,c	;volatile
   739                           
   740                           ;main.c: 325: TXSTA = 0b00100000;
   741  000F9C  0E20               	movlw	32
   742  000F9E  6EAC               	movwf	4012,c	;volatile
   743                           
   744                           ;main.c: 326: TRISCbits.RC6 = 0;
   745  000FA0  9C94               	bcf	3988,6,c	;volatile
   746                           
   747                           ;main.c: 327: TRISCbits.RC7 = 1;
   748  000FA2  8E94               	bsf	3988,7,c	;volatile
   749                           
   750                           ;main.c: 329: RCIF = 0;
   751  000FA4  9A9E               	bcf	3998,5,c	;volatile
   752                           
   753                           ;main.c: 330: RCIP = 0;
   754  000FA6  9A9F               	bcf	3999,5,c	;volatile
   755                           
   756                           ;main.c: 331: RCIE = 1;
   757  000FA8  8A9D               	bsf	3997,5,c	;volatile
   758                           
   759                           ;main.c: 332: PEIE = 1;
   760  000FAA  8CF2               	bsf	intcon,6,c	;volatile
   761  000FAC                     l2812:
   762                           
   763                           ;main.c: 338: if(contador_um_segundo == 1){
   764  000FAC  042F               	decf	_contador_um_segundo,w,c
   765  000FAE  A4D8               	btfss	status,2,c
   766  000FB0  D00D               	goto	l2826
   767                           
   768                           ;main.c: 339: contador_um_segundo = 0;
   769  000FB2  0E00               	movlw	0
   770  000FB4  6E2F               	movwf	_contador_um_segundo,c
   771                           
   772                           ;main.c: 340: trata_hora();
   773  000FB6  EC8A  F00A         	call	_trata_hora	;wreg free
   774                           
   775                           ;main.c: 341: trata_data();
   776  000FBA  EC7A  F008         	call	_trata_data	;wreg free
   777                           
   778                           ;main.c: 342: despertar();
   779  000FBE  EC63  F00A         	call	_despertar	;wreg free
   780                           
   781                           ;main.c: 343: telas(0);
   782  000FC2  0E00               	movlw	0
   783  000FC4  EC3B  F007         	call	_telas
   784                           
   785                           ;main.c: 344: maquinaEstado();
   786  000FC8  EC70  F009         	call	_maquinaEstado	;wreg free
   787  000FCC                     l2826:
   788                           
   789                           ;main.c: 345: }
   790                           ;main.c: 346: if(tela_atual == 2){
   791  000FCC  0E02               	movlw	2
   792  000FCE  184A               	xorwf	_tela_atual,w,c
   793  000FD0  B4D8               	btfsc	status,2,c
   794                           
   795                           ;main.c: 347: trata_despertador();
   796  000FD2  EC7B  F007         	call	_trata_despertador	;wreg free
   797                           
   798                           ;main.c: 348: }
   799                           ;main.c: 349: troca_telas();
   800  000FD6  EC4F  F00A         	call	_troca_telas	;wreg free
   801  000FDA  D7E8               	goto	l2812
   802  000FDC                     __end_of_main:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           intcon	equ	0xFF2
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           postdec1	equ	0xFE5
   812                           fsr1l	equ	0xFE1
   813                           status	equ	0xFD8
   814                           
   815 ;; *************** function _troca_telas *****************
   816 ;; Defined at:
   817 ;;		line 169 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   831 ;;      Params:         0       0       0       0       0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0
   833 ;;      Temps:          2       0       0       0       0       0       0       0       0
   834 ;;      Totals:         2       0       0       0       0       0       0       0       0
   835 ;;Total ram usage:        2 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    7
   838 ;; This function calls:
   839 ;;		_telas
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text1
   846  00149E                     __ptext1:
   847                           	opt stack 0
   848  00149E                     _troca_telas:
   849                           	opt stack 23
   850                           
   851                           ;main.c: 170: if(PORTDbits.RD0){
   852                           
   853                           ;incstack = 0
   854  00149E  A083               	btfss	3971,0,c	;volatile
   855  0014A0  0012               	return	
   856                           
   857                           ;main.c: 171: _delay((unsigned long)((150)*(48000000/4000.0)));
   858  0014A2  0E0A               	movlw	10
   859  0014A4  6E21               	movwf	(??_troca_telas+1)& (0+255),c
   860  0014A6  0E22               	movlw	34
   861  0014A8  6E20               	movwf	??_troca_telas& (0+255),c
   862  0014AA  0EA1               	movlw	161
   863  0014AC                     u1837:
   864  0014AC  2EE8               	decfsz	wreg,f,c
   865  0014AE  D7FE               	bra	u1837
   866  0014B0  2E20               	decfsz	??_troca_telas& (0+255),f,c
   867  0014B2  D7FC               	bra	u1837
   868  0014B4  2E21               	decfsz	(??_troca_telas+1)& (0+255),f,c
   869  0014B6  D7FA               	bra	u1837
   870  0014B8  F000               	nop	
   871                           
   872                           ;main.c: 172: telas(1);
   873  0014BA  0E01               	movlw	1
   874  0014BC  EC3B  F007         	call	_telas
   875  0014C0                     l151:
   876  0014C0  A083               	btfss	3971,0,c	;volatile
   877  0014C2  0012               	return	
   878  0014C4  D7FD               	goto	l151
   879  0014C6                     __end_of_troca_telas:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           intcon	equ	0xFF2
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           postdec1	equ	0xFE5
   889                           fsr1l	equ	0xFE1
   890                           status	equ	0xFD8
   891                           
   892 ;; *************** function _trata_hora *****************
   893 ;; Defined at:
   894 ;;		line 227 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   908 ;;      Params:         0       0       0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text2
   923  001514                     __ptext2:
   924                           	opt stack 0
   925  001514                     _trata_hora:
   926                           	opt stack 29
   927                           
   928                           ;main.c: 228: if((segundo) == 60){
   929                           
   930                           ;incstack = 0
   931  001514  0E3C               	movlw	60
   932  001516  182C               	xorwf	_segundo,w,c
   933  001518  A4D8               	btfss	status,2,c
   934  00151A  D004               	goto	l1676
   935                           
   936                           ;main.c: 229: minuto += 1;
   937  00151C  2A2D               	incf	_minuto,f,c
   938                           
   939                           ;main.c: 230: segundo = 0;
   940  00151E  0E00               	movlw	0
   941  001520  6E2C               	movwf	_segundo,c
   942                           
   943                           ;main.c: 231: return;
   944  001522  0012               	return	
   945  001524                     l1676:
   946                           
   947                           ;main.c: 232: }
   948                           ;main.c: 233: if((minuto) == 60){
   949  001524  0E3C               	movlw	60
   950  001526  182D               	xorwf	_minuto,w,c
   951  001528  A4D8               	btfss	status,2,c
   952  00152A  0012               	return	
   953                           
   954                           ;main.c: 234: hora+=1;
   955  00152C  2A2E               	incf	_hora,f,c
   956                           
   957                           ;main.c: 235: minuto = 0;
   958  00152E  0E00               	movlw	0
   959  001530  6E2D               	movwf	_minuto,c
   960                           
   961                           ;main.c: 236: return;
   962  001532  0012               	return	
   963  001534                     __end_of_trata_hora:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           intcon	equ	0xFF2
   970                           postinc0	equ	0xFEE
   971                           wreg	equ	0xFE8
   972                           postdec1	equ	0xFE5
   973                           fsr1l	equ	0xFE1
   974                           status	equ	0xFD8
   975                           
   976 ;; *************** function _trata_despertador *****************
   977 ;; Defined at:
   978 ;;		line 177 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       0       0       0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0
   994 ;;      Temps:          2       0       0       0       0       0       0       0       0
   995 ;;      Totals:         2       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    7
   999 ;; This function calls:
  1000 ;;		_telas
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text3
  1007  000EF6                     __ptext3:
  1008                           	opt stack 0
  1009  000EF6                     _trata_despertador:
  1010                           	opt stack 23
  1011                           
  1012                           ;main.c: 178: if(PORTDbits.RD1){
  1013                           
  1014                           ;incstack = 0
  1015  000EF6  A283               	btfss	3971,1,c	;volatile
  1016  000EF8  D01B               	goto	l157
  1017                           
  1018                           ;main.c: 179: _delay((unsigned long)((150)*(48000000/4000.0)));
  1019  000EFA  0E0A               	movlw	10
  1020  000EFC  6E21               	movwf	(??_trata_despertador+1)& (0+255),c
  1021  000EFE  0E22               	movlw	34
  1022  000F00  6E20               	movwf	??_trata_despertador& (0+255),c
  1023  000F02  0EA1               	movlw	161
  1024  000F04                     u1847:
  1025  000F04  2EE8               	decfsz	wreg,f,c
  1026  000F06  D7FE               	bra	u1847
  1027  000F08  2E20               	decfsz	??_trata_despertador& (0+255),f,c
  1028  000F0A  D7FC               	bra	u1847
  1029  000F0C  2E21               	decfsz	(??_trata_despertador+1)& (0+255),f,c
  1030  000F0E  D7FA               	bra	u1847
  1031  000F10  F000               	nop	
  1032                           
  1033                           ;main.c: 180: if(desp_hora == 24){
  1034  000F12  0E18               	movlw	24
  1035  000F14  1847               	xorwf	_desp_hora,w,c
  1036  000F16  A4D8               	btfss	status,2,c
  1037  000F18  D003               	goto	l2746
  1038                           
  1039                           ;main.c: 181: desp_hora = 0;
  1040  000F1A  0E00               	movlw	0
  1041  000F1C  6E47               	movwf	_desp_hora,c
  1042                           
  1043                           ;main.c: 182: }else{
  1044  000F1E  D001               	goto	l2748
  1045  000F20                     l2746:
  1046                           
  1047                           ;main.c: 183: desp_hora+=1;
  1048  000F20  2A47               	incf	_desp_hora,f,c
  1049  000F22                     l2748:
  1050                           
  1051                           ;main.c: 184: }
  1052                           ;main.c: 185: despertou = 0;
  1053  000F22  0E00               	movlw	0
  1054  000F24  6E2A               	movwf	_despertou,c
  1055                           
  1056                           ;main.c: 186: telas(0);
  1057  000F26  0E00               	movlw	0
  1058  000F28  EC3B  F007         	call	_telas
  1059  000F2C                     l160:
  1060  000F2C  B283               	btfsc	3971,1,c	;volatile
  1061  000F2E  D7FE               	goto	l160
  1062  000F30                     l157:
  1063                           
  1064                           ;main.c: 188: }
  1065                           ;main.c: 189: if(PORTDbits.RD2){
  1066  000F30  A483               	btfss	3971,2,c	;volatile
  1067  000F32  0012               	return	
  1068                           
  1069                           ;main.c: 190: _delay((unsigned long)((150)*(48000000/4000.0)));
  1070  000F34  0E0A               	movlw	10
  1071  000F36  6E21               	movwf	(??_trata_despertador+1)& (0+255),c
  1072  000F38  0E22               	movlw	34
  1073  000F3A  6E20               	movwf	??_trata_despertador& (0+255),c
  1074  000F3C  0EA1               	movlw	161
  1075  000F3E                     u1857:
  1076  000F3E  2EE8               	decfsz	wreg,f,c
  1077  000F40  D7FE               	bra	u1857
  1078  000F42  2E20               	decfsz	??_trata_despertador& (0+255),f,c
  1079  000F44  D7FC               	bra	u1857
  1080  000F46  2E21               	decfsz	(??_trata_despertador+1)& (0+255),f,c
  1081  000F48  D7FA               	bra	u1857
  1082  000F4A  F000               	nop	
  1083                           
  1084                           ;main.c: 191: if(desp_min == 60){
  1085  000F4C  0E3C               	movlw	60
  1086  000F4E  1846               	xorwf	_desp_min,w,c
  1087  000F50  A4D8               	btfss	status,2,c
  1088  000F52  D003               	goto	l2758
  1089                           
  1090                           ;main.c: 192: desp_min = 0;
  1091  000F54  0E00               	movlw	0
  1092  000F56  6E46               	movwf	_desp_min,c
  1093                           
  1094                           ;main.c: 193: }else{
  1095  000F58  D001               	goto	l2760
  1096  000F5A                     l2758:
  1097                           
  1098                           ;main.c: 194: desp_min+=1;
  1099  000F5A  2A46               	incf	_desp_min,f,c
  1100  000F5C                     l2760:
  1101                           
  1102                           ;main.c: 195: }
  1103                           ;main.c: 196: despertou = 0;
  1104  000F5C  0E00               	movlw	0
  1105  000F5E  6E2A               	movwf	_despertou,c
  1106                           
  1107                           ;main.c: 197: telas(0);
  1108  000F60  0E00               	movlw	0
  1109  000F62  EC3B  F007         	call	_telas
  1110  000F66                     l166:
  1111  000F66  A483               	btfss	3971,2,c	;volatile
  1112  000F68  0012               	return	
  1113  000F6A  D7FD               	goto	l166
  1114  000F6C                     __end_of_trata_despertador:
  1115                           	opt stack 0
  1116                           tblptru	equ	0xFF8
  1117                           tblptrh	equ	0xFF7
  1118                           tblptrl	equ	0xFF6
  1119                           tablat	equ	0xFF5
  1120                           intcon	equ	0xFF2
  1121                           postinc0	equ	0xFEE
  1122                           wreg	equ	0xFE8
  1123                           postdec1	equ	0xFE5
  1124                           fsr1l	equ	0xFE1
  1125                           status	equ	0xFD8
  1126                           
  1127 ;; *************** function _telas *****************
  1128 ;; Defined at:
  1129 ;;		line 142 in file "main.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  troca_tela      1    wreg     unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  troca_tela      1   30[COMRAM] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0
  1144 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1146 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1147 ;;Total ram usage:        1 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    6
  1150 ;; This function calls:
  1151 ;;		_limpa_tela
  1152 ;;		_tela_1
  1153 ;;		_tela_2
  1154 ;;		_tela_3
  1155 ;;		_tela_4
  1156 ;; This function is called by:
  1157 ;;		_troca_telas
  1158 ;;		_trata_despertador
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text4
  1164  000E76                     __ptext4:
  1165                           	opt stack 0
  1166  000E76                     _telas:
  1167                           	opt stack 23
  1168                           
  1169                           ;incstack = 0
  1170                           ;telas@troca_tela stored from wreg
  1171  000E76  6E1F               	movwf	telas@troca_tela,c
  1172                           
  1173                           ;main.c: 143: if(troca_tela == 1){
  1174  000E78  041F               	decf	telas@troca_tela,w,c
  1175  000E7A  A4D8               	btfss	status,2,c
  1176  000E7C  D027               	goto	l2656
  1177                           
  1178                           ;main.c: 144: if(tela_atual == 4){
  1179  000E7E  0E04               	movlw	4
  1180  000E80  184A               	xorwf	_tela_atual,w,c
  1181  000E82  A4D8               	btfss	status,2,c
  1182  000E84  D007               	goto	l2634
  1183                           
  1184                           ;main.c: 145: limpa_tela();
  1185  000E86  EC77  F00A         	call	_limpa_tela	;wreg free
  1186                           
  1187                           ;main.c: 146: tela_atual = 1;
  1188  000E8A  0E01               	movlw	1
  1189  000E8C  6E4A               	movwf	_tela_atual,c
  1190                           
  1191                           ;main.c: 147: tela_1();
  1192  000E8E  EC55  F006         	call	_tela_1	;wreg free
  1193                           
  1194                           ;main.c: 148: }else if(tela_atual == 1){
  1195  000E92  0012               	return	
  1196  000E94                     l2634:
  1197  000E94  044A               	decf	_tela_atual,w,c
  1198  000E96  A4D8               	btfss	status,2,c
  1199  000E98  D007               	goto	l2642
  1200                           
  1201                           ;main.c: 149: limpa_tela();
  1202  000E9A  EC77  F00A         	call	_limpa_tela	;wreg free
  1203                           
  1204                           ;main.c: 150: tela_atual = 2;
  1205  000E9E  0E02               	movlw	2
  1206  000EA0  6E4A               	movwf	_tela_atual,c
  1207                           
  1208                           ;main.c: 151: tela_2();
  1209  000EA2  ECCE  F008         	call	_tela_2	;wreg free
  1210                           
  1211                           ;main.c: 152: }else if(tela_atual == 2){
  1212  000EA6  0012               	return	
  1213  000EA8                     l2642:
  1214  000EA8  0E02               	movlw	2
  1215  000EAA  184A               	xorwf	_tela_atual,w,c
  1216  000EAC  A4D8               	btfss	status,2,c
  1217  000EAE  D007               	goto	l2650
  1218                           
  1219                           ;main.c: 153: limpa_tela();
  1220  000EB0  EC77  F00A         	call	_limpa_tela	;wreg free
  1221                           
  1222                           ;main.c: 154: tela_atual = 3;
  1223  000EB4  0E03               	movlw	3
  1224  000EB6  6E4A               	movwf	_tela_atual,c
  1225                           
  1226                           ;main.c: 155: tela_3();
  1227  000EB8  ECA5  F008         	call	_tela_3	;wreg free
  1228                           
  1229                           ;main.c: 156: }else{
  1230  000EBC  0012               	return	
  1231  000EBE                     l2650:
  1232                           
  1233                           ;main.c: 157: limpa_tela();
  1234  000EBE  EC77  F00A         	call	_limpa_tela	;wreg free
  1235                           
  1236                           ;main.c: 158: tela_atual = 4;
  1237  000EC2  0E04               	movlw	4
  1238  000EC4  6E4A               	movwf	_tela_atual,c
  1239                           
  1240                           ;main.c: 159: tela_4();
  1241  000EC6  EC49  F009         	call	_tela_4	;wreg free
  1242                           
  1243                           ;main.c: 160: }
  1244                           ;main.c: 161: }else{
  1245  000ECA  0012               	return	
  1246  000ECC                     l2656:
  1247                           
  1248                           ;main.c: 162: if(tela_atual == 1) tela_1();
  1249  000ECC  044A               	decf	_tela_atual,w,c
  1250  000ECE  B4D8               	btfsc	status,2,c
  1251  000ED0  EC55  F006         	call	_tela_1	;wreg free
  1252                           
  1253                           ;main.c: 163: if(tela_atual == 2) tela_2();
  1254  000ED4  0E02               	movlw	2
  1255  000ED6  184A               	xorwf	_tela_atual,w,c
  1256  000ED8  B4D8               	btfsc	status,2,c
  1257  000EDA  ECCE  F008         	call	_tela_2	;wreg free
  1258                           
  1259                           ;main.c: 164: if(tela_atual == 3) tela_3();
  1260  000EDE  0E03               	movlw	3
  1261  000EE0  184A               	xorwf	_tela_atual,w,c
  1262  000EE2  B4D8               	btfsc	status,2,c
  1263  000EE4  ECA5  F008         	call	_tela_3	;wreg free
  1264                           
  1265                           ;main.c: 165: if(tela_atual == 4) tela_4();
  1266  000EE8  0E04               	movlw	4
  1267  000EEA  184A               	xorwf	_tela_atual,w,c
  1268  000EEC  A4D8               	btfss	status,2,c
  1269  000EEE  0012               	return	
  1270  000EF0  EC49  F009         	call	_tela_4	;wreg free
  1271  000EF4  0012               	return	
  1272  000EF6                     __end_of_telas:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           intcon	equ	0xFF2
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           postdec1	equ	0xFE5
  1282                           fsr1l	equ	0xFE1
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _tela_4 *****************
  1286 ;; Defined at:
  1287 ;;		line 125 in file "main.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1301 ;;      Params:         0       0       0       0       0       0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1304 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    5
  1308 ;; This function calls:
  1309 ;;		_SetDDRamAddr
  1310 ;;		_putrsXLCD
  1311 ;;		_sprintf
  1312 ;; This function is called by:
  1313 ;;		_telas
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text5
  1318  001292                     __ptext5:
  1319                           	opt stack 0
  1320  001292                     _tela_4:
  1321                           	opt stack 23
  1322                           
  1323                           ;main.c: 126: SetDDRamAddr(0x03);
  1324                           
  1325                           ;incstack = 0
  1326  001292  0E03               	movlw	3
  1327  001294  EC20  F009         	call	_SetDDRamAddr
  1328                           
  1329                           ;main.c: 127: putrsXLCD("Temperatura");
  1330  001298  0E1C               	movlw	low STR_9
  1331  00129A  6E14               	movwf	putrsXLCD@buffer,c
  1332  00129C  0E08               	movlw	high STR_9
  1333  00129E  6E15               	movwf	putrsXLCD@buffer+1,c
  1334  0012A0  EC1F  F008         	call	_putrsXLCD	;wreg free
  1335                           
  1336                           ;main.c: 128: SetDDRamAddr(0x46);
  1337  0012A4  0E46               	movlw	70
  1338  0012A6  EC20  F009         	call	_SetDDRamAddr
  1339                           
  1340                           ;main.c: 129: sprintf(buffer, "%d C", temperatura);
  1341  0012AA  0E71               	movlw	low _buffer
  1342  0012AC  0100               	movlb	0	; () banked
  1343  0012AE  6F60               	movwf	sprintf@sp& (0+255),b
  1344  0012B0  0E00               	movlw	high _buffer
  1345  0012B2  0100               	movlb	0	; () banked
  1346  0012B4  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1347  0012B6  0E61               	movlw	low STR_10
  1348  0012B8  0100               	movlb	0	; () banked
  1349  0012BA  6F62               	movwf	sprintf@f& (0+255),b
  1350  0012BC  0E08               	movlw	high STR_10
  1351  0012BE  0100               	movlb	0	; () banked
  1352  0012C0  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1353  0012C2  C022  F064         	movff	_temperatura,?_sprintf+4
  1354  0012C6  C023  F065         	movff	_temperatura+1,?_sprintf+5
  1355  0012CA  C024  F066         	movff	_temperatura+2,?_sprintf+6
  1356  0012CE  EC27  F005         	call	_sprintf	;wreg free
  1357                           
  1358                           ;main.c: 130: putrsXLCD(buffer);
  1359  0012D2  0E71               	movlw	low _buffer
  1360  0012D4  6E14               	movwf	putrsXLCD@buffer,c
  1361  0012D6  0E00               	movlw	high _buffer
  1362  0012D8  6E15               	movwf	putrsXLCD@buffer+1,c
  1363  0012DA  EC1F  F008         	call	_putrsXLCD	;wreg free
  1364  0012DE  0012               	return	
  1365  0012E0                     __end_of_tela_4:
  1366                           	opt stack 0
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           intcon	equ	0xFF2
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           postdec1	equ	0xFE5
  1375                           fsr1l	equ	0xFE1
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function _tela_3 *****************
  1379 ;; Defined at:
  1380 ;;		line 117 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    5
  1401 ;; This function calls:
  1402 ;;		_SetDDRamAddr
  1403 ;;		_putrsXLCD
  1404 ;;		_sprintf
  1405 ;; This function is called by:
  1406 ;;		_telas
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text6
  1411  00114A                     __ptext6:
  1412                           	opt stack 0
  1413  00114A                     _tela_3:
  1414                           	opt stack 23
  1415                           
  1416                           ;main.c: 118: SetDDRamAddr(0x03);
  1417                           
  1418                           ;incstack = 0
  1419  00114A  0E03               	movlw	3
  1420  00114C  EC20  F009         	call	_SetDDRamAddr
  1421                           
  1422                           ;main.c: 119: putrsXLCD("Despertador");
  1423  001150  0E28               	movlw	low STR_7
  1424  001152  6E14               	movwf	putrsXLCD@buffer,c
  1425  001154  0E08               	movlw	high STR_7
  1426  001156  6E15               	movwf	putrsXLCD@buffer+1,c
  1427  001158  EC1F  F008         	call	_putrsXLCD	;wreg free
  1428                           
  1429                           ;main.c: 120: SetDDRamAddr(0x45);
  1430  00115C  0E45               	movlw	69
  1431  00115E  EC20  F009         	call	_SetDDRamAddr
  1432                           
  1433                           ;main.c: 121: sprintf(buffer, "%d.%d", versao, revisao);
  1434  001162  0E71               	movlw	low _buffer
  1435  001164  0100               	movlb	0	; () banked
  1436  001166  6F60               	movwf	sprintf@sp& (0+255),b
  1437  001168  0E00               	movlw	high _buffer
  1438  00116A  0100               	movlb	0	; () banked
  1439  00116C  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1440  00116E  0E5B               	movlw	low STR_8
  1441  001170  0100               	movlb	0	; () banked
  1442  001172  6F62               	movwf	sprintf@f& (0+255),b
  1443  001174  0E08               	movlw	high STR_8
  1444  001176  0100               	movlb	0	; () banked
  1445  001178  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1446  00117A  C04C  F064         	movff	_versao,?_sprintf+4
  1447  00117E  0100               	movlb	0	; () banked
  1448  001180  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1449  001182  C04B  F066         	movff	_revisao,?_sprintf+6
  1450  001186  0100               	movlb	0	; () banked
  1451  001188  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1452  00118A  EC27  F005         	call	_sprintf	;wreg free
  1453                           
  1454                           ;main.c: 122: putrsXLCD(buffer);
  1455  00118E  0E71               	movlw	low _buffer
  1456  001190  6E14               	movwf	putrsXLCD@buffer,c
  1457  001192  0E00               	movlw	high _buffer
  1458  001194  6E15               	movwf	putrsXLCD@buffer+1,c
  1459  001196  EC1F  F008         	call	_putrsXLCD	;wreg free
  1460  00119A  0012               	return	
  1461  00119C                     __end_of_tela_3:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           intcon	equ	0xFF2
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           postdec1	equ	0xFE5
  1471                           fsr1l	equ	0xFE1
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function _tela_2 *****************
  1475 ;; Defined at:
  1476 ;;		line 108 in file "main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    5
  1497 ;; This function calls:
  1498 ;;		_SetDDRamAddr
  1499 ;;		_putrsXLCD
  1500 ;;		_sprintf
  1501 ;; This function is called by:
  1502 ;;		_telas
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text7
  1507  00119C                     __ptext7:
  1508                           	opt stack 0
  1509  00119C                     _tela_2:
  1510                           	opt stack 23
  1511                           
  1512                           ;main.c: 109: SetDDRamAddr(0x05);
  1513                           
  1514                           ;incstack = 0
  1515  00119C  0E05               	movlw	5
  1516  00119E  EC20  F009         	call	_SetDDRamAddr
  1517                           
  1518                           ;main.c: 110: putrsXLCD("Alarme");
  1519  0011A2  0E54               	movlw	low STR_5
  1520  0011A4  6E14               	movwf	putrsXLCD@buffer,c
  1521  0011A6  0E08               	movlw	high STR_5
  1522  0011A8  6E15               	movwf	putrsXLCD@buffer+1,c
  1523  0011AA  EC1F  F008         	call	_putrsXLCD	;wreg free
  1524                           
  1525                           ;main.c: 111: SetDDRamAddr(0x46);
  1526  0011AE  0E46               	movlw	70
  1527  0011B0  EC20  F009         	call	_SetDDRamAddr
  1528                           
  1529                           ;main.c: 112: sprintf(buffer, "%d:%d", desp_hora, desp_min);
  1530  0011B4  0E71               	movlw	low _buffer
  1531  0011B6  0100               	movlb	0	; () banked
  1532  0011B8  6F60               	movwf	sprintf@sp& (0+255),b
  1533  0011BA  0E00               	movlw	high _buffer
  1534  0011BC  0100               	movlb	0	; () banked
  1535  0011BE  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1536  0011C0  0E40               	movlw	low (STR_2+3)
  1537  0011C2  0100               	movlb	0	; () banked
  1538  0011C4  6F62               	movwf	sprintf@f& (0+255),b
  1539  0011C6  0E08               	movlw	high (STR_2+3)
  1540  0011C8  0100               	movlb	0	; () banked
  1541  0011CA  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1542  0011CC  C047  F064         	movff	_desp_hora,?_sprintf+4
  1543  0011D0  0100               	movlb	0	; () banked
  1544  0011D2  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1545  0011D4  C046  F066         	movff	_desp_min,?_sprintf+6
  1546  0011D8  0100               	movlb	0	; () banked
  1547  0011DA  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1548  0011DC  EC27  F005         	call	_sprintf	;wreg free
  1549                           
  1550                           ;main.c: 113: putrsXLCD(buffer);
  1551  0011E0  0E71               	movlw	low _buffer
  1552  0011E2  6E14               	movwf	putrsXLCD@buffer,c
  1553  0011E4  0E00               	movlw	high _buffer
  1554  0011E6  6E15               	movwf	putrsXLCD@buffer+1,c
  1555  0011E8  EC1F  F008         	call	_putrsXLCD	;wreg free
  1556  0011EC  0012               	return	
  1557  0011EE                     __end_of_tela_2:
  1558                           	opt stack 0
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           intcon	equ	0xFF2
  1564                           postinc0	equ	0xFEE
  1565                           wreg	equ	0xFE8
  1566                           postdec1	equ	0xFE5
  1567                           fsr1l	equ	0xFE1
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function _tela_1 *****************
  1571 ;; Defined at:
  1572 ;;		line 89 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    5
  1593 ;; This function calls:
  1594 ;;		_SetDDRamAddr
  1595 ;;		_putrsXLCD
  1596 ;;		_sprintf
  1597 ;; This function is called by:
  1598 ;;		_telas
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text8
  1603  000CAA                     __ptext8:
  1604                           	opt stack 0
  1605  000CAA                     _tela_1:
  1606                           	opt stack 23
  1607                           
  1608                           ;main.c: 90: SetDDRamAddr(0x00);
  1609                           
  1610                           ;incstack = 0
  1611  000CAA  0E00               	movlw	0
  1612  000CAC  EC20  F009         	call	_SetDDRamAddr
  1613                           
  1614                           ;main.c: 91: putrsXLCD("Hora: ");
  1615  000CB0  0E46               	movlw	low STR_1
  1616  000CB2  6E14               	movwf	putrsXLCD@buffer,c
  1617  000CB4  0E08               	movlw	high STR_1
  1618  000CB6  6E15               	movwf	putrsXLCD@buffer+1,c
  1619  000CB8  EC1F  F008         	call	_putrsXLCD	;wreg free
  1620                           
  1621                           ;main.c: 92: sprintf(buffer, "%d:%d:%d", hora, minuto, segundo);
  1622  000CBC  0E71               	movlw	low _buffer
  1623  000CBE  0100               	movlb	0	; () banked
  1624  000CC0  6F60               	movwf	sprintf@sp& (0+255),b
  1625  000CC2  0E00               	movlw	high _buffer
  1626  000CC4  0100               	movlb	0	; () banked
  1627  000CC6  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1628  000CC8  0E3D               	movlw	low STR_2
  1629  000CCA  0100               	movlb	0	; () banked
  1630  000CCC  6F62               	movwf	sprintf@f& (0+255),b
  1631  000CCE  0E08               	movlw	high STR_2
  1632  000CD0  0100               	movlb	0	; () banked
  1633  000CD2  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1634  000CD4  C02E  F064         	movff	_hora,?_sprintf+4
  1635  000CD8  0100               	movlb	0	; () banked
  1636  000CDA  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1637  000CDC  C02D  F066         	movff	_minuto,?_sprintf+6
  1638  000CE0  0100               	movlb	0	; () banked
  1639  000CE2  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1640  000CE4  C02C  F068         	movff	_segundo,?_sprintf+8
  1641  000CE8  0100               	movlb	0	; () banked
  1642  000CEA  6B69               	clrf	(?_sprintf+9)& (0+255),b
  1643  000CEC  EC27  F005         	call	_sprintf	;wreg free
  1644                           
  1645                           ;main.c: 93: putrsXLCD(buffer);
  1646  000CF0  0E71               	movlw	low _buffer
  1647  000CF2  6E14               	movwf	putrsXLCD@buffer,c
  1648  000CF4  0E00               	movlw	high _buffer
  1649  000CF6  6E15               	movwf	putrsXLCD@buffer+1,c
  1650  000CF8  EC1F  F008         	call	_putrsXLCD	;wreg free
  1651                           
  1652                           ;main.c: 94: SetDDRamAddr(0x40);
  1653  000CFC  0E40               	movlw	64
  1654  000CFE  EC20  F009         	call	_SetDDRamAddr
  1655                           
  1656                           ;main.c: 95: putrsXLCD("Data: ");
  1657  000D02  0E4D               	movlw	low STR_3
  1658  000D04  6E14               	movwf	putrsXLCD@buffer,c
  1659  000D06  0E08               	movlw	high STR_3
  1660  000D08  6E15               	movwf	putrsXLCD@buffer+1,c
  1661  000D0A  EC1F  F008         	call	_putrsXLCD	;wreg free
  1662                           
  1663                           ;main.c: 96: sprintf(buffer, "%d/%d/%d", dia, mes, ano);
  1664  000D0E  0E71               	movlw	low _buffer
  1665  000D10  0100               	movlb	0	; () banked
  1666  000D12  6F60               	movwf	sprintf@sp& (0+255),b
  1667  000D14  0E00               	movlw	high _buffer
  1668  000D16  0100               	movlb	0	; () banked
  1669  000D18  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  1670  000D1A  0E34               	movlw	low STR_4
  1671  000D1C  0100               	movlb	0	; () banked
  1672  000D1E  6F62               	movwf	sprintf@f& (0+255),b
  1673  000D20  0E08               	movlw	high STR_4
  1674  000D22  0100               	movlb	0	; () banked
  1675  000D24  6F63               	movwf	(sprintf@f+1)& (0+255),b
  1676  000D26  C049  F064         	movff	_dia,?_sprintf+4
  1677  000D2A  0100               	movlb	0	; () banked
  1678  000D2C  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1679  000D2E  C048  F066         	movff	_mes,?_sprintf+6
  1680  000D32  0100               	movlb	0	; () banked
  1681  000D34  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1682  000D36  C044  F068         	movff	_ano,?_sprintf+8
  1683  000D3A  C045  F069         	movff	_ano+1,?_sprintf+9
  1684  000D3E  EC27  F005         	call	_sprintf	;wreg free
  1685                           
  1686                           ;main.c: 97: putrsXLCD(buffer);
  1687  000D42  0E71               	movlw	low _buffer
  1688  000D44  6E14               	movwf	putrsXLCD@buffer,c
  1689  000D46  0E00               	movlw	high _buffer
  1690  000D48  6E15               	movwf	putrsXLCD@buffer+1,c
  1691  000D4A  EC1F  F008         	call	_putrsXLCD	;wreg free
  1692  000D4E  0012               	return	
  1693  000D50                     __end_of_tela_1:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           tblptrh	equ	0xFF7
  1697                           tblptrl	equ	0xFF6
  1698                           tablat	equ	0xFF5
  1699                           intcon	equ	0xFF2
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           postdec1	equ	0xFE5
  1703                           fsr1l	equ	0xFE1
  1704                           status	equ	0xFD8
  1705                           
  1706 ;; *************** function _sprintf *****************
  1707 ;; Defined at:
  1708 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  1711 ;;		 -> buffer(16), 
  1712 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  1713 ;;		 -> STR_10(5), STR_8(6), STR_6(6), STR_4(9), 
  1714 ;;		 -> STR_2(9), 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  tmpval          4    0        struct .
  1717 ;;  cp              3    0        PTR const unsigned char 
  1718 ;;  val             2   14[BANK0 ] unsigned int 
  1719 ;;  ap              2   10[BANK0 ] PTR void [1]
  1720 ;;		 -> ?_sprintf(2), 
  1721 ;;  len             2    0        unsigned int 
  1722 ;;  c               1   16[BANK0 ] char 
  1723 ;;  prec            1   13[BANK0 ] char 
  1724 ;;  flag            1   12[BANK0 ] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  2    0[BANK0 ] int 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1734 ;;      Params:         0      10       0       0       0       0       0       0       0
  1735 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1736 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1737 ;;      Totals:         1      17       0       0       0       0       0       0       0
  1738 ;;Total ram usage:       18 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    2
  1741 ;; This function calls:
  1742 ;;		___lwdiv
  1743 ;;		___lwmod
  1744 ;; This function is called by:
  1745 ;;		_tela_1
  1746 ;;		_tela_2
  1747 ;;		_tela_3
  1748 ;;		_tela_4
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text9
  1753  000A4E                     __ptext9:
  1754                           	opt stack 0
  1755  000A4E                     _sprintf:
  1756                           	opt stack 25
  1757                           
  1758                           ;doprnt.c: 494: va_list ap;
  1759                           ;doprnt.c: 499: signed char c;
  1760                           ;doprnt.c: 506: signed char prec;
  1761                           ;doprnt.c: 508: unsigned char flag;
  1762                           ;doprnt.c: 523: union {
  1763                           ;doprnt.c: 524: unsigned long vd;
  1764                           ;doprnt.c: 525: double integ;
  1765                           ;doprnt.c: 526: } tmpval;
  1766                           ;doprnt.c: 528: unsigned int val;
  1767                           ;doprnt.c: 529: unsigned len;
  1768                           ;doprnt.c: 530: const char * cp;
  1769                           ;doprnt.c: 533: *ap = __va_start();
  1770                           
  1771                           ;incstack = 0
  1772  000A4E  0E64               	movlw	low (?_sprintf+4)
  1773  000A50  0100               	movlb	0	; () banked
  1774  000A52  6F6A               	movwf	sprintf@ap& (0+255),b
  1775  000A54  0E00               	movlw	high (?_sprintf+4)
  1776  000A56  0100               	movlb	0	; () banked
  1777  000A58  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
  1778                           
  1779                           ;doprnt.c: 536: while(c = *f++) {
  1780  000A5A  D0A8               	goto	l2506
  1781  000A5C                     l2454:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;doprnt.c: 538: if(c != '%')
  1785  000A5C  0E25               	movlw	37
  1786  000A5E  0100               	movlb	0	; () banked
  1787  000A60  1970               	xorwf	sprintf@c& (0+255),w,b
  1788  000A62  B4D8               	btfsc	status,2,c
  1789  000A64  D00A               	goto	l2460
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;doprnt.c: 540: {
  1793                           ;doprnt.c: 541: ((*sp++ = (c)));
  1794  000A66  C060  FFD9         	movff	sprintf@sp,fsr2l
  1795  000A6A  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  1796  000A6E  C070  FFDF         	movff	sprintf@c,indf2
  1797                           
  1798                           ; BSR set to: 0
  1799  000A72  0100               	movlb	0	; () banked
  1800  000A74  4B60               	infsnz	sprintf@sp& (0+255),f,b
  1801  000A76  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  1802                           
  1803                           ;doprnt.c: 542: continue;
  1804  000A78  D099               	goto	l2506
  1805  000A7A                     l2460:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;doprnt.c: 543: }
  1809                           ;doprnt.c: 548: flag = 0;
  1810  000A7A  0E00               	movlw	0
  1811  000A7C  0100               	movlb	0	; () banked
  1812  000A7E  6F6C               	movwf	sprintf@flag& (0+255),b
  1813                           
  1814                           ; BSR set to: 0
  1815                           
  1816                           ; BSR set to: 0
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;doprnt.c: 822: }
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;doprnt.c: 813: continue;
  1823                           
  1824                           ;doprnt.c: 802: default:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;doprnt.c: 698: case 'i':
  1828                           ;doprnt.c: 699: break;
  1829                           
  1830                           ; BSR set to: 0
  1831                           
  1832                           ;doprnt.c: 697: case 'd':
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;doprnt.c: 638: goto alldone;
  1836                           
  1837                           ;doprnt.c: 637: case 0:
  1838                           
  1839                           ;doprnt.c: 635: switch(c = *f++) {
  1840  000A80  C062  FFF6         	movff	sprintf@f,tblptrl
  1841  000A84  C063  FFF7         	movff	sprintf@f+1,tblptrh
  1842  000A88  0100               	movlb	0	; () banked
  1843  000A8A  4B62               	infsnz	sprintf@f& (0+255),f,b
  1844  000A8C  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  1845  000A8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1846  000A8E  6AF8               	clrf	tblptru,c
  1847  000A90                     	endif
  1848  000A90                     	if	0	;tblptru may be non-zero
  1849  000A90                     	endif
  1850  000A90  0008               	tblrd		*
  1851  000A92  CFF5 F070          	movff	tablat,sprintf@c
  1852  000A96  0100               	movlb	0	; () banked
  1853  000A98  5170               	movf	sprintf@c& (0+255),w,b
  1854                           
  1855                           ; Switch size 1, requested type "space"
  1856                           ; Number of cases is 3, Range of values is 0 to 105
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte           10     6 (average)
  1860                           ;	Chosen strategy is simple_byte
  1861  000A9A  0A00               	xorlw	0	; case 0
  1862  000A9C  B4D8               	btfsc	status,2,c
  1863  000A9E  D095               	goto	l2508
  1864  000AA0  0A64               	xorlw	100	; case 100
  1865  000AA2  B4D8               	btfsc	status,2,c
  1866  000AA4  D003               	goto	l2466
  1867  000AA6  0A0D               	xorlw	13	; case 105
  1868  000AA8  A4D8               	btfss	status,2,c
  1869  000AAA  D080               	goto	l2506
  1870  000AAC                     l2466:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;doprnt.c: 1253: {
  1874                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1875  000AAC  C06A  FFD9         	movff	sprintf@ap,fsr2l
  1876  000AB0  C06B  FFDA         	movff	sprintf@ap+1,fsr2h
  1877  000AB4  CFDE F06E          	movff	postinc2,sprintf@val
  1878  000AB8  CFDD F06F          	movff	postdec2,sprintf@val+1
  1879                           
  1880                           ; BSR set to: 0
  1881  000ABC  0E02               	movlw	2
  1882  000ABE  0100               	movlb	0	; () banked
  1883  000AC0  276A               	addwf	sprintf@ap& (0+255),f,b
  1884  000AC2  0E00               	movlw	0
  1885  000AC4  236B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;doprnt.c: 1261: if((int)val < 0) {
  1889  000AC6  0100               	movlb	0	; () banked
  1890  000AC8  AF6F               	btfss	(sprintf@val+1)& (0+255),7,b
  1891  000ACA  D008               	goto	l2476
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;doprnt.c: 1262: flag |= 0x03;
  1895  000ACC  0E03               	movlw	3
  1896  000ACE  0100               	movlb	0	; () banked
  1897  000AD0  136C               	iorwf	sprintf@flag& (0+255),f,b
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;doprnt.c: 1263: val = -val;
  1901  000AD2  0100               	movlb	0	; () banked
  1902  000AD4  6D6E               	negf	sprintf@val& (0+255),b
  1903  000AD6  1F6F               	comf	(sprintf@val+1)& (0+255),f,b
  1904  000AD8  B0D8               	btfsc	status,0,c
  1905  000ADA  2B6F               	incf	(sprintf@val+1)& (0+255),f,b
  1906  000ADC                     l2476:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;doprnt.c: 1264: }
  1910                           ;doprnt.c: 1266: }
  1911                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1912  000ADC  0E01               	movlw	1
  1913  000ADE  0100               	movlb	0	; () banked
  1914  000AE0  6F70               	movwf	sprintf@c& (0+255),b
  1915  000AE2                     l2478:
  1916                           
  1917                           ; BSR set to: 0
  1918  000AE2  0E05               	movlw	5
  1919  000AE4  0100               	movlb	0	; () banked
  1920  000AE6  1970               	xorwf	sprintf@c& (0+255),w,b
  1921  000AE8  B4D8               	btfsc	status,2,c
  1922  000AEA  D019               	goto	l2490
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;doprnt.c: 1306: if(val < dpowers[c])
  1926                           
  1927                           ; BSR set to: 0
  1928                           
  1929                           ; BSR set to: 0
  1930  000AEC  0100               	movlb	0	; () banked
  1931  000AEE  5170               	movf	sprintf@c& (0+255),w,b
  1932  000AF0  0D02               	mullw	2
  1933  000AF2  0E01               	movlw	low _dpowers
  1934  000AF4  24F3               	addwf	prodl,w,c
  1935  000AF6  6EF6               	movwf	tblptrl,c
  1936  000AF8  0E08               	movlw	high _dpowers
  1937  000AFA  20F4               	addwfc	prodh,w,c
  1938  000AFC  6EF7               	movwf	tblptrh,c
  1939  000AFE                     	if	1	;There are 3 active tblptr bytes
  1940  000AFE  6AF8               	clrf	tblptru,c
  1941  000B00  0E00               	movlw	low (__mediumconst shr (0+16))
  1942  000B02  22F8               	addwfc	tblptru,f,c
  1943  000B04                     	endif
  1944  000B04  0009               	tblrd		*+
  1945  000B06  50F5               	movf	tablat,w,c
  1946  000B08  0100               	movlb	0	; () banked
  1947  000B0A  5D6E               	subwf	sprintf@val& (0+255),w,b
  1948  000B0C  0009               	tblrd		*+
  1949  000B0E  50F5               	movf	tablat,w,c
  1950  000B10  0100               	movlb	0	; () banked
  1951  000B12  596F               	subwfb	(sprintf@val+1)& (0+255),w,b
  1952  000B14  A0D8               	btfss	status,0,c
  1953  000B16  D003               	goto	l2490
  1954                           
  1955                           ; BSR set to: 0
  1956                           
  1957                           ; BSR set to: 0
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;doprnt.c: 1307: break;
  1961  000B18  0100               	movlb	0	; () banked
  1962  000B1A  2B70               	incf	sprintf@c& (0+255),f,b
  1963  000B1C  D7E2               	goto	l2478
  1964  000B1E                     l2490:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;doprnt.c: 1422: {
  1968                           ;doprnt.c: 1438: if(flag & 0x03)
  1969  000B1E  C06C  F01E         	movff	sprintf@flag,??_sprintf
  1970  000B22  0E03               	movlw	3
  1971  000B24  161E               	andwf	??_sprintf,f,c
  1972  000B26  B4D8               	btfsc	status,2,c
  1973  000B28  D009               	goto	l2496
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1977  000B2A  C060  FFD9         	movff	sprintf@sp,fsr2l
  1978  000B2E  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  1979  000B32  0E2D               	movlw	45
  1980  000B34  6EDF               	movwf	indf2,c
  1981                           
  1982                           ; BSR set to: 0
  1983  000B36  0100               	movlb	0	; () banked
  1984  000B38  4B60               	infsnz	sprintf@sp& (0+255),f,b
  1985  000B3A  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  1986  000B3C                     l2496:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;doprnt.c: 1469: }
  1990                           ;doprnt.c: 1472: prec = c;
  1991  000B3C  C070  F06D         	movff	sprintf@c,sprintf@prec
  1992                           
  1993                           ;doprnt.c: 1474: while(prec--) {
  1994  000B40  D02F               	goto	l2504
  1995  000B42                     l2498:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;doprnt.c: 1478: {
  1999                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2000  000B42  0100               	movlb	0	; () banked
  2001  000B44  516D               	movf	sprintf@prec& (0+255),w,b
  2002  000B46  0D02               	mullw	2
  2003  000B48  0E01               	movlw	low _dpowers
  2004  000B4A  24F3               	addwf	prodl,w,c
  2005  000B4C  6EF6               	movwf	tblptrl,c
  2006  000B4E  0E08               	movlw	high _dpowers
  2007  000B50  20F4               	addwfc	prodh,w,c
  2008  000B52  6EF7               	movwf	tblptrh,c
  2009  000B54                     	if	1	;There are 3 active tblptr bytes
  2010  000B54  6AF8               	clrf	tblptru,c
  2011  000B56  0E00               	movlw	low (__mediumconst shr (0+16))
  2012  000B58  22F8               	addwfc	tblptru,f,c
  2013  000B5A                     	endif
  2014  000B5A  0009               	tblrd		*+
  2015  000B5C  CFF5 F014          	movff	tablat,___lwdiv@divisor
  2016  000B60  000A               	tblrd		*-
  2017  000B62  CFF5 F015          	movff	tablat,___lwdiv@divisor+1
  2018  000B66  C06E  F012         	movff	sprintf@val,___lwdiv@dividend
  2019  000B6A  C06F  F013         	movff	sprintf@val+1,___lwdiv@dividend+1
  2020  000B6E  ECF7  F008         	call	___lwdiv	;wreg free
  2021  000B72  C012  F019         	movff	?___lwdiv,___lwmod@dividend
  2022  000B76  C013  F01A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2023  000B7A  0E00               	movlw	0
  2024  000B7C  6E1C               	movwf	___lwmod@divisor+1,c
  2025  000B7E  0E0A               	movlw	10
  2026  000B80  6E1B               	movwf	___lwmod@divisor,c
  2027  000B82  ECB7  F009         	call	___lwmod	;wreg free
  2028  000B86  5019               	movf	?___lwmod,w,c
  2029  000B88  0F30               	addlw	48
  2030  000B8A  0100               	movlb	0	; () banked
  2031  000B8C  6F70               	movwf	sprintf@c& (0+255),b
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;doprnt.c: 1523: }
  2035                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2036  000B8E  C060  FFD9         	movff	sprintf@sp,fsr2l
  2037  000B92  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2038  000B96  C070  FFDF         	movff	sprintf@c,indf2
  2039                           
  2040                           ; BSR set to: 0
  2041  000B9A  0100               	movlb	0	; () banked
  2042  000B9C  4B60               	infsnz	sprintf@sp& (0+255),f,b
  2043  000B9E  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  2044  000BA0                     l2504:
  2045                           
  2046                           ; BSR set to: 0
  2047  000BA0  0100               	movlb	0	; () banked
  2048  000BA2  076D               	decf	sprintf@prec& (0+255),f,b
  2049  000BA4  0100               	movlb	0	; () banked
  2050  000BA6  296D               	incf	sprintf@prec& (0+255),w,b
  2051  000BA8  A4D8               	btfss	status,2,c
  2052  000BAA  D7CB               	goto	l2498
  2053  000BAC                     l2506:
  2054                           
  2055                           ; BSR set to: 0
  2056  000BAC  C062  FFF6         	movff	sprintf@f,tblptrl
  2057  000BB0  C063  FFF7         	movff	sprintf@f+1,tblptrh
  2058  000BB4  0100               	movlb	0	; () banked
  2059  000BB6  4B62               	infsnz	sprintf@f& (0+255),f,b
  2060  000BB8  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  2061  000BBA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2062  000BBA  6AF8               	clrf	tblptru,c
  2063  000BBC                     	endif
  2064  000BBC                     	if	0	;tblptru may be non-zero
  2065  000BBC                     	endif
  2066  000BBC  0008               	tblrd		*
  2067  000BBE  CFF5 F070          	movff	tablat,sprintf@c
  2068  000BC2  0100               	movlb	0	; () banked
  2069  000BC4  5170               	movf	sprintf@c& (0+255),w,b
  2070  000BC6  A4D8               	btfss	status,2,c
  2071  000BC8  D749               	goto	l2454
  2072  000BCA                     l2508:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;doprnt.c: 1538: *sp = 0;
  2076  000BCA  C060  FFD9         	movff	sprintf@sp,fsr2l
  2077  000BCE  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  2078  000BD2  0E00               	movlw	0
  2079  000BD4  6EDF               	movwf	indf2,c
  2080  000BD6  0012               	return	
  2081  000BD8                     __end_of_sprintf:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           intcon	equ	0xFF2
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           postinc2	equ	0xFDE
  2096                           postdec2	equ	0xFDD
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function ___lwmod *****************
  2102 ;; Defined at:
  2103 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  dividend        2   24[COMRAM] unsigned int 
  2106 ;;  divisor         2   26[COMRAM] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  counter         1   28[COMRAM] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2   24[COMRAM] unsigned int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         4       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2122 ;;Total ram usage:        5 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_sprintf
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text10
  2133  00136E                     __ptext10:
  2134                           	opt stack 0
  2135  00136E                     ___lwmod:
  2136                           	opt stack 25
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;incstack = 0
  2140  00136E  501B               	movf	___lwmod@divisor,w,c
  2141  001370  101C               	iorwf	___lwmod@divisor+1,w,c
  2142  001372  B4D8               	btfsc	status,2,c
  2143  001374  D018               	goto	l851
  2144  001376  0E01               	movlw	1
  2145  001378  6E1D               	movwf	___lwmod@counter,c
  2146  00137A  D004               	goto	l2442
  2147  00137C                     l2440:
  2148  00137C  90D8               	bcf	status,0,c
  2149  00137E  361B               	rlcf	___lwmod@divisor,f,c
  2150  001380  361C               	rlcf	___lwmod@divisor+1,f,c
  2151  001382  2A1D               	incf	___lwmod@counter,f,c
  2152  001384                     l2442:
  2153  001384  AE1C               	btfss	___lwmod@divisor+1,7,c
  2154  001386  D7FA               	goto	l2440
  2155  001388                     l2444:
  2156  001388  501B               	movf	___lwmod@divisor,w,c
  2157  00138A  5C19               	subwf	___lwmod@dividend,w,c
  2158  00138C  501C               	movf	___lwmod@divisor+1,w,c
  2159  00138E  581A               	subwfb	___lwmod@dividend+1,w,c
  2160  001390  A0D8               	btfss	status,0,c
  2161  001392  D004               	goto	l2448
  2162  001394  501B               	movf	___lwmod@divisor,w,c
  2163  001396  5E19               	subwf	___lwmod@dividend,f,c
  2164  001398  501C               	movf	___lwmod@divisor+1,w,c
  2165  00139A  5A1A               	subwfb	___lwmod@dividend+1,f,c
  2166  00139C                     l2448:
  2167  00139C  90D8               	bcf	status,0,c
  2168  00139E  321C               	rrcf	___lwmod@divisor+1,f,c
  2169  0013A0  321B               	rrcf	___lwmod@divisor,f,c
  2170  0013A2  2E1D               	decfsz	___lwmod@counter,f,c
  2171  0013A4  D7F1               	goto	l2444
  2172  0013A6                     l851:
  2173  0013A6  C019  F019         	movff	___lwmod@dividend,?___lwmod
  2174  0013AA  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  2175  0013AE  0012               	return		;funcret
  2176  0013B0                     __end_of___lwmod:
  2177                           	opt stack 0
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodh	equ	0xFF4
  2183                           prodl	equ	0xFF3
  2184                           intcon	equ	0xFF2
  2185                           postinc0	equ	0xFEE
  2186                           wreg	equ	0xFE8
  2187                           postdec1	equ	0xFE5
  2188                           fsr1l	equ	0xFE1
  2189                           indf2	equ	0xFDF
  2190                           postinc2	equ	0xFDE
  2191                           postdec2	equ	0xFDD
  2192                           fsr2h	equ	0xFDA
  2193                           fsr2l	equ	0xFD9
  2194                           status	equ	0xFD8
  2195                           
  2196 ;; *************** function ___lwdiv *****************
  2197 ;; Defined at:
  2198 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  dividend        2   17[COMRAM] unsigned int 
  2201 ;;  divisor         2   19[COMRAM] unsigned int 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  quotient        2   22[COMRAM] unsigned int 
  2204 ;;  counter         1   21[COMRAM] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  2   17[COMRAM] unsigned int 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2214 ;;      Params:         4       0       0       0       0       0       0       0       0
  2215 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2217 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2218 ;;Total ram usage:        7 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_sprintf
  2225 ;;		_calcula_temperatura
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text11
  2230  0011EE                     __ptext11:
  2231                           	opt stack 0
  2232  0011EE                     ___lwdiv:
  2233                           	opt stack 25
  2234                           
  2235                           ;incstack = 0
  2236  0011EE  0E00               	movlw	0
  2237  0011F0  6E18               	movwf	___lwdiv@quotient+1,c
  2238  0011F2  0E00               	movlw	0
  2239  0011F4  6E17               	movwf	___lwdiv@quotient,c
  2240  0011F6  5014               	movf	___lwdiv@divisor,w,c
  2241  0011F8  1015               	iorwf	___lwdiv@divisor+1,w,c
  2242  0011FA  B4D8               	btfsc	status,2,c
  2243  0011FC  D01C               	goto	l841
  2244  0011FE  0E01               	movlw	1
  2245  001200  6E16               	movwf	___lwdiv@counter,c
  2246  001202  D004               	goto	l2422
  2247  001204                     l2420:
  2248  001204  90D8               	bcf	status,0,c
  2249  001206  3614               	rlcf	___lwdiv@divisor,f,c
  2250  001208  3615               	rlcf	___lwdiv@divisor+1,f,c
  2251  00120A  2A16               	incf	___lwdiv@counter,f,c
  2252  00120C                     l2422:
  2253  00120C  AE15               	btfss	___lwdiv@divisor+1,7,c
  2254  00120E  D7FA               	goto	l2420
  2255  001210                     l2424:
  2256  001210  90D8               	bcf	status,0,c
  2257  001212  3617               	rlcf	___lwdiv@quotient,f,c
  2258  001214  3618               	rlcf	___lwdiv@quotient+1,f,c
  2259  001216  5014               	movf	___lwdiv@divisor,w,c
  2260  001218  5C12               	subwf	___lwdiv@dividend,w,c
  2261  00121A  5015               	movf	___lwdiv@divisor+1,w,c
  2262  00121C  5813               	subwfb	___lwdiv@dividend+1,w,c
  2263  00121E  A0D8               	btfss	status,0,c
  2264  001220  D005               	goto	l2432
  2265  001222  5014               	movf	___lwdiv@divisor,w,c
  2266  001224  5E12               	subwf	___lwdiv@dividend,f,c
  2267  001226  5015               	movf	___lwdiv@divisor+1,w,c
  2268  001228  5A13               	subwfb	___lwdiv@dividend+1,f,c
  2269  00122A  8017               	bsf	___lwdiv@quotient,0,c
  2270  00122C                     l2432:
  2271  00122C  90D8               	bcf	status,0,c
  2272  00122E  3215               	rrcf	___lwdiv@divisor+1,f,c
  2273  001230  3214               	rrcf	___lwdiv@divisor,f,c
  2274  001232  2E16               	decfsz	___lwdiv@counter,f,c
  2275  001234  D7ED               	goto	l2424
  2276  001236                     l841:
  2277  001236  C017  F012         	movff	___lwdiv@quotient,?___lwdiv
  2278  00123A  C018  F013         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2279  00123E  0012               	return		;funcret
  2280  001240                     __end_of___lwdiv:
  2281                           	opt stack 0
  2282                           tblptru	equ	0xFF8
  2283                           tblptrh	equ	0xFF7
  2284                           tblptrl	equ	0xFF6
  2285                           tablat	equ	0xFF5
  2286                           prodh	equ	0xFF4
  2287                           prodl	equ	0xFF3
  2288                           intcon	equ	0xFF2
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           postdec1	equ	0xFE5
  2292                           fsr1l	equ	0xFE1
  2293                           indf2	equ	0xFDF
  2294                           postinc2	equ	0xFDE
  2295                           postdec2	equ	0xFDD
  2296                           fsr2h	equ	0xFDA
  2297                           fsr2l	equ	0xFD9
  2298                           status	equ	0xFD8
  2299                           
  2300 ;; *************** function _limpa_tela *****************
  2301 ;; Defined at:
  2302 ;;		line 134 in file "main.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    5
  2323 ;; This function calls:
  2324 ;;		_SetDDRamAddr
  2325 ;;		_putrsXLCD
  2326 ;; This function is called by:
  2327 ;;		_telas
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text12
  2332  0014EE                     __ptext12:
  2333                           	opt stack 0
  2334  0014EE                     _limpa_tela:
  2335                           	opt stack 23
  2336                           
  2337                           ;main.c: 135: SetDDRamAddr(0x00);
  2338                           
  2339                           ;incstack = 0
  2340  0014EE  0E00               	movlw	0
  2341  0014F0  EC20  F009         	call	_SetDDRamAddr
  2342                           
  2343                           ;main.c: 136: putrsXLCD("                ");
  2344  0014F4  0E0B               	movlw	low STR_11
  2345  0014F6  6E14               	movwf	putrsXLCD@buffer,c
  2346  0014F8  0E08               	movlw	high STR_11
  2347  0014FA  6E15               	movwf	putrsXLCD@buffer+1,c
  2348  0014FC  EC1F  F008         	call	_putrsXLCD	;wreg free
  2349                           
  2350                           ;main.c: 137: SetDDRamAddr(0x40);
  2351  001500  0E40               	movlw	64
  2352  001502  EC20  F009         	call	_SetDDRamAddr
  2353                           
  2354                           ;main.c: 138: putrsXLCD("                ");
  2355  001506  0E0B               	movlw	low STR_11
  2356  001508  6E14               	movwf	putrsXLCD@buffer,c
  2357  00150A  0E08               	movlw	high STR_11
  2358  00150C  6E15               	movwf	putrsXLCD@buffer+1,c
  2359  00150E  EC1F  F008         	call	_putrsXLCD	;wreg free
  2360  001512  0012               	return	
  2361  001514                     __end_of_limpa_tela:
  2362                           	opt stack 0
  2363                           tblptru	equ	0xFF8
  2364                           tblptrh	equ	0xFF7
  2365                           tblptrl	equ	0xFF6
  2366                           tablat	equ	0xFF5
  2367                           prodh	equ	0xFF4
  2368                           prodl	equ	0xFF3
  2369                           intcon	equ	0xFF2
  2370                           postinc0	equ	0xFEE
  2371                           wreg	equ	0xFE8
  2372                           postdec1	equ	0xFE5
  2373                           fsr1l	equ	0xFE1
  2374                           indf2	equ	0xFDF
  2375                           postinc2	equ	0xFDE
  2376                           postdec2	equ	0xFDD
  2377                           fsr2h	equ	0xFDA
  2378                           fsr2l	equ	0xFD9
  2379                           status	equ	0xFD8
  2380                           
  2381 ;; *************** function _putrsXLCD *****************
  2382 ;; Defined at:
  2383 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  2386 ;;		 -> STR_12(17), STR_11(17), STR_9(12), STR_7(12), 
  2387 ;;		 -> STR_5(7), STR_3(7), buffer(16), STR_1(7), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2399 ;;      Params:         2       0       0       0       0       0       0       0       0
  2400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2402 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2403 ;;Total ram usage:        2 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    4
  2406 ;; This function calls:
  2407 ;;		_BusyXLCD
  2408 ;;		_WriteDataXLCD
  2409 ;; This function is called by:
  2410 ;;		_tela_1
  2411 ;;		_tela_2
  2412 ;;		_tela_3
  2413 ;;		_tela_4
  2414 ;;		_limpa_tela
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text13
  2419  00103E                     __ptext13:
  2420                           	opt stack 0
  2421  00103E                     _putrsXLCD:
  2422                           	opt stack 23
  2423                           
  2424                           ;incstack = 0
  2425  00103E  D019               	goto	l1942
  2426  001040                     l1936:
  2427  001040  EC16  F00A         	call	_BusyXLCD	;wreg free
  2428  001044  0900               	iorlw	0
  2429  001046  A4D8               	btfss	status,2,c
  2430  001048  D7FB               	goto	l1936
  2431  00104A  C014  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2432  00104E  C015  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2433  001052  6AF8               	clrf	tblptru,c
  2434  001054  0E07               	movlw	(high __ramtop+-1)
  2435  001056  64F7               	cpfsgt	tblptrh,c
  2436  001058  D003               	bra	u907
  2437  00105A  0008               	tblrd		*
  2438  00105C  50F5               	movf	tablat,w,c
  2439  00105E  D005               	bra	u900
  2440  001060                     u907:
  2441  001060  CFF6 FFE9          	movff	tblptrl,fsr0l
  2442  001064  CFF7 FFEA          	movff	tblptrh,fsr0h
  2443  001068  50EF               	movf	indf0,w,c
  2444  00106A                     u900:
  2445  00106A  ECD8  F009         	call	_WriteDataXLCD
  2446  00106E  4A14               	infsnz	putrsXLCD@buffer,f,c
  2447  001070  2A15               	incf	putrsXLCD@buffer+1,f,c
  2448  001072                     l1942:
  2449  001072  C014  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2450  001076  C015  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2451  00107A  6AF8               	clrf	tblptru,c
  2452  00107C  0E07               	movlw	(high __ramtop+-1)
  2453  00107E  64F7               	cpfsgt	tblptrh,c
  2454  001080  D003               	bra	u917
  2455  001082  0008               	tblrd		*
  2456  001084  50F5               	movf	tablat,w,c
  2457  001086  D005               	bra	u910
  2458  001088                     u917:
  2459  001088  CFF6 FFE9          	movff	tblptrl,fsr0l
  2460  00108C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2461  001090  50EF               	movf	indf0,w,c
  2462  001092                     u910:
  2463  001092  0900               	iorlw	0
  2464  001094  B4D8               	btfsc	status,2,c
  2465  001096  0012               	return	
  2466  001098  D7D3               	goto	l1936
  2467  00109A                     __end_of_putrsXLCD:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           prodh	equ	0xFF4
  2474                           prodl	equ	0xFF3
  2475                           intcon	equ	0xFF2
  2476                           indf0	equ	0xFEF
  2477                           postinc0	equ	0xFEE
  2478                           fsr0h	equ	0xFEA
  2479                           fsr0l	equ	0xFE9
  2480                           wreg	equ	0xFE8
  2481                           postdec1	equ	0xFE5
  2482                           fsr1l	equ	0xFE1
  2483                           indf2	equ	0xFDF
  2484                           postinc2	equ	0xFDE
  2485                           postdec2	equ	0xFDD
  2486                           fsr2h	equ	0xFDA
  2487                           fsr2l	equ	0xFD9
  2488                           status	equ	0xFD8
  2489                           
  2490 ;; *************** function _WriteDataXLCD *****************
  2491 ;; Defined at:
  2492 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  data            1    wreg     unsigned char 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  data            1   18[COMRAM] unsigned char 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2, status,0, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0
  2507 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2509 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2510 ;;Total ram usage:        1 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    3
  2513 ;; This function calls:
  2514 ;;		_DelayFor18TCY
  2515 ;; This function is called by:
  2516 ;;		_putrsXLCD
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text14
  2521  0013B0                     __ptext14:
  2522                           	opt stack 0
  2523  0013B0                     _WriteDataXLCD:
  2524                           	opt stack 23
  2525                           
  2526                           ;incstack = 0
  2527                           ;WriteDataXLCD@data stored from wreg
  2528  0013B0  6E13               	movwf	WriteDataXLCD@data,c
  2529  0013B2  0EF0               	movlw	240
  2530  0013B4  1693               	andwf	3987,f,c	;volatile
  2531  0013B6  0EF0               	movlw	240
  2532  0013B8  1681               	andwf	3969,f,c	;volatile
  2533  0013BA  3813               	swapf	WriteDataXLCD@data,w,c
  2534  0013BC  0B0F               	andlw	15
  2535  0013BE  0B0F               	andlw	15
  2536  0013C0  1281               	iorwf	3969,f,c	;volatile
  2537  0013C2  8A8A               	bsf	3978,5,c	;volatile
  2538  0013C4  9C8A               	bcf	3978,6,c	;volatile
  2539  0013C6  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  2540  0013CA  888A               	bsf	3978,4,c	;volatile
  2541  0013CC  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  2542  0013D0  988A               	bcf	3978,4,c	;volatile
  2543  0013D2  0EF0               	movlw	240
  2544  0013D4  1681               	andwf	3969,f,c	;volatile
  2545  0013D6  5013               	movf	WriteDataXLCD@data,w,c
  2546  0013D8  0B0F               	andlw	15
  2547  0013DA  1281               	iorwf	3969,f,c	;volatile
  2548  0013DC  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  2549  0013E0  888A               	bsf	3978,4,c	;volatile
  2550  0013E2  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  2551  0013E6  988A               	bcf	3978,4,c	;volatile
  2552  0013E8  0E0F               	movlw	15
  2553  0013EA  1293               	iorwf	3987,f,c	;volatile
  2554  0013EC  0012               	return	
  2555  0013EE                     __end_of_WriteDataXLCD:
  2556                           	opt stack 0
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           prodh	equ	0xFF4
  2562                           prodl	equ	0xFF3
  2563                           intcon	equ	0xFF2
  2564                           indf0	equ	0xFEF
  2565                           postinc0	equ	0xFEE
  2566                           fsr0h	equ	0xFEA
  2567                           fsr0l	equ	0xFE9
  2568                           wreg	equ	0xFE8
  2569                           postdec1	equ	0xFE5
  2570                           fsr1l	equ	0xFE1
  2571                           indf2	equ	0xFDF
  2572                           postinc2	equ	0xFDE
  2573                           postdec2	equ	0xFDD
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function _trata_data *****************
  2579 ;; Defined at:
  2580 ;;		line 203 in file "main.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2594 ;;      Params:         0       0       0       0       0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2597 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2598 ;;Total ram usage:        0 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text15
  2609  0010F4                     __ptext15:
  2610                           	opt stack 0
  2611  0010F4                     _trata_data:
  2612                           	opt stack 29
  2613                           
  2614                           ;main.c: 204: if(hora == 24){
  2615                           
  2616                           ;incstack = 0
  2617  0010F4  0E18               	movlw	24
  2618  0010F6  182E               	xorwf	_hora,w,c
  2619  0010F8  A4D8               	btfss	status,2,c
  2620  0010FA  D004               	goto	l1638
  2621                           
  2622                           ;main.c: 205: dia+=1;
  2623  0010FC  2A49               	incf	_dia,f,c
  2624                           
  2625                           ;main.c: 206: hora = 0;
  2626  0010FE  0E00               	movlw	0
  2627  001100  6E2E               	movwf	_hora,c
  2628                           
  2629                           ;main.c: 207: return;
  2630  001102  0012               	return	
  2631  001104                     l1638:
  2632                           
  2633                           ;main.c: 208: }
  2634                           ;main.c: 209: if(mes == 2 && dia == 28){
  2635  001104  0E02               	movlw	2
  2636  001106  1848               	xorwf	_mes,w,c
  2637  001108  A4D8               	btfss	status,2,c
  2638  00110A  D008               	goto	l1648
  2639  00110C  0E1C               	movlw	28
  2640  00110E  1849               	xorwf	_dia,w,c
  2641  001110  A4D8               	btfss	status,2,c
  2642  001112  D004               	goto	l1648
  2643                           
  2644                           ;main.c: 210: mes+=1;
  2645  001114  2A48               	incf	_mes,f,c
  2646                           
  2647                           ;main.c: 211: dia = 1;
  2648  001116  0E01               	movlw	1
  2649  001118  6E49               	movwf	_dia,c
  2650                           
  2651                           ;main.c: 212: return;
  2652  00111A  0012               	return	
  2653  00111C                     l1648:
  2654                           
  2655                           ;main.c: 213: }
  2656                           ;main.c: 214: if(mes == 12 && dia == 30){
  2657  00111C  0E0C               	movlw	12
  2658  00111E  1848               	xorwf	_mes,w,c
  2659  001120  A4D8               	btfss	status,2,c
  2660  001122  D00B               	goto	l1660
  2661  001124  0E1E               	movlw	30
  2662  001126  1849               	xorwf	_dia,w,c
  2663  001128  A4D8               	btfss	status,2,c
  2664  00112A  D007               	goto	l1660
  2665                           
  2666                           ;main.c: 215: ano+=1;
  2667  00112C  4A44               	infsnz	_ano,f,c
  2668  00112E  2A45               	incf	_ano+1,f,c
  2669                           
  2670                           ;main.c: 216: mes = 1;
  2671  001130  0E01               	movlw	1
  2672  001132  6E48               	movwf	_mes,c
  2673                           
  2674                           ;main.c: 217: dia = 1;
  2675  001134  0E01               	movlw	1
  2676  001136  6E49               	movwf	_dia,c
  2677                           
  2678                           ;main.c: 218: return;
  2679  001138  0012               	return	
  2680  00113A                     l1660:
  2681                           
  2682                           ;main.c: 219: }
  2683                           ;main.c: 220: if(dia == 30){
  2684  00113A  0E1E               	movlw	30
  2685  00113C  1849               	xorwf	_dia,w,c
  2686  00113E  A4D8               	btfss	status,2,c
  2687  001140  0012               	return	
  2688                           
  2689                           ;main.c: 221: mes+=1;
  2690  001142  2A48               	incf	_mes,f,c
  2691                           
  2692                           ;main.c: 222: dia = 1;
  2693  001144  0E01               	movlw	1
  2694  001146  6E49               	movwf	_dia,c
  2695                           
  2696                           ;main.c: 223: return;
  2697  001148  0012               	return	
  2698  00114A                     __end_of_trata_data:
  2699                           	opt stack 0
  2700                           tblptru	equ	0xFF8
  2701                           tblptrh	equ	0xFF7
  2702                           tblptrl	equ	0xFF6
  2703                           tablat	equ	0xFF5
  2704                           prodh	equ	0xFF4
  2705                           prodl	equ	0xFF3
  2706                           intcon	equ	0xFF2
  2707                           indf0	equ	0xFEF
  2708                           postinc0	equ	0xFEE
  2709                           fsr0h	equ	0xFEA
  2710                           fsr0l	equ	0xFE9
  2711                           wreg	equ	0xFE8
  2712                           postdec1	equ	0xFE5
  2713                           fsr1l	equ	0xFE1
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           postdec2	equ	0xFDD
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721 ;; *************** function _maquinaEstado *****************
  2722 ;; Defined at:
  2723 ;;		line 496 in file "main.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    4
  2744 ;; This function calls:
  2745 ;;		_enviaByte
  2746 ;;		_trataComando
  2747 ;;		_tx_data
  2748 ;;		_verificaCRCBUFFCOM
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text16
  2755  0012E0                     __ptext16:
  2756                           	opt stack 0
  2757  0012E0                     _maquinaEstado:
  2758                           	opt stack 26
  2759                           
  2760                           ;main.c: 497: switch(estado){
  2761                           
  2762                           ;incstack = 0
  2763  0012E0  D011               	goto	l2778
  2764  0012E2                     l2766:
  2765                           
  2766                           ;main.c: 499: verificaCRCBUFFCOM();
  2767  0012E2  EC4D  F008         	call	_verificaCRCBUFFCOM	;wreg free
  2768                           
  2769                           ;main.c: 500: break;
  2770  0012E6  0012               	return	
  2771  0012E8                     l2768:
  2772                           
  2773                           ;main.c: 503: trataComando();
  2774  0012E8  EC34  F004         	call	_trataComando	;wreg free
  2775                           
  2776                           ;main.c: 504: break;
  2777  0012EC  0012               	return	
  2778  0012EE                     l2770:
  2779                           
  2780                           ;main.c: 507: tx_data();
  2781  0012EE  EC33  F00A         	call	_tx_data	;wreg free
  2782                           
  2783                           ;main.c: 508: break;
  2784  0012F2  0012               	return	
  2785  0012F4                     l2772:
  2786                           
  2787                           ;main.c: 511: enviaByte(0x05);
  2788  0012F4  0E05               	movlw	5
  2789  0012F6  EC9A  F00A         	call	_enviaByte
  2790                           
  2791                           ;main.c: 512: break;
  2792  0012FA  0012               	return	
  2793  0012FC                     l2774:
  2794                           
  2795                           ;main.c: 515: enviaByte(0x15);
  2796  0012FC  0E15               	movlw	21
  2797  0012FE  EC9A  F00A         	call	_enviaByte
  2798                           
  2799                           ;main.c: 522: }
  2800                           
  2801                           ;main.c: 521: break;
  2802                           
  2803                           ;main.c: 520: default:
  2804                           
  2805                           ;main.c: 519: break;
  2806                           
  2807                           ;main.c: 518: case 0:
  2808                           
  2809                           ;main.c: 516: break;
  2810  001302  0012               	return	
  2811  001304                     l2778:
  2812  001304  5031               	movf	_estado,w,c
  2813                           
  2814                           ; Switch size 1, requested type "space"
  2815                           ; Number of cases is 6, Range of values is 0 to 5
  2816                           ; switch strategies available:
  2817                           ; Name         Instructions Cycles
  2818                           ; simple_byte           19    10 (average)
  2819                           ;	Chosen strategy is simple_byte
  2820  001306  0A00               	xorlw	0	; case 0
  2821  001308  B4D8               	btfsc	status,2,c
  2822  00130A  0012               	return	
  2823  00130C  0A01               	xorlw	1	; case 1
  2824  00130E  B4D8               	btfsc	status,2,c
  2825  001310  D7E8               	goto	l2766
  2826  001312  0A03               	xorlw	3	; case 2
  2827  001314  B4D8               	btfsc	status,2,c
  2828  001316  D7E8               	goto	l2768
  2829  001318  0A01               	xorlw	1	; case 3
  2830  00131A  B4D8               	btfsc	status,2,c
  2831  00131C  D7E8               	goto	l2770
  2832  00131E  0A07               	xorlw	7	; case 4
  2833  001320  B4D8               	btfsc	status,2,c
  2834  001322  D7E8               	goto	l2772
  2835  001324  0A01               	xorlw	1	; case 5
  2836  001326  A4D8               	btfss	status,2,c
  2837  001328  0012               	return	
  2838  00132A  D7E8               	goto	l2774
  2839  00132C                     __end_of_maquinaEstado:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodh	equ	0xFF4
  2846                           prodl	equ	0xFF3
  2847                           intcon	equ	0xFF2
  2848                           indf0	equ	0xFEF
  2849                           postinc0	equ	0xFEE
  2850                           fsr0h	equ	0xFEA
  2851                           fsr0l	equ	0xFE9
  2852                           wreg	equ	0xFE8
  2853                           postdec1	equ	0xFE5
  2854                           fsr1l	equ	0xFE1
  2855                           indf2	equ	0xFDF
  2856                           postinc2	equ	0xFDE
  2857                           postdec2	equ	0xFDD
  2858                           fsr2h	equ	0xFDA
  2859                           fsr2l	equ	0xFD9
  2860                           status	equ	0xFD8
  2861                           
  2862 ;; *************** function _verificaCRCBUFFCOM *****************
  2863 ;; Defined at:
  2864 ;;		line 483 in file "main.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  crc             2    3[BANK0 ] unsigned int 
  2869 ;;  CRC_OK          1    2[BANK0 ] unsigned char 
  2870 ;;  crc2            1    1[BANK0 ] unsigned char 
  2871 ;;  crc1            1    0[BANK0 ] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2881 ;;      Params:         0       0       0       0       0       0       0       0       0
  2882 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2884 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2885 ;;Total ram usage:        5 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    2
  2888 ;; This function calls:
  2889 ;;		_crc16
  2890 ;; This function is called by:
  2891 ;;		_maquinaEstado
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text17
  2896  00109A                     __ptext17:
  2897                           	opt stack 0
  2898  00109A                     _verificaCRCBUFFCOM:
  2899                           	opt stack 27
  2900                           
  2901                           ;main.c: 484: char CRC_OK;
  2902                           ;main.c: 485: unsigned int crc = crc16(BUFFCOM, 5);
  2903                           
  2904                           ;incstack = 0
  2905  00109A  0E3A               	movlw	low _BUFFCOM
  2906  00109C  6E12               	movwf	crc16@data_p,c
  2907  00109E  0E00               	movlw	high _BUFFCOM
  2908  0010A0  6E13               	movwf	crc16@data_p+1,c
  2909  0010A2  0E00               	movlw	0
  2910  0010A4  6E15               	movwf	crc16@length+1,c
  2911  0010A6  0E05               	movlw	5
  2912  0010A8  6E14               	movwf	crc16@length,c
  2913  0010AA  ECEC  F005         	call	_crc16	;wreg free
  2914  0010AE  C012  F063         	movff	?_crc16,verificaCRCBUFFCOM@crc
  2915  0010B2  C013  F064         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  2916                           
  2917                           ;main.c: 486: unsigned char crc1 = crc >> 8;
  2918  0010B6  0100               	movlb	0	; () banked
  2919  0010B8  5164               	movf	(verificaCRCBUFFCOM@crc+1)& (0+255),w,b
  2920  0010BA  0100               	movlb	0	; () banked
  2921  0010BC  6F60               	movwf	verificaCRCBUFFCOM@crc1& (0+255),b
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;main.c: 487: unsigned char crc2 = crc & 0xFF;
  2925  0010BE  C063  F061         	movff	verificaCRCBUFFCOM@crc,verificaCRCBUFFCOM@crc2
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;main.c: 489: if(crc1 == BUFFCOM[5] && BUFFCOM[6] == crc2) CRC_OK = 1;
  2929  0010C2  0100               	movlb	0	; () banked
  2930  0010C4  5160               	movf	verificaCRCBUFFCOM@crc1& (0+255),w,b
  2931  0010C6  183F               	xorwf	_BUFFCOM+5,w,c
  2932  0010C8  A4D8               	btfss	status,2,c
  2933  0010CA  D007               	goto	l2724
  2934                           
  2935                           ; BSR set to: 0
  2936  0010CC  0100               	movlb	0	; () banked
  2937  0010CE  5161               	movf	verificaCRCBUFFCOM@crc2& (0+255),w,b
  2938  0010D0  1840               	xorwf	_BUFFCOM+6,w,c
  2939  0010D2  A4D8               	btfss	status,2,c
  2940  0010D4  D002               	goto	l2724
  2941                           
  2942                           ; BSR set to: 0
  2943  0010D6  0E01               	movlw	1
  2944  0010D8  D001               	goto	L1
  2945  0010DA                     l2724:
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;main.c: 490: else CRC_OK = 0;
  2949  0010DA  0E00               	movlw	0
  2950  0010DC                     L1:
  2951  0010DC  0100               	movlb	0	; () banked
  2952  0010DE  6F62               	movwf	verificaCRCBUFFCOM@CRC_OK& (0+255),b
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;main.c: 492: if(CRC_OK == 1) estado = 4;
  2956                           
  2957                           ; BSR set to: 0
  2958  0010E0  0100               	movlb	0	; () banked
  2959  0010E2  0562               	decf	verificaCRCBUFFCOM@CRC_OK& (0+255),w,b
  2960  0010E4  A4D8               	btfss	status,2,c
  2961  0010E6  D003               	goto	l2730
  2962                           
  2963                           ; BSR set to: 0
  2964  0010E8  0E04               	movlw	4
  2965  0010EA  6E31               	movwf	_estado,c
  2966  0010EC  0012               	return	
  2967  0010EE                     l2730:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;main.c: 493: else estado = 5;
  2971  0010EE  0E05               	movlw	5
  2972  0010F0  6E31               	movwf	_estado,c
  2973  0010F2  0012               	return	
  2974  0010F4                     __end_of_verificaCRCBUFFCOM:
  2975                           	opt stack 0
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           prodh	equ	0xFF4
  2981                           prodl	equ	0xFF3
  2982                           intcon	equ	0xFF2
  2983                           indf0	equ	0xFEF
  2984                           postinc0	equ	0xFEE
  2985                           fsr0h	equ	0xFEA
  2986                           fsr0l	equ	0xFE9
  2987                           wreg	equ	0xFE8
  2988                           postdec1	equ	0xFE5
  2989                           fsr1l	equ	0xFE1
  2990                           indf2	equ	0xFDF
  2991                           postinc2	equ	0xFDE
  2992                           postdec2	equ	0xFDD
  2993                           fsr2h	equ	0xFDA
  2994                           fsr2l	equ	0xFD9
  2995                           status	equ	0xFD8
  2996                           
  2997 ;; *************** function _tx_data *****************
  2998 ;; Defined at:
  2999 ;;		line 537 in file "main.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  cont            2   17[COMRAM] int 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0
  3014 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3016 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3017 ;;Total ram usage:        2 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    1
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_maquinaEstado
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text18
  3028  001466                     __ptext18:
  3029                           	opt stack 0
  3030  001466                     _tx_data:
  3031                           	opt stack 28
  3032                           
  3033                           ;main.c: 538: int cont;
  3034                           ;main.c: 539: for(cont=0;cont<7;cont++){
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;incstack = 0
  3038  001466  0E00               	movlw	0
  3039  001468  6E13               	movwf	tx_data@cont+1,c
  3040  00146A  0E00               	movlw	0
  3041  00146C  6E12               	movwf	tx_data@cont,c
  3042  00146E                     l1576:
  3043  00146E  BE13               	btfsc	tx_data@cont+1,7,c
  3044  001470  D006               	goto	l287
  3045  001472  5013               	movf	tx_data@cont+1,w,c
  3046  001474  E111               	bnz	l1586
  3047  001476  0E07               	movlw	7
  3048  001478  5C12               	subwf	tx_data@cont,w,c
  3049  00147A  B0D8               	btfsc	status,0,c
  3050  00147C  D00D               	goto	l1586
  3051  00147E                     l287:
  3052  00147E  A89E               	btfss	3998,4,c	;volatile
  3053  001480  D7FE               	goto	l287
  3054                           
  3055                           ;main.c: 541: TXREG = BUFFRESP[cont];
  3056  001482  0E33               	movlw	low _BUFFRESP
  3057  001484  2412               	addwf	tx_data@cont,w,c
  3058  001486  6ED9               	movwf	fsr2l,c
  3059  001488  0E00               	movlw	high _BUFFRESP
  3060  00148A  2013               	addwfc	tx_data@cont+1,w,c
  3061  00148C  6EDA               	movwf	fsr2h,c
  3062  00148E  50DF               	movf	indf2,w,c
  3063  001490  6EAD               	movwf	4013,c	;volatile
  3064  001492  4A12               	infsnz	tx_data@cont,f,c
  3065  001494  2A13               	incf	tx_data@cont+1,f,c
  3066  001496  D7EB               	goto	l1576
  3067  001498                     l1586:
  3068                           
  3069                           ;main.c: 542: }
  3070                           ;main.c: 543: estado = 0;
  3071  001498  0E00               	movlw	0
  3072  00149A  6E31               	movwf	_estado,c
  3073  00149C  0012               	return		;funcret
  3074  00149E                     __end_of_tx_data:
  3075                           	opt stack 0
  3076                           tblptru	equ	0xFF8
  3077                           tblptrh	equ	0xFF7
  3078                           tblptrl	equ	0xFF6
  3079                           tablat	equ	0xFF5
  3080                           prodh	equ	0xFF4
  3081                           prodl	equ	0xFF3
  3082                           intcon	equ	0xFF2
  3083                           indf0	equ	0xFEF
  3084                           postinc0	equ	0xFEE
  3085                           fsr0h	equ	0xFEA
  3086                           fsr0l	equ	0xFE9
  3087                           wreg	equ	0xFE8
  3088                           postdec1	equ	0xFE5
  3089                           fsr1l	equ	0xFE1
  3090                           indf2	equ	0xFDF
  3091                           postinc2	equ	0xFDE
  3092                           postdec2	equ	0xFDD
  3093                           fsr2h	equ	0xFDA
  3094                           fsr2l	equ	0xFD9
  3095                           status	equ	0xFD8
  3096                           
  3097 ;; *************** function _trataComando *****************
  3098 ;; Defined at:
  3099 ;;		line 398 in file "main.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  iterator        2    6[BANK0 ] int 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3113 ;;      Params:         0       0       0       0       0       0       0       0       0
  3114 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3115 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3116 ;;      Totals:         0       4       0       0       0       0       0       0       0
  3117 ;;Total ram usage:        4 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    3
  3120 ;; This function calls:
  3121 ;;		_calculaCRCBUFFRESP
  3122 ;;		_memcpy
  3123 ;; This function is called by:
  3124 ;;		_maquinaEstado
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text19
  3129  000868                     __ptext19:
  3130                           	opt stack 0
  3131  000868                     _trataComando:
  3132                           	opt stack 26
  3133                           
  3134                           ;main.c: 399: int iterator;
  3135                           ;main.c: 401: switch(BUFFCOM[0]){
  3136                           
  3137                           ;incstack = 0
  3138  000868  D0E8               	goto	l2708
  3139  00086A                     l2674:
  3140                           
  3141                           ;main.c: 403: memcpy(&BUFFRESP[0], &BUFFCOM[0], sizeof(BUFFCOM[0]));
  3142  00086A  0E33               	movlw	low _BUFFRESP
  3143  00086C  6E12               	movwf	memcpy@d1,c
  3144  00086E  0E00               	movlw	high _BUFFRESP
  3145  000870  6E13               	movwf	memcpy@d1+1,c
  3146  000872  0E3A               	movlw	low _BUFFCOM
  3147  000874  6E14               	movwf	memcpy@s1,c
  3148  000876  0E00               	movlw	high _BUFFCOM
  3149  000878  6E15               	movwf	memcpy@s1+1,c
  3150  00087A  5014               	movf	memcpy@s1,w,c
  3151  00087C  1015               	iorwf	memcpy@s1+1,w,c
  3152  00087E  A4D8               	btfss	status,2,c
  3153  000880  0E20               	movlw	32
  3154  000882  6E16               	movwf	memcpy@s1+2,c
  3155  000884  0E00               	movlw	0
  3156  000886  6E18               	movwf	memcpy@n+1,c
  3157  000888  0E01               	movlw	1
  3158  00088A  6E17               	movwf	memcpy@n,c
  3159  00088C  ECEE  F007         	call	_memcpy	;wreg free
  3160                           
  3161                           ;main.c: 404: memcpy(&BUFFRESP[1], &BUFFCOM[1], sizeof(BUFFCOM[1]));
  3162  000890  0E34               	movlw	low (_BUFFRESP+1)
  3163  000892  6E12               	movwf	memcpy@d1,c
  3164  000894  0E00               	movlw	high (_BUFFRESP+1)
  3165  000896  6E13               	movwf	memcpy@d1+1,c
  3166  000898  0E3B               	movlw	low (_BUFFCOM+1)
  3167  00089A  6E14               	movwf	memcpy@s1,c
  3168  00089C  0E00               	movlw	high (_BUFFCOM+1)
  3169  00089E  6E15               	movwf	memcpy@s1+1,c
  3170  0008A0  5014               	movf	memcpy@s1,w,c
  3171  0008A2  1015               	iorwf	memcpy@s1+1,w,c
  3172  0008A4  A4D8               	btfss	status,2,c
  3173  0008A6  0E20               	movlw	32
  3174  0008A8  6E16               	movwf	memcpy@s1+2,c
  3175  0008AA  0E00               	movlw	0
  3176  0008AC  6E18               	movwf	memcpy@n+1,c
  3177  0008AE  0E01               	movlw	1
  3178  0008B0  6E17               	movwf	memcpy@n,c
  3179  0008B2  ECEE  F007         	call	_memcpy	;wreg free
  3180                           
  3181                           ;main.c: 405: switch(BUFFCOM[1]){
  3182  0008B6  D04B               	goto	l2680
  3183  0008B8                     l2676:
  3184                           
  3185                           ;main.c: 408: memcpy(&BUFFRESP[2], &versao, sizeof(versao));
  3186  0008B8  0E35               	movlw	low (_BUFFRESP+2)
  3187  0008BA  6E12               	movwf	memcpy@d1,c
  3188  0008BC  0E00               	movlw	high (_BUFFRESP+2)
  3189  0008BE  6E13               	movwf	memcpy@d1+1,c
  3190  0008C0  0E4C               	movlw	low _versao
  3191  0008C2  6E14               	movwf	memcpy@s1,c
  3192  0008C4  0E00               	movlw	high _versao
  3193  0008C6  6E15               	movwf	memcpy@s1+1,c
  3194  0008C8  5014               	movf	memcpy@s1,w,c
  3195  0008CA  1015               	iorwf	memcpy@s1+1,w,c
  3196  0008CC  A4D8               	btfss	status,2,c
  3197  0008CE  0E20               	movlw	32
  3198  0008D0  6E16               	movwf	memcpy@s1+2,c
  3199  0008D2  0E00               	movlw	0
  3200  0008D4  6E18               	movwf	memcpy@n+1,c
  3201  0008D6  0E01               	movlw	1
  3202  0008D8  6E17               	movwf	memcpy@n,c
  3203  0008DA  ECEE  F007         	call	_memcpy	;wreg free
  3204                           
  3205                           ;main.c: 409: memcpy(&BUFFRESP[3], &revisao, sizeof(revisao));
  3206  0008DE  0E36               	movlw	low (_BUFFRESP+3)
  3207  0008E0  6E12               	movwf	memcpy@d1,c
  3208  0008E2  0E00               	movlw	high (_BUFFRESP+3)
  3209  0008E4  6E13               	movwf	memcpy@d1+1,c
  3210  0008E6  0E4B               	movlw	low _revisao
  3211  0008E8  6E14               	movwf	memcpy@s1,c
  3212  0008EA  0E00               	movlw	high _revisao
  3213  0008EC  6E15               	movwf	memcpy@s1+1,c
  3214  0008EE  5014               	movf	memcpy@s1,w,c
  3215  0008F0  1015               	iorwf	memcpy@s1+1,w,c
  3216  0008F2  A4D8               	btfss	status,2,c
  3217  0008F4  0E20               	movlw	32
  3218  0008F6  6E16               	movwf	memcpy@s1+2,c
  3219  0008F8  0E00               	movlw	0
  3220  0008FA  6E18               	movwf	memcpy@n+1,c
  3221  0008FC  0E01               	movlw	1
  3222  0008FE  6E17               	movwf	memcpy@n,c
  3223  000900  ECEE  F007         	call	_memcpy	;wreg free
  3224                           
  3225                           ;main.c: 410: memcpy(&BUFFRESP[4], 0x0, sizeof(char));
  3226  000904  0E37               	movlw	low (_BUFFRESP+4)
  3227  000906  6E12               	movwf	memcpy@d1,c
  3228  000908  0E00               	movlw	high (_BUFFRESP+4)
  3229  00090A  6E13               	movwf	memcpy@d1+1,c
  3230  00090C  0E00               	movlw	0
  3231  00090E  6E14               	movwf	memcpy@s1,c
  3232  000910  0E00               	movlw	0
  3233  000912  6E15               	movwf	memcpy@s1+1,c
  3234  000914  0E00               	movlw	0
  3235  000916  6E16               	movwf	memcpy@s1+2,c
  3236  000918  0E00               	movlw	0
  3237  00091A  6E18               	movwf	memcpy@n+1,c
  3238  00091C  0E01               	movlw	1
  3239  00091E  6E17               	movwf	memcpy@n,c
  3240  000920  ECEE  F007         	call	_memcpy	;wreg free
  3241                           
  3242                           ;main.c: 414: break;
  3243  000924  D091               	goto	l2710
  3244  000926                     l240:
  3245                           
  3246                           ;main.c: 418: BUFFRESP[2] = hora;
  3247  000926  C02E  F035         	movff	_hora,_BUFFRESP+2
  3248                           
  3249                           ;main.c: 419: BUFFRESP[3] = minuto;
  3250  00092A  C02D  F036         	movff	_minuto,_BUFFRESP+3
  3251                           
  3252                           ;main.c: 420: BUFFRESP[4] = segundo;
  3253  00092E  C02C  F037         	movff	_segundo,_BUFFRESP+4
  3254                           
  3255                           ;main.c: 421: break;
  3256  000932  D08A               	goto	l2710
  3257  000934                     l241:
  3258                           
  3259                           ;main.c: 425: BUFFRESP[2] = dia;
  3260  000934  C049  F035         	movff	_dia,_BUFFRESP+2
  3261                           
  3262                           ;main.c: 426: BUFFRESP[3] = mes;
  3263  000938  C048  F036         	movff	_mes,_BUFFRESP+3
  3264                           
  3265                           ;main.c: 427: BUFFRESP[4] = ano;
  3266  00093C  C044  F037         	movff	_ano,_BUFFRESP+4
  3267                           
  3268                           ;main.c: 428: break;
  3269  000940  D083               	goto	l2710
  3270  000942                     l242:
  3271                           
  3272                           ;main.c: 432: BUFFRESP[2] = desp_hora;
  3273  000942  C047  F035         	movff	_desp_hora,_BUFFRESP+2
  3274                           
  3275                           ;main.c: 433: BUFFRESP[3] = desp_min;
  3276  000946  C046  F036         	movff	_desp_min,_BUFFRESP+3
  3277                           
  3278                           ;main.c: 434: BUFFRESP[4] = 0xFF;
  3279  00094A  6837               	setf	_BUFFRESP+4,c
  3280                           
  3281                           ;main.c: 439: }
  3282                           
  3283                           ;main.c: 438: break;
  3284                           
  3285                           ;main.c: 437: default:
  3286                           
  3287                           ;main.c: 435: break;
  3288  00094C  D07D               	goto	l2710
  3289  00094E                     l2680:
  3290  00094E  503B               	movf	_BUFFCOM+1,w,c
  3291                           
  3292                           ; Switch size 1, requested type "space"
  3293                           ; Number of cases is 4, Range of values is 48 to 51
  3294                           ; switch strategies available:
  3295                           ; Name         Instructions Cycles
  3296                           ; simple_byte           13     7 (average)
  3297                           ;	Chosen strategy is simple_byte
  3298  000950  0A30               	xorlw	48	; case 48
  3299  000952  B4D8               	btfsc	status,2,c
  3300  000954  D7B1               	goto	l2676
  3301  000956  0A01               	xorlw	1	; case 49
  3302  000958  B4D8               	btfsc	status,2,c
  3303  00095A  D7E5               	goto	l240
  3304  00095C  0A03               	xorlw	3	; case 50
  3305  00095E  B4D8               	btfsc	status,2,c
  3306  000960  D7E9               	goto	l241
  3307  000962  0A01               	xorlw	1	; case 51
  3308  000964  B4D8               	btfsc	status,2,c
  3309  000966  D7ED               	goto	l242
  3310                           
  3311                           ;main.c: 440: break;
  3312  000968  D06F               	goto	l2710
  3313  00096A                     l2682:
  3314                           
  3315                           ;main.c: 443: for(iterator = 0; iterator < 5; iterator++){
  3316  00096A  0E00               	movlw	0
  3317  00096C  0100               	movlb	0	; () banked
  3318  00096E  6F67               	movwf	(trataComando@iterator+1)& (0+255),b
  3319  000970  0E00               	movlw	0
  3320  000972  6F66               	movwf	trataComando@iterator& (0+255),b
  3321  000974                     l2684:
  3322                           
  3323                           ; BSR set to: 0
  3324  000974  0100               	movlb	0	; () banked
  3325  000976  BF67               	btfsc	(trataComando@iterator+1)& (0+255),7,b
  3326  000978  D008               	goto	l2688
  3327  00097A  0100               	movlb	0	; () banked
  3328  00097C  5167               	movf	(trataComando@iterator+1)& (0+255),w,b
  3329  00097E  E14F               	bnz	l2704
  3330  000980  0E05               	movlw	5
  3331  000982  0100               	movlb	0	; () banked
  3332  000984  5D66               	subwf	trataComando@iterator& (0+255),w,b
  3333  000986  B0D8               	btfsc	status,0,c
  3334  000988  D04A               	goto	l2704
  3335  00098A                     l2688:
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;main.c: 444: memcpy(&BUFFRESP[iterator], &BUFFCOM[iterator], sizeof(BUFFCOM[iterator]))
      +                          ;
  3339  00098A  0E33               	movlw	low _BUFFRESP
  3340  00098C  0100               	movlb	0	; () banked
  3341  00098E  2566               	addwf	trataComando@iterator& (0+255),w,b
  3342  000990  6E12               	movwf	memcpy@d1,c
  3343  000992  0E00               	movlw	high _BUFFRESP
  3344  000994  0100               	movlb	0	; () banked
  3345  000996  2167               	addwfc	(trataComando@iterator+1)& (0+255),w,b
  3346  000998  6E13               	movwf	memcpy@d1+1,c
  3347  00099A  0E3A               	movlw	low _BUFFCOM
  3348  00099C  0100               	movlb	0	; () banked
  3349  00099E  2566               	addwf	trataComando@iterator& (0+255),w,b
  3350  0009A0  0100               	movlb	0	; () banked
  3351  0009A2  6F64               	movwf	??_trataComando& (0+255),b
  3352  0009A4  0E00               	movlw	high _BUFFCOM
  3353  0009A6  0100               	movlb	0	; () banked
  3354  0009A8  2167               	addwfc	(trataComando@iterator+1)& (0+255),w,b
  3355  0009AA  0100               	movlb	0	; () banked
  3356  0009AC  6F65               	movwf	(??_trataComando+1)& (0+255),b
  3357  0009AE  C064  F014         	movff	??_trataComando,memcpy@s1
  3358  0009B2  C065  F015         	movff	??_trataComando+1,memcpy@s1+1
  3359  0009B6  5014               	movf	memcpy@s1,w,c
  3360  0009B8  1015               	iorwf	memcpy@s1+1,w,c
  3361  0009BA  A4D8               	btfss	status,2,c
  3362  0009BC  0E20               	movlw	32
  3363  0009BE  6E16               	movwf	memcpy@s1+2,c
  3364  0009C0  0E00               	movlw	0
  3365  0009C2  6E18               	movwf	memcpy@n+1,c
  3366  0009C4  0E01               	movlw	1
  3367  0009C6  6E17               	movwf	memcpy@n,c
  3368  0009C8  ECEE  F007         	call	_memcpy	;wreg free
  3369  0009CC  0100               	movlb	0	; () banked
  3370  0009CE  4B66               	infsnz	trataComando@iterator& (0+255),f,b
  3371  0009D0  2B67               	incf	(trataComando@iterator+1)& (0+255),f,b
  3372  0009D2  D7D0               	goto	l2684
  3373  0009D4                     l2694:
  3374                           
  3375                           ;main.c: 450: versao = BUFFCOM[2]-48;
  3376  0009D4  503C               	movf	_BUFFCOM+2,w,c
  3377  0009D6  0FD0               	addlw	208
  3378  0009D8  6E4C               	movwf	_versao,c
  3379                           
  3380                           ;main.c: 451: revisao = BUFFCOM[3]-48;
  3381  0009DA  503D               	movf	_BUFFCOM+3,w,c
  3382  0009DC  0FD0               	addlw	208
  3383  0009DE  6E4B               	movwf	_revisao,c
  3384                           
  3385                           ;main.c: 452: break;
  3386  0009E0  D033               	goto	l2710
  3387  0009E2                     l2696:
  3388                           
  3389                           ;main.c: 456: hora = (BUFFCOM[2]-48);
  3390  0009E2  503C               	movf	_BUFFCOM+2,w,c
  3391  0009E4  0FD0               	addlw	208
  3392  0009E6  6E2E               	movwf	_hora,c
  3393                           
  3394                           ;main.c: 457: minuto = (BUFFCOM[3]-48);
  3395  0009E8  503D               	movf	_BUFFCOM+3,w,c
  3396  0009EA  0FD0               	addlw	208
  3397  0009EC  6E2D               	movwf	_minuto,c
  3398                           
  3399                           ;main.c: 458: segundo = (BUFFCOM[4]-48);
  3400  0009EE  503E               	movf	_BUFFCOM+4,w,c
  3401  0009F0  0FD0               	addlw	208
  3402  0009F2  6E2C               	movwf	_segundo,c
  3403                           
  3404                           ;main.c: 459: break;
  3405  0009F4  D029               	goto	l2710
  3406  0009F6                     l2698:
  3407                           
  3408                           ;main.c: 463: dia = BUFFCOM[2]-48;
  3409  0009F6  503C               	movf	_BUFFCOM+2,w,c
  3410  0009F8  0FD0               	addlw	208
  3411  0009FA  6E49               	movwf	_dia,c
  3412                           
  3413                           ;main.c: 464: mes = BUFFCOM[3]-48;
  3414  0009FC  503D               	movf	_BUFFCOM+3,w,c
  3415  0009FE  0FD0               	addlw	208
  3416  000A00  6E48               	movwf	_mes,c
  3417                           
  3418                           ;main.c: 465: ano = BUFFCOM[4]-48;
  3419  000A02  0ED0               	movlw	208
  3420  000A04  243E               	addwf	_BUFFCOM+4,w,c
  3421  000A06  6E44               	movwf	_ano,c
  3422  000A08  6A45               	clrf	_ano+1,c
  3423  000A0A  0EFF               	movlw	255
  3424  000A0C  2245               	addwfc	_ano+1,f,c
  3425                           
  3426                           ;main.c: 466: break;
  3427  000A0E  D01C               	goto	l2710
  3428  000A10                     l2700:
  3429                           
  3430                           ;main.c: 470: desp_hora = BUFFCOM[2]-48;
  3431  000A10  503C               	movf	_BUFFCOM+2,w,c
  3432  000A12  0FD0               	addlw	208
  3433  000A14  6E47               	movwf	_desp_hora,c
  3434                           
  3435                           ;main.c: 471: desp_min = BUFFCOM[3]-48;
  3436  000A16  503D               	movf	_BUFFCOM+3,w,c
  3437  000A18  0FD0               	addlw	208
  3438  000A1A  6E46               	movwf	_desp_min,c
  3439                           
  3440                           ;main.c: 475: }
  3441                           
  3442                           ;main.c: 474: break;
  3443                           
  3444                           ;main.c: 473: default:
  3445  000A1C  D015               	goto	l2710
  3446  000A1E                     l2704:
  3447  000A1E  503B               	movf	_BUFFCOM+1,w,c
  3448                           
  3449                           ; Switch size 1, requested type "space"
  3450                           ; Number of cases is 4, Range of values is 48 to 51
  3451                           ; switch strategies available:
  3452                           ; Name         Instructions Cycles
  3453                           ; simple_byte           13     7 (average)
  3454                           ;	Chosen strategy is simple_byte
  3455  000A20  0A30               	xorlw	48	; case 48
  3456  000A22  B4D8               	btfsc	status,2,c
  3457  000A24  D7D7               	goto	l2694
  3458  000A26  0A01               	xorlw	1	; case 49
  3459  000A28  B4D8               	btfsc	status,2,c
  3460  000A2A  D7DB               	goto	l2696
  3461  000A2C  0A03               	xorlw	3	; case 50
  3462  000A2E  B4D8               	btfsc	status,2,c
  3463  000A30  D7E2               	goto	l2698
  3464  000A32  0A01               	xorlw	1	; case 51
  3465  000A34  B4D8               	btfsc	status,2,c
  3466  000A36  D7EC               	goto	l2700
  3467                           
  3468                           ;main.c: 477: }
  3469                           
  3470                           ;main.c: 476: break;
  3471  000A38  D007               	goto	l2710
  3472  000A3A                     l2708:
  3473  000A3A  503A               	movf	_BUFFCOM,w,c
  3474                           
  3475                           ; Switch size 1, requested type "space"
  3476                           ; Number of cases is 2, Range of values is 49 to 50
  3477                           ; switch strategies available:
  3478                           ; Name         Instructions Cycles
  3479                           ; simple_byte            7     4 (average)
  3480                           ;	Chosen strategy is simple_byte
  3481  000A3C  0A31               	xorlw	49	; case 49
  3482  000A3E  B4D8               	btfsc	status,2,c
  3483  000A40  D714               	goto	l2674
  3484  000A42  0A03               	xorlw	3	; case 50
  3485  000A44  B4D8               	btfsc	status,2,c
  3486  000A46  D791               	goto	l2682
  3487  000A48                     l2710:
  3488                           
  3489                           ;main.c: 478: calculaCRCBUFFRESP();
  3490  000A48  ECFA  F006         	call	_calculaCRCBUFFRESP	;wreg free
  3491  000A4C  0012               	return		;funcret
  3492  000A4E                     __end_of_trataComando:
  3493                           	opt stack 0
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           intcon	equ	0xFF2
  3501                           indf0	equ	0xFEF
  3502                           postinc0	equ	0xFEE
  3503                           fsr0h	equ	0xFEA
  3504                           fsr0l	equ	0xFE9
  3505                           wreg	equ	0xFE8
  3506                           postdec1	equ	0xFE5
  3507                           fsr1l	equ	0xFE1
  3508                           indf2	equ	0xFDF
  3509                           postinc2	equ	0xFDE
  3510                           postdec2	equ	0xFDD
  3511                           fsr2h	equ	0xFDA
  3512                           fsr2l	equ	0xFD9
  3513                           status	equ	0xFD8
  3514                           
  3515 ;; *************** function _calculaCRCBUFFRESP *****************
  3516 ;; Defined at:
  3517 ;;		line 389 in file "main.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  crc             2    2[BANK0 ] unsigned int 
  3522 ;;  crc2            1    1[BANK0 ] unsigned char 
  3523 ;;  crc1            1    0[BANK0 ] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0
  3534 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3535 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3536 ;;      Totals:         3       4       0       0       0       0       0       0       0
  3537 ;;Total ram usage:        7 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    2
  3540 ;; This function calls:
  3541 ;;		_crc16
  3542 ;;		_memcpy
  3543 ;; This function is called by:
  3544 ;;		_trataComando
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text20
  3549  000DF4                     __ptext20:
  3550                           	opt stack 0
  3551  000DF4                     _calculaCRCBUFFRESP:
  3552                           	opt stack 26
  3553                           
  3554                           ;main.c: 390: unsigned int crc = crc16(BUFFCOM, 5);
  3555                           
  3556                           ;incstack = 0
  3557  000DF4  0E3A               	movlw	low _BUFFCOM
  3558  000DF6  6E12               	movwf	crc16@data_p,c
  3559  000DF8  0E00               	movlw	high _BUFFCOM
  3560  000DFA  6E13               	movwf	crc16@data_p+1,c
  3561  000DFC  0E00               	movlw	0
  3562  000DFE  6E15               	movwf	crc16@length+1,c
  3563  000E00  0E05               	movlw	5
  3564  000E02  6E14               	movwf	crc16@length,c
  3565  000E04  ECEC  F005         	call	_crc16	;wreg free
  3566  000E08  C012  F062         	movff	?_crc16,calculaCRCBUFFRESP@crc
  3567  000E0C  C013  F063         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  3568                           
  3569                           ;main.c: 391: unsigned char crc1 = crc >> 8;
  3570  000E10  0100               	movlb	0	; () banked
  3571  000E12  5163               	movf	(calculaCRCBUFFRESP@crc+1)& (0+255),w,b
  3572  000E14  0100               	movlb	0	; () banked
  3573  000E16  6F60               	movwf	calculaCRCBUFFRESP@crc1& (0+255),b
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;main.c: 392: unsigned char crc2 = crc & 0xFF;
  3577  000E18  C062  F061         	movff	calculaCRCBUFFRESP@crc,calculaCRCBUFFRESP@crc2
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;main.c: 393: memcpy(&BUFFCOM[5], crc1, sizeof(BUFFCOM[5]));
  3581  000E1C  0E3F               	movlw	low (_BUFFCOM+5)
  3582  000E1E  6E12               	movwf	memcpy@d1,c
  3583  000E20  0E00               	movlw	high (_BUFFCOM+5)
  3584  000E22  6E13               	movwf	memcpy@d1+1,c
  3585  000E24  0100               	movlb	0	; () banked
  3586  000E26  5160               	movf	calculaCRCBUFFRESP@crc1& (0+255),w,b
  3587  000E28  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  3588  000E2A  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  3589  000E2C  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  3590  000E2E  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  3591  000E32  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  3592  000E36  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  3593  000E3A  0E00               	movlw	0
  3594  000E3C  6E18               	movwf	memcpy@n+1,c
  3595  000E3E  0E01               	movlw	1
  3596  000E40  6E17               	movwf	memcpy@n,c
  3597  000E42  ECEE  F007         	call	_memcpy	;wreg free
  3598                           
  3599                           ;main.c: 394: memcpy(&BUFFCOM[6], crc2, sizeof(BUFFCOM[6]));
  3600  000E46  0E40               	movlw	low (_BUFFCOM+6)
  3601  000E48  6E12               	movwf	memcpy@d1,c
  3602  000E4A  0E00               	movlw	high (_BUFFCOM+6)
  3603  000E4C  6E13               	movwf	memcpy@d1+1,c
  3604  000E4E  0100               	movlb	0	; () banked
  3605  000E50  5161               	movf	calculaCRCBUFFRESP@crc2& (0+255),w,b
  3606  000E52  6E1F               	movwf	??_calculaCRCBUFFRESP& (0+255),c
  3607  000E54  6A20               	clrf	(??_calculaCRCBUFFRESP+1)& (0+255),c
  3608  000E56  6A21               	clrf	(??_calculaCRCBUFFRESP+2)& (0+255),c
  3609  000E58  C01F  F014         	movff	??_calculaCRCBUFFRESP,memcpy@s1
  3610  000E5C  C020  F015         	movff	??_calculaCRCBUFFRESP+1,memcpy@s1+1
  3611  000E60  C021  F016         	movff	??_calculaCRCBUFFRESP+2,memcpy@s1+2
  3612  000E64  0E00               	movlw	0
  3613  000E66  6E18               	movwf	memcpy@n+1,c
  3614  000E68  0E01               	movlw	1
  3615  000E6A  6E17               	movwf	memcpy@n,c
  3616  000E6C  ECEE  F007         	call	_memcpy	;wreg free
  3617                           
  3618                           ;main.c: 395: estado = 3;
  3619  000E70  0E03               	movlw	3
  3620  000E72  6E31               	movwf	_estado,c
  3621  000E74  0012               	return		;funcret
  3622  000E76                     __end_of_calculaCRCBUFFRESP:
  3623                           	opt stack 0
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           intcon	equ	0xFF2
  3631                           indf0	equ	0xFEF
  3632                           postinc0	equ	0xFEE
  3633                           fsr0h	equ	0xFEA
  3634                           fsr0l	equ	0xFE9
  3635                           wreg	equ	0xFE8
  3636                           postdec1	equ	0xFE5
  3637                           fsr1l	equ	0xFE1
  3638                           indf2	equ	0xFDF
  3639                           postinc2	equ	0xFDE
  3640                           postdec2	equ	0xFDD
  3641                           fsr2h	equ	0xFDA
  3642                           fsr2l	equ	0xFD9
  3643                           status	equ	0xFD8
  3644                           
  3645 ;; *************** function _memcpy *****************
  3646 ;; Defined at:
  3647 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  d1              2   17[COMRAM] PTR void 
  3650 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  3651 ;;  s1              3   19[COMRAM] PTR const void 
  3652 ;;		 -> ROM(32767), BUFFCOM(7), revisao(1), versao(1), 
  3653 ;;  n               2   22[COMRAM] unsigned int 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  s               3   24[COMRAM] PTR const unsigned char 
  3656 ;;		 -> ROM(32767), BUFFCOM(7), revisao(1), versao(1), 
  3657 ;;  d               2   27[COMRAM] PTR unsigned char 
  3658 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  2   17[COMRAM] PTR void 
  3661 ;; Registers used:
  3662 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3668 ;;      Params:         7       0       0       0       0       0       0       0       0
  3669 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3671 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3672 ;;Total ram usage:       12 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_calculaCRCBUFFRESP
  3679 ;;		_trataComando
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text21
  3684  000FDC                     __ptext21:
  3685                           	opt stack 0
  3686  000FDC                     _memcpy:
  3687                           	opt stack 27
  3688                           
  3689                           ;incstack = 0
  3690  000FDC  C014  F019         	movff	memcpy@s1,memcpy@s
  3691  000FE0  C015  F01A         	movff	memcpy@s1+1,memcpy@s+1
  3692  000FE4  C016  F01B         	movff	memcpy@s1+2,memcpy@s+2
  3693  000FE8  C012  F01C         	movff	memcpy@d1,memcpy@d
  3694  000FEC  C013  F01D         	movff	memcpy@d1+1,memcpy@d+1
  3695  000FF0  D01D               	goto	l2558
  3696  000FF2                     l2552:
  3697  000FF2  C019  FFF6         	movff	memcpy@s,tblptrl
  3698  000FF6  C01A  FFF7         	movff	memcpy@s+1,tblptrh
  3699  000FFA  C01B  FFF8         	movff	memcpy@s+2,tblptru
  3700  000FFE  C01C  FFD9         	movff	memcpy@d,fsr2l
  3701  001002  C01D  FFDA         	movff	memcpy@d+1,fsr2h
  3702  001006  BAF8               	btfsc	tblptru,5,c
  3703  001008  D003               	bra	u1587
  3704  00100A  0008               	tblrd		*
  3705  00100C  50F5               	movf	tablat,w,c
  3706  00100E  D005               	bra	u1580
  3707  001010                     u1587:
  3708  001010  CFF6 FFE9          	movff	tblptrl,fsr0l
  3709  001014  CFF7 FFEA          	movff	tblptrh,fsr0h
  3710  001018  50EF               	movf	indf0,w,c
  3711  00101A                     u1580:
  3712  00101A  6EDF               	movwf	indf2,c
  3713  00101C  0E01               	movlw	1
  3714  00101E  2619               	addwf	memcpy@s,f,c
  3715  001020  0E00               	movlw	0
  3716  001022  221A               	addwfc	memcpy@s+1,f,c
  3717  001024  0E00               	movlw	0
  3718  001026  221B               	addwfc	memcpy@s+2,f,c
  3719  001028  4A1C               	infsnz	memcpy@d,f,c
  3720  00102A  2A1D               	incf	memcpy@d+1,f,c
  3721  00102C                     l2558:
  3722  00102C  0617               	decf	memcpy@n,f,c
  3723  00102E  A0D8               	btfss	status,0,c
  3724  001030  0618               	decf	memcpy@n+1,f,c
  3725  001032  2817               	incf	memcpy@n,w,c
  3726  001034  E1DE               	bnz	l2552
  3727  001036  2818               	incf	memcpy@n+1,w,c
  3728  001038  B4D8               	btfsc	status,2,c
  3729  00103A  0012               	return	
  3730  00103C  D7DA               	goto	l2552
  3731  00103E                     __end_of_memcpy:
  3732                           	opt stack 0
  3733                           tblptru	equ	0xFF8
  3734                           tblptrh	equ	0xFF7
  3735                           tblptrl	equ	0xFF6
  3736                           tablat	equ	0xFF5
  3737                           prodh	equ	0xFF4
  3738                           prodl	equ	0xFF3
  3739                           intcon	equ	0xFF2
  3740                           indf0	equ	0xFEF
  3741                           postinc0	equ	0xFEE
  3742                           fsr0h	equ	0xFEA
  3743                           fsr0l	equ	0xFE9
  3744                           wreg	equ	0xFE8
  3745                           postdec1	equ	0xFE5
  3746                           fsr1l	equ	0xFE1
  3747                           indf2	equ	0xFDF
  3748                           postinc2	equ	0xFDE
  3749                           postdec2	equ	0xFDD
  3750                           fsr2h	equ	0xFDA
  3751                           fsr2l	equ	0xFD9
  3752                           status	equ	0xFD8
  3753                           
  3754 ;; *************** function _crc16 *****************
  3755 ;; Defined at:
  3756 ;;		line 368 in file "main.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  data_p          2   17[COMRAM] PTR unsigned char 
  3759 ;;		 -> BUFFCOM(7), 
  3760 ;;  length          2   19[COMRAM] unsigned short 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  crc             2   28[COMRAM] unsigned int 
  3763 ;;  data            2   26[COMRAM] unsigned int 
  3764 ;;  i               1   25[COMRAM] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  2   17[COMRAM] unsigned short 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3774 ;;      Params:         4       0       0       0       0       0       0       0       0
  3775 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3776 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3777 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3778 ;;Total ram usage:       13 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_calculaCRCBUFFRESP
  3785 ;;		_verificaCRCBUFFCOM
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text22
  3790  000BD8                     __ptext22:
  3791                           	opt stack 0
  3792  000BD8                     _crc16:
  3793                           	opt stack 27
  3794                           
  3795                           ;main.c: 369: unsigned char i;
  3796                           ;main.c: 370: unsigned int data;
  3797                           ;main.c: 371: unsigned int crc = 0xffff;
  3798                           
  3799                           ;incstack = 0
  3800  000BD8  681D               	setf	crc16@crc,c
  3801  000BDA  681E               	setf	crc16@crc+1,c
  3802                           
  3803                           ;main.c: 372: if (length == 0)
  3804  000BDC  5014               	movf	crc16@length,w,c
  3805  000BDE  1015               	iorwf	crc16@length+1,w,c
  3806  000BE0  A4D8               	btfss	status,2,c
  3807  000BE2  D005               	goto	l2520
  3808                           
  3809                           ;main.c: 373: return (~crc);
  3810  000BE4  1C1D               	comf	crc16@crc,w,c
  3811  000BE6  6E12               	movwf	?_crc16,c
  3812  000BE8  1C1E               	comf	crc16@crc+1,w,c
  3813  000BEA  6E13               	movwf	?_crc16+1,c
  3814  000BEC  0012               	return	
  3815  000BEE                     l2520:
  3816                           
  3817                           ;main.c: 375: for (i=0, data=(unsigned int)0xff & *data_p++; i < 8; i++, data >>= 1){
  3818  000BEE  0E00               	movlw	0
  3819  000BF0  6E1A               	movwf	crc16@i,c
  3820  000BF2  C012  FFD9         	movff	crc16@data_p,fsr2l
  3821  000BF6  C013  FFDA         	movff	crc16@data_p+1,fsr2h
  3822  000BFA  50DF               	movf	indf2,w,c
  3823  000BFC  6E16               	movwf	??_crc16& (0+255),c
  3824  000BFE  5016               	movf	??_crc16,w,c
  3825  000C00  6E1B               	movwf	crc16@data,c
  3826  000C02  6A1C               	clrf	crc16@data+1,c
  3827  000C04  4A12               	infsnz	crc16@data_p,f,c
  3828  000C06  2A13               	incf	crc16@data_p+1,f,c
  3829  000C08                     l2526:
  3830  000C08  0E07               	movlw	7
  3831  000C0A  641A               	cpfsgt	crc16@i,c
  3832  000C0C  D001               	goto	l2530
  3833  000C0E  D028               	goto	l2538
  3834  000C10                     l2530:
  3835                           
  3836                           ;main.c: 376: if ((crc & 0x0001) ^ (data & 0x0001))
  3837  000C10  0E01               	movlw	1
  3838  000C12  141B               	andwf	crc16@data,w,c
  3839  000C14  6E16               	movwf	??_crc16& (0+255),c
  3840  000C16  0E00               	movlw	0
  3841  000C18  141C               	andwf	crc16@data+1,w,c
  3842  000C1A  6E17               	movwf	(??_crc16+1)& (0+255),c
  3843  000C1C  0E01               	movlw	1
  3844  000C1E  141D               	andwf	crc16@crc,w,c
  3845  000C20  6E18               	movwf	(??_crc16+2)& (0+255),c
  3846  000C22  0E00               	movlw	0
  3847  000C24  141E               	andwf	crc16@crc+1,w,c
  3848  000C26  6E19               	movwf	(??_crc16+3)& (0+255),c
  3849  000C28  5016               	movf	??_crc16,w,c
  3850  000C2A  1A18               	xorwf	??_crc16+2,f,c
  3851  000C2C  5017               	movf	??_crc16+1,w,c
  3852  000C2E  1A19               	xorwf	??_crc16+3,f,c
  3853  000C30  5018               	movf	??_crc16+2,w,c
  3854  000C32  1019               	iorwf	??_crc16+3,w,c
  3855  000C34  B4D8               	btfsc	status,2,c
  3856  000C36  D00C               	goto	l2534
  3857                           
  3858                           ;main.c: 377: crc = (crc >> 1) ^ 0x8408;
  3859  000C38  90D8               	bcf	status,0,c
  3860  000C3A  301E               	rrcf	crc16@crc+1,w,c
  3861  000C3C  6E17               	movwf	(??_crc16+1)& (0+255),c
  3862  000C3E  301D               	rrcf	crc16@crc,w,c
  3863  000C40  6E16               	movwf	??_crc16& (0+255),c
  3864  000C42  0E08               	movlw	8
  3865  000C44  1816               	xorwf	??_crc16,w,c
  3866  000C46  6E1D               	movwf	crc16@crc,c
  3867  000C48  0E84               	movlw	132
  3868  000C4A  1817               	xorwf	??_crc16+1,w,c
  3869  000C4C  6E1E               	movwf	crc16@crc+1,c
  3870  000C4E  D003               	goto	l228
  3871  000C50                     l2534:
  3872                           
  3873                           ;main.c: 378: else crc >>= 1;
  3874  000C50  90D8               	bcf	status,0,c
  3875  000C52  321E               	rrcf	crc16@crc+1,f,c
  3876  000C54  321D               	rrcf	crc16@crc,f,c
  3877  000C56                     l228:
  3878  000C56  2A1A               	incf	crc16@i,f,c
  3879  000C58  90D8               	bcf	status,0,c
  3880  000C5A  321C               	rrcf	crc16@data+1,f,c
  3881  000C5C  321B               	rrcf	crc16@data,f,c
  3882  000C5E  D7D4               	goto	l2526
  3883  000C60                     l2538:
  3884                           
  3885                           ;main.c: 379: }
  3886                           ;main.c: 380: } while (--length);
  3887  000C60  0614               	decf	crc16@length,f,c
  3888  000C62  A0D8               	btfss	status,0,c
  3889  000C64  0615               	decf	crc16@length+1,f,c
  3890  000C66  5014               	movf	crc16@length,w,c
  3891  000C68  1015               	iorwf	crc16@length+1,w,c
  3892  000C6A  A4D8               	btfss	status,2,c
  3893  000C6C  D7C0               	goto	l2520
  3894                           
  3895                           ;main.c: 382: crc = ~crc;
  3896  000C6E  1E1D               	comf	crc16@crc,f,c
  3897  000C70  1E1E               	comf	crc16@crc+1,f,c
  3898                           
  3899                           ;main.c: 383: data = crc;
  3900  000C72  C01D  F01B         	movff	crc16@crc,crc16@data
  3901  000C76  C01E  F01C         	movff	crc16@crc+1,crc16@data+1
  3902                           
  3903                           ;main.c: 384: crc = (crc << 8) | (data >> 8 & 0xff);
  3904  000C7A  C01B  F016         	movff	crc16@data,??_crc16
  3905  000C7E  C01C  F017         	movff	crc16@data+1,??_crc16+1
  3906  000C82  C017  F016         	movff	??_crc16+1,??_crc16
  3907  000C86  6A17               	clrf	??_crc16+1,c
  3908  000C88  5016               	movf	??_crc16,w,c
  3909  000C8A  C01D  F018         	movff	crc16@crc,??_crc16+2
  3910  000C8E  C01E  F019         	movff	crc16@crc+1,??_crc16+3
  3911  000C92  C018  F019         	movff	??_crc16+2,??_crc16+3
  3912  000C96  6A18               	clrf	??_crc16+2,c
  3913  000C98  1018               	iorwf	??_crc16+2,w,c
  3914  000C9A  6E1D               	movwf	crc16@crc,c
  3915  000C9C  5019               	movf	??_crc16+3,w,c
  3916  000C9E  6E1E               	movwf	crc16@crc+1,c
  3917                           
  3918                           ;main.c: 385: return (crc);
  3919  000CA0  C01D  F012         	movff	crc16@crc,?_crc16
  3920  000CA4  C01E  F013         	movff	crc16@crc+1,?_crc16+1
  3921  000CA8  0012               	return	
  3922  000CAA                     __end_of_crc16:
  3923                           	opt stack 0
  3924                           tblptru	equ	0xFF8
  3925                           tblptrh	equ	0xFF7
  3926                           tblptrl	equ	0xFF6
  3927                           tablat	equ	0xFF5
  3928                           prodh	equ	0xFF4
  3929                           prodl	equ	0xFF3
  3930                           intcon	equ	0xFF2
  3931                           indf0	equ	0xFEF
  3932                           postinc0	equ	0xFEE
  3933                           fsr0h	equ	0xFEA
  3934                           fsr0l	equ	0xFE9
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           fsr1l	equ	0xFE1
  3938                           indf2	equ	0xFDF
  3939                           postinc2	equ	0xFDE
  3940                           postdec2	equ	0xFDD
  3941                           fsr2h	equ	0xFDA
  3942                           fsr2l	equ	0xFD9
  3943                           status	equ	0xFD8
  3944                           
  3945 ;; *************** function _enviaByte *****************
  3946 ;; Defined at:
  3947 ;;		line 525 in file "main.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  BYTE            1    wreg     unsigned char 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  BYTE            1   17[COMRAM] unsigned char 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3961 ;;      Params:         0       0       0       0       0       0       0       0       0
  3962 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3964 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3965 ;;Total ram usage:        1 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    1
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_maquinaEstado
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text23
  3976  001534                     __ptext23:
  3977                           	opt stack 0
  3978  001534                     _enviaByte:
  3979                           	opt stack 28
  3980                           
  3981                           ;incstack = 0
  3982                           ;enviaByte@BYTE stored from wreg
  3983  001534  6E12               	movwf	enviaByte@BYTE,c
  3984  001536                     l277:
  3985  001536  A89E               	btfss	3998,4,c	;volatile
  3986  001538  D7FE               	goto	l277
  3987                           
  3988                           ;main.c: 527: TXREG = BYTE;
  3989  00153A  C012  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  3990                           
  3991                           ;main.c: 529: if(BYTE==0x05)
  3992  00153E  0E05               	movlw	5
  3993  001540  1812               	xorwf	enviaByte@BYTE,w,c
  3994  001542  A4D8               	btfss	status,2,c
  3995  001544  D003               	goto	l1596
  3996                           
  3997                           ;main.c: 530: estado = 2;
  3998  001546  0E02               	movlw	2
  3999  001548  6E31               	movwf	_estado,c
  4000  00154A  0012               	return	
  4001  00154C                     l1596:
  4002                           
  4003                           ;main.c: 531: else
  4004                           ;main.c: 532: estado = 0;
  4005  00154C  0E00               	movlw	0
  4006  00154E  6E31               	movwf	_estado,c
  4007  001550  0012               	return	
  4008  001552                     __end_of_enviaByte:
  4009                           	opt stack 0
  4010                           tblptru	equ	0xFF8
  4011                           tblptrh	equ	0xFF7
  4012                           tblptrl	equ	0xFF6
  4013                           tablat	equ	0xFF5
  4014                           prodh	equ	0xFF4
  4015                           prodl	equ	0xFF3
  4016                           intcon	equ	0xFF2
  4017                           indf0	equ	0xFEF
  4018                           postinc0	equ	0xFEE
  4019                           fsr0h	equ	0xFEA
  4020                           fsr0l	equ	0xFE9
  4021                           wreg	equ	0xFE8
  4022                           postdec1	equ	0xFE5
  4023                           fsr1l	equ	0xFE1
  4024                           indf2	equ	0xFDF
  4025                           postinc2	equ	0xFDE
  4026                           postdec2	equ	0xFDD
  4027                           fsr2h	equ	0xFDA
  4028                           fsr2l	equ	0xFD9
  4029                           status	equ	0xFD8
  4030                           
  4031 ;; *************** function _init_XLCD *****************
  4032 ;; Defined at:
  4033 ;;		line 251 in file "main.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4047 ;;      Params:         0       0       0       0       0       0       0       0       0
  4048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4051 ;;Total ram usage:        0 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    5
  4054 ;; This function calls:
  4055 ;;		_BusyXLCD
  4056 ;;		_OpenXLCD
  4057 ;;		_WriteCmdXLCD
  4058 ;; This function is called by:
  4059 ;;		_main
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text24
  4064  001552                     __ptext24:
  4065                           	opt stack 0
  4066  001552                     _init_XLCD:
  4067                           	opt stack 25
  4068                           
  4069                           ;main.c: 252: OpenXLCD(0b00101100&0b00111000);
  4070                           
  4071                           ;incstack = 0
  4072  001552  0E28               	movlw	40
  4073  001554  ECA8  F006         	call	_OpenXLCD
  4074  001558                     l2344:
  4075  001558  EC16  F00A         	call	_BusyXLCD	;wreg free
  4076  00155C  0900               	iorlw	0
  4077  00155E  A4D8               	btfss	status,2,c
  4078  001560  D7FB               	goto	l2344
  4079                           
  4080                           ;main.c: 254: WriteCmdXLCD(0x06);
  4081  001562  0E06               	movlw	6
  4082  001564  ECF7  F009         	call	_WriteCmdXLCD
  4083                           
  4084                           ;main.c: 255: WriteCmdXLCD(0x0C);
  4085  001568  0E0C               	movlw	12
  4086  00156A  ECF7  F009         	call	_WriteCmdXLCD
  4087  00156E  0012               	return		;funcret
  4088  001570                     __end_of_init_XLCD:
  4089                           	opt stack 0
  4090                           tblptru	equ	0xFF8
  4091                           tblptrh	equ	0xFF7
  4092                           tblptrl	equ	0xFF6
  4093                           tablat	equ	0xFF5
  4094                           prodh	equ	0xFF4
  4095                           prodl	equ	0xFF3
  4096                           intcon	equ	0xFF2
  4097                           indf0	equ	0xFEF
  4098                           postinc0	equ	0xFEE
  4099                           fsr0h	equ	0xFEA
  4100                           fsr0l	equ	0xFE9
  4101                           wreg	equ	0xFE8
  4102                           postdec1	equ	0xFE5
  4103                           fsr1l	equ	0xFE1
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           postdec2	equ	0xFDD
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _OpenXLCD *****************
  4112 ;; Defined at:
  4113 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  lcdtype         1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  lcdtype         1   22[COMRAM] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4127 ;;      Params:         0       0       0       0       0       0       0       0       0
  4128 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4130 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4131 ;;Total ram usage:        1 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    4
  4134 ;; This function calls:
  4135 ;;		_BusyXLCD
  4136 ;;		_Delay10KTCYx
  4137 ;;		_DelayPORXLCD
  4138 ;;		_SetDDRamAddr
  4139 ;;		_WriteCmdXLCD
  4140 ;; This function is called by:
  4141 ;;		_init_XLCD
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text25
  4146  000D50                     __ptext25:
  4147                           	opt stack 0
  4148  000D50                     _OpenXLCD:
  4149                           	opt stack 25
  4150                           
  4151                           ;incstack = 0
  4152                           ;OpenXLCD@lcdtype stored from wreg
  4153  000D50  6E17               	movwf	OpenXLCD@lcdtype,c
  4154  000D52  0EF0               	movlw	240
  4155  000D54  1681               	andwf	3969,f,c	;volatile
  4156  000D56  0EF0               	movlw	240
  4157  000D58  1693               	andwf	3987,f,c	;volatile
  4158  000D5A  9C93               	bcf	3987,6,c	;volatile
  4159  000D5C  9A93               	bcf	3987,5,c	;volatile
  4160  000D5E  9893               	bcf	3987,4,c	;volatile
  4161  000D60  9C8A               	bcf	3978,6,c	;volatile
  4162  000D62  9A8A               	bcf	3978,5,c	;volatile
  4163  000D64  988A               	bcf	3978,4,c	;volatile
  4164  000D66  ECD9  F00A         	call	_DelayPORXLCD	;wreg free
  4165  000D6A  0E30               	movlw	48
  4166  000D6C  ECF7  F009         	call	_WriteCmdXLCD
  4167  000D70  0E05               	movlw	5
  4168  000D72  ECB8  F00A         	call	_Delay10KTCYx
  4169  000D76  0E30               	movlw	48
  4170  000D78  ECF7  F009         	call	_WriteCmdXLCD
  4171  000D7C  0E01               	movlw	1
  4172  000D7E  ECB8  F00A         	call	_Delay10KTCYx
  4173  000D82  0E32               	movlw	50
  4174  000D84  ECF7  F009         	call	_WriteCmdXLCD
  4175  000D88                     l2222:
  4176  000D88  EC16  F00A         	call	_BusyXLCD	;wreg free
  4177  000D8C  0900               	iorlw	0
  4178  000D8E  A4D8               	btfss	status,2,c
  4179  000D90  D7FB               	goto	l2222
  4180  000D92                     l2224:
  4181  000D92  EC16  F00A         	call	_BusyXLCD	;wreg free
  4182  000D96  0900               	iorlw	0
  4183  000D98  A4D8               	btfss	status,2,c
  4184  000D9A  D7FB               	goto	l2224
  4185  000D9C  5017               	movf	OpenXLCD@lcdtype,w,c
  4186  000D9E  ECF7  F009         	call	_WriteCmdXLCD
  4187  000DA2                     l2228:
  4188  000DA2  EC16  F00A         	call	_BusyXLCD	;wreg free
  4189  000DA6  0900               	iorlw	0
  4190  000DA8  A4D8               	btfss	status,2,c
  4191  000DAA  D7FB               	goto	l2228
  4192  000DAC  0E08               	movlw	8
  4193  000DAE  ECF7  F009         	call	_WriteCmdXLCD
  4194  000DB2                     l2232:
  4195  000DB2  EC16  F00A         	call	_BusyXLCD	;wreg free
  4196  000DB6  0900               	iorlw	0
  4197  000DB8  A4D8               	btfss	status,2,c
  4198  000DBA  D7FB               	goto	l2232
  4199  000DBC  0E0F               	movlw	15
  4200  000DBE  ECF7  F009         	call	_WriteCmdXLCD
  4201  000DC2                     l2236:
  4202  000DC2  EC16  F00A         	call	_BusyXLCD	;wreg free
  4203  000DC6  0900               	iorlw	0
  4204  000DC8  A4D8               	btfss	status,2,c
  4205  000DCA  D7FB               	goto	l2236
  4206  000DCC  0E01               	movlw	1
  4207  000DCE  ECF7  F009         	call	_WriteCmdXLCD
  4208  000DD2                     l2240:
  4209  000DD2  EC16  F00A         	call	_BusyXLCD	;wreg free
  4210  000DD6  0900               	iorlw	0
  4211  000DD8  A4D8               	btfss	status,2,c
  4212  000DDA  D7FB               	goto	l2240
  4213  000DDC  0E04               	movlw	4
  4214  000DDE  ECF7  F009         	call	_WriteCmdXLCD
  4215  000DE2                     l2244:
  4216  000DE2  EC16  F00A         	call	_BusyXLCD	;wreg free
  4217  000DE6  0900               	iorlw	0
  4218  000DE8  A4D8               	btfss	status,2,c
  4219  000DEA  D7FB               	goto	l2244
  4220  000DEC  0E80               	movlw	128
  4221  000DEE  EC20  F009         	call	_SetDDRamAddr
  4222  000DF2  0012               	return	
  4223  000DF4                     __end_of_OpenXLCD:
  4224                           	opt stack 0
  4225                           tblptru	equ	0xFF8
  4226                           tblptrh	equ	0xFF7
  4227                           tblptrl	equ	0xFF6
  4228                           tablat	equ	0xFF5
  4229                           prodh	equ	0xFF4
  4230                           prodl	equ	0xFF3
  4231                           intcon	equ	0xFF2
  4232                           indf0	equ	0xFEF
  4233                           postinc0	equ	0xFEE
  4234                           fsr0h	equ	0xFEA
  4235                           fsr0l	equ	0xFE9
  4236                           wreg	equ	0xFE8
  4237                           postdec1	equ	0xFE5
  4238                           fsr1l	equ	0xFE1
  4239                           indf2	equ	0xFDF
  4240                           postinc2	equ	0xFDE
  4241                           postdec2	equ	0xFDD
  4242                           fsr2h	equ	0xFDA
  4243                           fsr2l	equ	0xFD9
  4244                           status	equ	0xFD8
  4245                           
  4246 ;; *************** function _WriteCmdXLCD *****************
  4247 ;; Defined at:
  4248 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  cmd             1    wreg     unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  cmd             1   18[COMRAM] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0
  4263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4265 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4266 ;;Total ram usage:        1 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    3
  4269 ;; This function calls:
  4270 ;;		_DelayFor18TCY
  4271 ;; This function is called by:
  4272 ;;		_init_XLCD
  4273 ;;		_OpenXLCD
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text26
  4278  0013EE                     __ptext26:
  4279                           	opt stack 0
  4280  0013EE                     _WriteCmdXLCD:
  4281                           	opt stack 26
  4282                           
  4283                           ;incstack = 0
  4284                           ;WriteCmdXLCD@cmd stored from wreg
  4285  0013EE  6E13               	movwf	WriteCmdXLCD@cmd,c
  4286  0013F0  0EF0               	movlw	240
  4287  0013F2  1693               	andwf	3987,f,c	;volatile
  4288  0013F4  0EF0               	movlw	240
  4289  0013F6  1681               	andwf	3969,f,c	;volatile
  4290  0013F8  3813               	swapf	WriteCmdXLCD@cmd,w,c
  4291  0013FA  0B0F               	andlw	15
  4292  0013FC  0B0F               	andlw	15
  4293  0013FE  1281               	iorwf	3969,f,c	;volatile
  4294  001400  9C8A               	bcf	3978,6,c	;volatile
  4295  001402  9A8A               	bcf	3978,5,c	;volatile
  4296  001404  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4297  001408  888A               	bsf	3978,4,c	;volatile
  4298  00140A  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4299  00140E  988A               	bcf	3978,4,c	;volatile
  4300  001410  0EF0               	movlw	240
  4301  001412  1681               	andwf	3969,f,c	;volatile
  4302  001414  5013               	movf	WriteCmdXLCD@cmd,w,c
  4303  001416  0B0F               	andlw	15
  4304  001418  1281               	iorwf	3969,f,c	;volatile
  4305  00141A  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4306  00141E  888A               	bsf	3978,4,c	;volatile
  4307  001420  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4308  001424  988A               	bcf	3978,4,c	;volatile
  4309  001426  0E0F               	movlw	15
  4310  001428  1293               	iorwf	3987,f,c	;volatile
  4311  00142A  0012               	return	
  4312  00142C                     __end_of_WriteCmdXLCD:
  4313                           	opt stack 0
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodh	equ	0xFF4
  4319                           prodl	equ	0xFF3
  4320                           intcon	equ	0xFF2
  4321                           indf0	equ	0xFEF
  4322                           postinc0	equ	0xFEE
  4323                           fsr0h	equ	0xFEA
  4324                           fsr0l	equ	0xFE9
  4325                           wreg	equ	0xFE8
  4326                           postdec1	equ	0xFE5
  4327                           fsr1l	equ	0xFE1
  4328                           indf2	equ	0xFDF
  4329                           postinc2	equ	0xFDE
  4330                           postdec2	equ	0xFDD
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function _SetDDRamAddr *****************
  4336 ;; Defined at:
  4337 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  DDaddr          1    wreg     unsigned char 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  DDaddr          1   21[COMRAM] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4351 ;;      Params:         0       0       0       0       0       0       0       0       0
  4352 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4353 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4354 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4355 ;;Total ram usage:        4 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    3
  4358 ;; This function calls:
  4359 ;;		_DelayFor18TCY
  4360 ;; This function is called by:
  4361 ;;		_tela_1
  4362 ;;		_tela_2
  4363 ;;		_tela_3
  4364 ;;		_tela_4
  4365 ;;		_limpa_tela
  4366 ;;		_OpenXLCD
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text27
  4371  001240                     __ptext27:
  4372                           	opt stack 0
  4373  001240                     _SetDDRamAddr:
  4374                           	opt stack 24
  4375                           
  4376                           ;incstack = 0
  4377                           ;SetDDRamAddr@DDaddr stored from wreg
  4378  001240  6E16               	movwf	SetDDRamAddr@DDaddr,c
  4379  001242  0EF0               	movlw	240
  4380  001244  1693               	andwf	3987,f,c	;volatile
  4381  001246  0EF0               	movlw	240
  4382  001248  1681               	andwf	3969,f,c	;volatile
  4383  00124A  5016               	movf	SetDDRamAddr@DDaddr,w,c
  4384  00124C  6E13               	movwf	??_SetDDRamAddr& (0+255),c
  4385  00124E  6A14               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  4386  001250  8E13               	bsf	??_SetDDRamAddr,7,c
  4387  001252  0E04               	movlw	4
  4388  001254  6E15               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  4389  001256                     u885:
  4390  001256  3414               	rlcf	??_SetDDRamAddr+1,w,c
  4391  001258  3214               	rrcf	??_SetDDRamAddr+1,f,c
  4392  00125A  3213               	rrcf	??_SetDDRamAddr,f,c
  4393  00125C  2E15               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  4394  00125E  D7FB               	goto	u885
  4395  001260  5013               	movf	??_SetDDRamAddr,w,c
  4396  001262  0B0F               	andlw	15
  4397  001264  1281               	iorwf	3969,f,c	;volatile
  4398  001266  9C8A               	bcf	3978,6,c	;volatile
  4399  001268  9A8A               	bcf	3978,5,c	;volatile
  4400  00126A  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4401  00126E  888A               	bsf	3978,4,c	;volatile
  4402  001270  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4403  001274  988A               	bcf	3978,4,c	;volatile
  4404  001276  0EF0               	movlw	240
  4405  001278  1681               	andwf	3969,f,c	;volatile
  4406  00127A  5016               	movf	SetDDRamAddr@DDaddr,w,c
  4407  00127C  0B0F               	andlw	15
  4408  00127E  1281               	iorwf	3969,f,c	;volatile
  4409  001280  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4410  001284  888A               	bsf	3978,4,c	;volatile
  4411  001286  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4412  00128A  988A               	bcf	3978,4,c	;volatile
  4413  00128C  0E0F               	movlw	15
  4414  00128E  1293               	iorwf	3987,f,c	;volatile
  4415  001290  0012               	return	
  4416  001292                     __end_of_SetDDRamAddr:
  4417                           	opt stack 0
  4418                           tblptru	equ	0xFF8
  4419                           tblptrh	equ	0xFF7
  4420                           tblptrl	equ	0xFF6
  4421                           tablat	equ	0xFF5
  4422                           prodh	equ	0xFF4
  4423                           prodl	equ	0xFF3
  4424                           intcon	equ	0xFF2
  4425                           indf0	equ	0xFEF
  4426                           postinc0	equ	0xFEE
  4427                           fsr0h	equ	0xFEA
  4428                           fsr0l	equ	0xFE9
  4429                           wreg	equ	0xFE8
  4430                           postdec1	equ	0xFE5
  4431                           fsr1l	equ	0xFE1
  4432                           indf2	equ	0xFDF
  4433                           postinc2	equ	0xFDE
  4434                           postdec2	equ	0xFDD
  4435                           fsr2h	equ	0xFDA
  4436                           fsr2l	equ	0xFD9
  4437                           status	equ	0xFD8
  4438                           
  4439 ;; *************** function _DelayPORXLCD *****************
  4440 ;; Defined at:
  4441 ;;		line 357 in file "main.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4458 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    2
  4462 ;; This function calls:
  4463 ;;		_Delay1KTCYx
  4464 ;; This function is called by:
  4465 ;;		_OpenXLCD
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text28
  4470  0015B2                     __ptext28:
  4471                           	opt stack 0
  4472  0015B2                     _DelayPORXLCD:
  4473                           	opt stack 26
  4474                           
  4475                           ;main.c: 358: Delay1KTCYx(180);
  4476                           
  4477                           ;incstack = 0
  4478  0015B2  0EB4               	movlw	180
  4479  0015B4  ECC3  F00A         	call	_Delay1KTCYx
  4480  0015B8  0012               	return	
  4481  0015BA                     __end_of_DelayPORXLCD:
  4482                           	opt stack 0
  4483                           tblptru	equ	0xFF8
  4484                           tblptrh	equ	0xFF7
  4485                           tblptrl	equ	0xFF6
  4486                           tablat	equ	0xFF5
  4487                           prodh	equ	0xFF4
  4488                           prodl	equ	0xFF3
  4489                           intcon	equ	0xFF2
  4490                           indf0	equ	0xFEF
  4491                           postinc0	equ	0xFEE
  4492                           fsr0h	equ	0xFEA
  4493                           fsr0l	equ	0xFE9
  4494                           wreg	equ	0xFE8
  4495                           postdec1	equ	0xFE5
  4496                           fsr1l	equ	0xFE1
  4497                           indf2	equ	0xFDF
  4498                           postinc2	equ	0xFDE
  4499                           postdec2	equ	0xFDD
  4500                           fsr2h	equ	0xFDA
  4501                           fsr2l	equ	0xFD9
  4502                           status	equ	0xFD8
  4503                           
  4504 ;; *************** function _Delay1KTCYx *****************
  4505 ;; Defined at:
  4506 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  unit            1    wreg     unsigned char 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  unit            1   17[COMRAM] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0
  4521 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4523 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4524 ;;Total ram usage:        1 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    1
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_DelayPORXLCD
  4531 ;;		_DelayXLCD
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text29
  4536  001586                     __ptext29:
  4537                           	opt stack 0
  4538  001586                     _Delay1KTCYx:
  4539                           	opt stack 26
  4540                           
  4541                           ;incstack = 0
  4542                           ;Delay1KTCYx@unit stored from wreg
  4543  001586  6E12               	movwf	Delay1KTCYx@unit,c
  4544  001588  0EC8               	movlw	200
  4545  00158A                     u1867:
  4546  00158A  D000               	nop2	
  4547  00158C  2EE8               	decfsz	wreg,f,c
  4548  00158E  D7FD               	bra	u1867
  4549  001590  2E12               	decfsz	Delay1KTCYx@unit,f,c
  4550  001592  D7FA               	goto	l1256
  4551  001594  0012               	return	
  4552  001596                     __end_of_Delay1KTCYx:
  4553                           	opt stack 0
  4554                           tblptru	equ	0xFF8
  4555                           tblptrh	equ	0xFF7
  4556                           tblptrl	equ	0xFF6
  4557                           tablat	equ	0xFF5
  4558                           prodh	equ	0xFF4
  4559                           prodl	equ	0xFF3
  4560                           intcon	equ	0xFF2
  4561                           indf0	equ	0xFEF
  4562                           postinc0	equ	0xFEE
  4563                           fsr0h	equ	0xFEA
  4564                           fsr0l	equ	0xFE9
  4565                           wreg	equ	0xFE8
  4566                           postdec1	equ	0xFE5
  4567                           fsr1l	equ	0xFE1
  4568                           indf2	equ	0xFDF
  4569                           postinc2	equ	0xFDE
  4570                           postdec2	equ	0xFDD
  4571                           fsr2h	equ	0xFDA
  4572                           fsr2l	equ	0xFD9
  4573                           status	equ	0xFD8
  4574                           
  4575 ;; *************** function _Delay10KTCYx *****************
  4576 ;; Defined at:
  4577 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  unit            1    wreg     unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  unit            1   18[COMRAM] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4591 ;;      Params:         0       0       0       0       0       0       0       0       0
  4592 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4593 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4594 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4595 ;;Total ram usage:        2 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_OpenXLCD
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text30
  4606  001570                     __ptext30:
  4607                           	opt stack 0
  4608  001570                     _Delay10KTCYx:
  4609                           	opt stack 27
  4610                           
  4611                           ;incstack = 0
  4612                           ;Delay10KTCYx@unit stored from wreg
  4613  001570  6E13               	movwf	Delay10KTCYx@unit,c
  4614  001572  0E0D               	movlw	13
  4615  001574  6E12               	movwf	??_Delay10KTCYx& (0+255),c
  4616  001576  0EFC               	movlw	252
  4617  001578                     u1877:
  4618  001578  2EE8               	decfsz	wreg,f,c
  4619  00157A  D7FE               	bra	u1877
  4620  00157C  2E12               	decfsz	??_Delay10KTCYx& (0+255),f,c
  4621  00157E  D7FC               	bra	u1877
  4622  001580  2E13               	decfsz	Delay10KTCYx@unit,f,c
  4623  001582  D7F7               	goto	l1408
  4624  001584  0012               	return	
  4625  001586                     __end_of_Delay10KTCYx:
  4626                           	opt stack 0
  4627                           tblptru	equ	0xFF8
  4628                           tblptrh	equ	0xFF7
  4629                           tblptrl	equ	0xFF6
  4630                           tablat	equ	0xFF5
  4631                           prodh	equ	0xFF4
  4632                           prodl	equ	0xFF3
  4633                           intcon	equ	0xFF2
  4634                           indf0	equ	0xFEF
  4635                           postinc0	equ	0xFEE
  4636                           fsr0h	equ	0xFEA
  4637                           fsr0l	equ	0xFE9
  4638                           wreg	equ	0xFE8
  4639                           postdec1	equ	0xFE5
  4640                           fsr1l	equ	0xFE1
  4641                           indf2	equ	0xFDF
  4642                           postinc2	equ	0xFDE
  4643                           postdec2	equ	0xFDD
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           
  4648 ;; *************** function _BusyXLCD *****************
  4649 ;; Defined at:
  4650 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      unsigned char 
  4657 ;; Registers used:
  4658 ;;		wreg, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    3
  4671 ;; This function calls:
  4672 ;;		_DelayFor18TCY
  4673 ;; This function is called by:
  4674 ;;		_init_XLCD
  4675 ;;		_OpenXLCD
  4676 ;;		_putrsXLCD
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text31
  4681  00142C                     __ptext31:
  4682                           	opt stack 0
  4683  00142C                     _BusyXLCD:
  4684                           	opt stack 23
  4685                           
  4686                           ;incstack = 0
  4687  00142C  8C8A               	bsf	3978,6,c	;volatile
  4688  00142E  9A8A               	bcf	3978,5,c	;volatile
  4689  001430  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4690  001434  888A               	bsf	3978,4,c	;volatile
  4691  001436  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4692  00143A  A681               	btfss	3969,3,c	;volatile
  4693  00143C  D00A               	goto	l327
  4694  00143E  988A               	bcf	3978,4,c	;volatile
  4695  001440  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4696  001444  888A               	bsf	3978,4,c	;volatile
  4697  001446  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4698  00144A  988A               	bcf	3978,4,c	;volatile
  4699  00144C  9C8A               	bcf	3978,6,c	;volatile
  4700  00144E  0E01               	movlw	1
  4701  001450  0012               	return	
  4702  001452                     l327:
  4703  001452  988A               	bcf	3978,4,c	;volatile
  4704  001454  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4705  001458  888A               	bsf	3978,4,c	;volatile
  4706  00145A  ECDD  F00A         	call	_DelayFor18TCY	;wreg free
  4707  00145E  988A               	bcf	3978,4,c	;volatile
  4708  001460  9C8A               	bcf	3978,6,c	;volatile
  4709  001462  0E00               	movlw	0
  4710  001464  0012               	return	
  4711  001466                     __end_of_BusyXLCD:
  4712                           	opt stack 0
  4713                           tblptru	equ	0xFF8
  4714                           tblptrh	equ	0xFF7
  4715                           tblptrl	equ	0xFF6
  4716                           tablat	equ	0xFF5
  4717                           prodh	equ	0xFF4
  4718                           prodl	equ	0xFF3
  4719                           intcon	equ	0xFF2
  4720                           indf0	equ	0xFEF
  4721                           postinc0	equ	0xFEE
  4722                           fsr0h	equ	0xFEA
  4723                           fsr0l	equ	0xFE9
  4724                           wreg	equ	0xFE8
  4725                           postdec1	equ	0xFE5
  4726                           fsr1l	equ	0xFE1
  4727                           indf2	equ	0xFDF
  4728                           postinc2	equ	0xFDE
  4729                           postdec2	equ	0xFDD
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           
  4734 ;; *************** function _DelayFor18TCY *****************
  4735 ;; Defined at:
  4736 ;;		line 353 in file "main.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4753 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4754 ;;Total ram usage:        0 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    2
  4757 ;; This function calls:
  4758 ;;		_Delay10TCYx
  4759 ;; This function is called by:
  4760 ;;		_BusyXLCD
  4761 ;;		_SetDDRamAddr
  4762 ;;		_WriteCmdXLCD
  4763 ;;		_WriteDataXLCD
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text32
  4768  0015BA                     __ptext32:
  4769                           	opt stack 0
  4770  0015BA                     _DelayFor18TCY:
  4771                           	opt stack 23
  4772                           
  4773                           ;main.c: 354: Delay10TCYx(120);
  4774                           
  4775                           ;incstack = 0
  4776  0015BA  0E78               	movlw	120
  4777  0015BC  ECCB  F00A         	call	_Delay10TCYx
  4778  0015C0  0012               	return		;funcret
  4779  0015C2                     __end_of_DelayFor18TCY:
  4780                           	opt stack 0
  4781                           tblptru	equ	0xFF8
  4782                           tblptrh	equ	0xFF7
  4783                           tblptrl	equ	0xFF6
  4784                           tablat	equ	0xFF5
  4785                           prodh	equ	0xFF4
  4786                           prodl	equ	0xFF3
  4787                           intcon	equ	0xFF2
  4788                           indf0	equ	0xFEF
  4789                           postinc0	equ	0xFEE
  4790                           fsr0h	equ	0xFEA
  4791                           fsr0l	equ	0xFE9
  4792                           wreg	equ	0xFE8
  4793                           postdec1	equ	0xFE5
  4794                           fsr1l	equ	0xFE1
  4795                           indf2	equ	0xFDF
  4796                           postinc2	equ	0xFDE
  4797                           postdec2	equ	0xFDD
  4798                           fsr2h	equ	0xFDA
  4799                           fsr2l	equ	0xFD9
  4800                           status	equ	0xFD8
  4801                           
  4802 ;; *************** function _Delay10TCYx *****************
  4803 ;; Defined at:
  4804 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  unit            1    wreg     unsigned char 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  unit            1   17[COMRAM] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0
  4819 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4821 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4822 ;;Total ram usage:        1 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_DelayFor18TCY
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text33
  4833  001596                     __ptext33:
  4834                           	opt stack 0
  4835  001596                     _Delay10TCYx:
  4836                           	opt stack 23
  4837                           
  4838                           ;incstack = 0
  4839                           ;Delay10TCYx@unit stored from wreg
  4840  001596  6E12               	movwf	Delay10TCYx@unit,c
  4841  001598  0E03               	movlw	3
  4842  00159A                     u1887:
  4843  00159A  2EE8               	decfsz	wreg,f,c
  4844  00159C  D7FE               	bra	u1887
  4845  00159E  F000               	nop	
  4846  0015A0  2E12               	decfsz	Delay10TCYx@unit,f,c
  4847  0015A2  D7FA               	goto	l1806
  4848  0015A4  0012               	return	
  4849  0015A6                     __end_of_Delay10TCYx:
  4850                           	opt stack 0
  4851                           tblptru	equ	0xFF8
  4852                           tblptrh	equ	0xFF7
  4853                           tblptrl	equ	0xFF6
  4854                           tablat	equ	0xFF5
  4855                           prodh	equ	0xFF4
  4856                           prodl	equ	0xFF3
  4857                           intcon	equ	0xFF2
  4858                           indf0	equ	0xFEF
  4859                           postinc0	equ	0xFEE
  4860                           fsr0h	equ	0xFEA
  4861                           fsr0l	equ	0xFE9
  4862                           wreg	equ	0xFE8
  4863                           postdec1	equ	0xFE5
  4864                           fsr1l	equ	0xFE1
  4865                           indf2	equ	0xFDF
  4866                           postinc2	equ	0xFDE
  4867                           postdec2	equ	0xFDD
  4868                           fsr2h	equ	0xFDA
  4869                           fsr2l	equ	0xFD9
  4870                           status	equ	0xFD8
  4871                           
  4872 ;; *************** function _despertar *****************
  4873 ;; Defined at:
  4874 ;;		line 240 in file "main.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4891 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4892 ;;Total ram usage:        0 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    1
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_main
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text34
  4903  0014C6                     __ptext34:
  4904                           	opt stack 0
  4905  0014C6                     _despertar:
  4906                           	opt stack 29
  4907                           
  4908                           ;main.c: 241: if((hora) == desp_hora && (minuto) == desp_min && despertou == 0){
  4909                           
  4910                           ;incstack = 0
  4911  0014C6  5047               	movf	_desp_hora,w,c
  4912  0014C8  182E               	xorwf	_hora,w,c
  4913  0014CA  A4D8               	btfss	status,2,c
  4914  0014CC  D009               	goto	l1694
  4915  0014CE  5046               	movf	_desp_min,w,c
  4916  0014D0  182D               	xorwf	_minuto,w,c
  4917  0014D2  A4D8               	btfss	status,2,c
  4918  0014D4  D005               	goto	l1694
  4919  0014D6  502A               	movf	_despertou,w,c
  4920  0014D8  A4D8               	btfss	status,2,c
  4921  0014DA  D002               	goto	l1694
  4922                           
  4923                           ;main.c: 242: PORTAbits.RA0 = 1;
  4924  0014DC  8080               	bsf	3968,0,c	;volatile
  4925                           
  4926                           ;main.c: 243: contador_alarme += 1;
  4927  0014DE  2A2B               	incf	_contador_alarme,f,c
  4928  0014E0                     l1694:
  4929                           
  4930                           ;main.c: 244: }
  4931                           ;main.c: 245: if(contador_alarme >= 15){
  4932  0014E0  0E0E               	movlw	14
  4933  0014E2  642B               	cpfsgt	_contador_alarme,c
  4934  0014E4  0012               	return	
  4935                           
  4936                           ;main.c: 246: PORTAbits.RA0 = 0;
  4937  0014E6  9080               	bcf	3968,0,c	;volatile
  4938                           
  4939                           ;main.c: 247: despertou = 1;
  4940  0014E8  0E01               	movlw	1
  4941  0014EA  6E2A               	movwf	_despertou,c
  4942  0014EC  0012               	return	
  4943  0014EE                     __end_of_despertar:
  4944                           	opt stack 0
  4945                           tblptru	equ	0xFF8
  4946                           tblptrh	equ	0xFF7
  4947                           tblptrl	equ	0xFF6
  4948                           tablat	equ	0xFF5
  4949                           prodh	equ	0xFF4
  4950                           prodl	equ	0xFF3
  4951                           intcon	equ	0xFF2
  4952                           indf0	equ	0xFEF
  4953                           postinc0	equ	0xFEE
  4954                           fsr0h	equ	0xFEA
  4955                           fsr0l	equ	0xFE9
  4956                           wreg	equ	0xFE8
  4957                           postdec1	equ	0xFE5
  4958                           fsr1l	equ	0xFE1
  4959                           indf2	equ	0xFDF
  4960                           postinc2	equ	0xFDE
  4961                           postdec2	equ	0xFDD
  4962                           fsr2h	equ	0xFDA
  4963                           fsr2l	equ	0xFD9
  4964                           status	equ	0xFD8
  4965                           
  4966 ;; *************** function _pic_isr *****************
  4967 ;; Defined at:
  4968 ;;		line 258 in file "main.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      void 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         0       0       0       0       0       0       0       0       0
  4983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4984 ;;      Temps:         17       0       0       0       0       0       0       0       0
  4985 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4986 ;;Total ram usage:       17 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		Interrupt level 1
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	intcodelo
  4996  000018                     __pintcodelo:
  4997                           	opt stack 0
  4998  000018                     _pic_isr:
  4999                           	opt stack 23
  5000                           
  5001                           ;incstack = 0
  5002  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5003  00001A  CFD8 F001          	movff	status,??_pic_isr
  5004  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
  5005  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
  5006  000026  CFFA F004          	movff	pclath,??_pic_isr+3
  5007  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
  5008  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
  5009  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
  5010  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
  5011  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
  5012  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
  5013  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
  5014  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
  5015  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
  5016  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
  5017  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
  5018  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
  5019  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
  5020                           
  5021                           ;main.c: 259: if(TMR0IF){
  5022  00005E  A4F2               	btfss	intcon,2,c	;volatile
  5023  000060  D00E               	goto	i1l1740
  5024                           
  5025                           ;main.c: 260: TMR0 = 28021;
  5026  000062  0E6D               	movlw	109
  5027  000064  6ED7               	movwf	4055,c	;volatile
  5028  000066  0E75               	movlw	117
  5029  000068  6ED6               	movwf	4054,c	;volatile
  5030                           
  5031                           ;main.c: 262: INTCONbits.TMR0IF = 0;
  5032  00006A  94F2               	bcf	intcon,2,c	;volatile
  5033                           
  5034                           ;main.c: 263: contador_interrupcao++;
  5035  00006C  2A30               	incf	_contador_interrupcao,f,c
  5036                           
  5037                           ;main.c: 264: if(contador_interrupcao == 20){
  5038  00006E  0E14               	movlw	20
  5039  000070  1830               	xorwf	_contador_interrupcao,w,c
  5040  000072  A4D8               	btfss	status,2,c
  5041  000074  D004               	goto	i1l1740
  5042                           
  5043                           ;main.c: 265: contador_um_segundo += 1;
  5044  000076  2A2F               	incf	_contador_um_segundo,f,c
  5045                           
  5046                           ;main.c: 266: contador_interrupcao = 0;
  5047  000078  0E00               	movlw	0
  5048  00007A  6E30               	movwf	_contador_interrupcao,c
  5049                           
  5050                           ;main.c: 267: segundo+=1;
  5051  00007C  2A2C               	incf	_segundo,f,c
  5052  00007E                     i1l1740:
  5053                           
  5054                           ;main.c: 268: }
  5055                           ;main.c: 269: }
  5056                           ;main.c: 271: if(PIR1bits.RCIF == 1){
  5057  00007E  AA9E               	btfss	3998,5,c	;volatile
  5058  000080  D01B               	goto	i1l202
  5059  000082                     i1l198:
  5060  000082  AA9E               	btfss	3998,5,c	;volatile
  5061  000084  D7FE               	goto	i1l198
  5062                           
  5063                           ;main.c: 273: BUFFCOM[i]= RCREG;
  5064  000086  0E3A               	movlw	low _BUFFCOM
  5065  000088  2427               	addwf	_i,w,c
  5066  00008A  6ED9               	movwf	fsr2l,c
  5067  00008C  0E00               	movlw	high _BUFFCOM
  5068  00008E  2028               	addwfc	_i+1,w,c
  5069  000090  6EDA               	movwf	fsr2h,c
  5070  000092  CFAE FFDF          	movff	4014,indf2	;volatile
  5071                           
  5072                           ;main.c: 274: i++;
  5073  000096  4A27               	infsnz	_i,f,c
  5074  000098  2A28               	incf	_i+1,f,c
  5075                           
  5076                           ;main.c: 275: if(i>6){
  5077  00009A  BE28               	btfsc	_i+1,7,c
  5078  00009C  D00D               	goto	i1l202
  5079  00009E  5028               	movf	_i+1,w,c
  5080  0000A0  E104               	bnz	i1u78_20
  5081  0000A2  0E07               	movlw	7
  5082  0000A4  5C27               	subwf	_i,w,c
  5083  0000A6  A0D8               	btfss	status,0,c
  5084  0000A8  D007               	goto	i1l202
  5085  0000AA                     i1u78_20:
  5086                           
  5087                           ;main.c: 276: PIR1bits.RCIF = 0;
  5088  0000AA  9A9E               	bcf	3998,5,c	;volatile
  5089                           
  5090                           ;main.c: 277: i = 0;
  5091  0000AC  0E00               	movlw	0
  5092  0000AE  6E28               	movwf	_i+1,c
  5093  0000B0  0E00               	movlw	0
  5094  0000B2  6E27               	movwf	_i,c
  5095                           
  5096                           ;main.c: 278: estado = 1;
  5097  0000B4  0E01               	movlw	1
  5098  0000B6  6E31               	movwf	_estado,c
  5099  0000B8                     i1l202:
  5100  0000B8  C011  FFF5         	movff	??_pic_isr+16,tablat
  5101  0000BC  C010  FFF8         	movff	??_pic_isr+15,tblptru
  5102  0000C0  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
  5103  0000C4  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
  5104  0000C8  C00D  FFF4         	movff	??_pic_isr+12,prodh
  5105  0000CC  C00C  FFF3         	movff	??_pic_isr+11,prodl
  5106  0000D0  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
  5107  0000D4  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
  5108  0000D8  C009  FFE2         	movff	??_pic_isr+8,fsr1h
  5109  0000DC  C008  FFE1         	movff	??_pic_isr+7,fsr1l
  5110  0000E0  C007  FFEA         	movff	??_pic_isr+6,fsr0h
  5111  0000E4  C006  FFE9         	movff	??_pic_isr+5,fsr0l
  5112  0000E8  C005  FFFB         	movff	??_pic_isr+4,pclatu
  5113  0000EC  C004  FFFA         	movff	??_pic_isr+3,pclath
  5114  0000F0  C003  FFE0         	movff	??_pic_isr+2,bsr
  5115  0000F4  C002  FFE8         	movff	??_pic_isr+1,wreg
  5116  0000F8  C001  FFD8         	movff	??_pic_isr,status
  5117  0000FC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5118  0000FE  0010               	retfie	
  5119  000100                     __end_of_pic_isr:
  5120                           	opt stack 0
  5121                           pclatu	equ	0xFFB
  5122                           pclath	equ	0xFFA
  5123                           tblptru	equ	0xFF8
  5124                           tblptrh	equ	0xFF7
  5125                           tblptrl	equ	0xFF6
  5126                           tablat	equ	0xFF5
  5127                           prodh	equ	0xFF4
  5128                           prodl	equ	0xFF3
  5129                           intcon	equ	0xFF2
  5130                           indf0	equ	0xFEF
  5131                           postinc0	equ	0xFEE
  5132                           fsr0h	equ	0xFEA
  5133                           fsr0l	equ	0xFE9
  5134                           wreg	equ	0xFE8
  5135                           postdec1	equ	0xFE5
  5136                           fsr1h	equ	0xFE2
  5137                           fsr1l	equ	0xFE1
  5138                           bsr	equ	0xFE0
  5139                           indf2	equ	0xFDF
  5140                           postinc2	equ	0xFDE
  5141                           postdec2	equ	0xFDD
  5142                           fsr2h	equ	0xFDA
  5143                           fsr2l	equ	0xFD9
  5144                           status	equ	0xFD8
  5145                           pclatu	equ	0xFFB
  5146                           pclath	equ	0xFFA
  5147                           tblptru	equ	0xFF8
  5148                           tblptrh	equ	0xFF7
  5149                           tblptrl	equ	0xFF6
  5150                           tablat	equ	0xFF5
  5151                           prodh	equ	0xFF4
  5152                           prodl	equ	0xFF3
  5153                           intcon	equ	0xFF2
  5154                           indf0	equ	0xFEF
  5155                           postinc0	equ	0xFEE
  5156                           fsr0h	equ	0xFEA
  5157                           fsr0l	equ	0xFE9
  5158                           wreg	equ	0xFE8
  5159                           postdec1	equ	0xFE5
  5160                           fsr1h	equ	0xFE2
  5161                           fsr1l	equ	0xFE1
  5162                           bsr	equ	0xFE0
  5163                           indf2	equ	0xFDF
  5164                           postinc2	equ	0xFDE
  5165                           postdec2	equ	0xFDD
  5166                           fsr2h	equ	0xFDA
  5167                           fsr2l	equ	0xFD9
  5168                           status	equ	0xFD8
  5169                           
  5170                           	psect	rparam
  5171  0000                     pclatu	equ	0xFFB
  5172                           pclath	equ	0xFFA
  5173                           tblptru	equ	0xFF8
  5174                           tblptrh	equ	0xFF7
  5175                           tblptrl	equ	0xFF6
  5176                           tablat	equ	0xFF5
  5177                           prodh	equ	0xFF4
  5178                           prodl	equ	0xFF3
  5179                           intcon	equ	0xFF2
  5180                           indf0	equ	0xFEF
  5181                           postinc0	equ	0xFEE
  5182                           fsr0h	equ	0xFEA
  5183                           fsr0l	equ	0xFE9
  5184                           wreg	equ	0xFE8
  5185                           postdec1	equ	0xFE5
  5186                           fsr1h	equ	0xFE2
  5187                           fsr1l	equ	0xFE1
  5188                           bsr	equ	0xFE0
  5189                           indf2	equ	0xFDF
  5190                           postinc2	equ	0xFDE
  5191                           postdec2	equ	0xFDD
  5192                           fsr2h	equ	0xFDA
  5193                           fsr2l	equ	0xFD9
  5194                           status	equ	0xFD8
  5195                           
  5196                           	psect	temp
  5197  00004D                     btemp:
  5198                           	opt stack 0
  5199  00004D                     	ds	1
  5200  0000                     int$flags	set	btemp
  5201                           pclatu	equ	0xFFB
  5202                           pclath	equ	0xFFA
  5203                           tblptru	equ	0xFF8
  5204                           tblptrh	equ	0xFF7
  5205                           tblptrl	equ	0xFF6
  5206                           tablat	equ	0xFF5
  5207                           prodh	equ	0xFF4
  5208                           prodl	equ	0xFF3
  5209                           intcon	equ	0xFF2
  5210                           indf0	equ	0xFEF
  5211                           postinc0	equ	0xFEE
  5212                           fsr0h	equ	0xFEA
  5213                           fsr0l	equ	0xFE9
  5214                           wreg	equ	0xFE8
  5215                           postdec1	equ	0xFE5
  5216                           fsr1h	equ	0xFE2
  5217                           fsr1l	equ	0xFE1
  5218                           bsr	equ	0xFE0
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           postdec2	equ	0xFDD
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8


Data Sizes:
    Strings     91
    Constant    10
    Data        12
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      76
    BANK0           160     17      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), BUFFCOM(COMRAM[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), BUFFCOM(COMRAM[7]), 

    memcpy@s1	PTR const void  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), BUFFCOM(COMRAM[7]), revisao(COMRAM[1]), versao(COMRAM[1]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), BUFFCOM(COMRAM[7]), revisao(COMRAM[1]), versao(COMRAM[1]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_9(CODE[12]), STR_7(CODE[12]), 
		 -> STR_5(CODE[7]), STR_3(CODE[7]), buffer(BANK0[16]), STR_1(CODE[7]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[5]), STR_8(CODE[6]), STR_6(CODE[6]), STR_4(CODE[9]), 
		 -> STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(COMRAM[7]), BUFFCOM(COMRAM[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_trata_despertador
    _main->_troca_telas
    _troca_telas->_telas
    _trata_despertador->_telas
    _tela_4->_sprintf
    _tela_3->_sprintf
    _tela_2->_sprintf
    _tela_1->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _limpa_tela->_SetDDRamAddr
    _putrsXLCD->_WriteDataXLCD
    _verificaCRCBUFFCOM->_crc16
    _trataComando->_calculaCRCBUFFRESP
    _calculaCRCBUFFRESP->_crc16
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _tela_4->_sprintf
    _tela_3->_sprintf
    _tela_2->_sprintf
    _tela_1->_sprintf
    _maquinaEstado->_trataComando
    _trataComando->_calculaCRCBUFFRESP

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   49806
                          _despertar
                          _init_XLCD
                      _maquinaEstado
                              _telas
                         _trata_data
                  _trata_despertador
                         _trata_hora
                        _troca_telas
 ---------------------------------------------------------------------------------
 (1) _troca_telas                                          2     2      0   14470
                                             31 COMRAM     2     2      0
                              _telas
 ---------------------------------------------------------------------------------
 (1) _trata_hora                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _trata_despertador                                    2     2      0   14470
                                             31 COMRAM     2     2      0
                              _telas
 ---------------------------------------------------------------------------------
 (2) _telas                                                1     1      0   14470
                                             30 COMRAM     1     1      0
                         _limpa_tela
                             _tela_1
                             _tela_2
                             _tela_3
                             _tela_4
 ---------------------------------------------------------------------------------
 (3) _tela_4                                               0     0      0    3368
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _tela_3                                               0     0      0    3368
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _tela_2                                               0     0      0    3368
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _tela_1                                               0     0      0    3368
                       _SetDDRamAddr
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             27    17     10    2401
                                             29 COMRAM     1     1      0
                                              0 BANK0     17     7     10
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     386
                                             24 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     549
                                             17 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _limpa_tela                                           0     0      0     967
                       _SetDDRamAddr
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (4) _putrsXLCD                                            2     0      2     901
                                             19 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (5) _WriteDataXLCD                                        1     1      0      66
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _trata_data                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0    6102
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   5     5      0     945
                                              0 BANK0      5     5      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      45
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         4     4      0    5082
                                              4 BANK0      4     4      0
                 _calculaCRCBUFFRESP
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   7     7      0    2930
                                             30 COMRAM     3     3      0
                                              0 BANK0      4     4      0
                              _crc16
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              12     5      7    2022
                                             17 COMRAM    12     5      7
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     775
                                             17 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      30
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     294
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     206
                                             22 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      66
                                             18 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _SetDDRamAddr                                         4     4      0      66
                                             18 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      15
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      15
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _BusyXLCD                                             0     0      0      22
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (6) _DelayFor18TCY                                        0     0      0      22
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (7) _Delay10TCYx                                          1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _despertar                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _despertar
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       _calculaCRCBUFFRESP
         _crc16
         _memcpy
       _memcpy
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _telas
     _limpa_tela
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
     _tela_1
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _tela_2
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _tela_3
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _tela_4
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _trata_data
   _trata_despertador
     _telas
       _limpa_tela
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
       _tela_1
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_2
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_3
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_4
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
   _trata_hora
   _troca_telas
     _telas
       _limpa_tela
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
       _tela_1
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_2
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_3
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _tela_4
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
         _putrsXLCD
           _BusyXLCD
             _DelayFor18TCY
               _Delay10TCYx
           _WriteDataXLCD
             _DelayFor18TCY
               _Delay10TCYx
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      21       5       20.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D      20        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jul 04 13:37:45 2018

                          _i 0027         _contador_interrupcao 0030                           bsr 000FE0  
                        l151 14C0                          l240 0926                          l160 0F2C  
                        l241 0934                          l242 0942                          l228 0C56  
                        l157 0F30                          l166 0F66                          l327 1452  
                        l277 1536                          l287 147E                          l841 1236  
                        l851 13A6                          u900 106A                          u910 1092  
                        u907 1060                          u917 1088                          u885 1256  
                        _dia 0049                          _ano 0044                          _mes 0048  
      __size_of_WriteCmdXLCD 003E                          wreg 000FE8                  _troca_telas 149E  
                       l2222 0D88                         l1408 1572                         l1256 1588  
                       l2240 0DD2                         l2232 0DB2                         l2224 0D92  
                       l2244 0DE2                         l2236 0DC2                         l2228 0DA2  
                       l2420 1204                         l2422 120C                         l2344 1558  
                       l2520 0BEE                         l2432 122C                         l2424 1210  
                       l2440 137C                         l2504 0BA0                         l2530 0C10  
                       l2442 1384                         l2506 0BAC                         l2700 0A10  
                       l1660 113A                         l2444 1388                         l2508 0BCA  
                       l2460 0A7A                         l1806 1598                         l2534 0C50  
                       l2526 0C08                         l2710 0A48                         l1638 1104  
                       l2454 0A5C                         l2552 0FF2                         l2704 0A1E  
                       l1576 146E                         l1648 111C                         l2448 139C  
                       l2538 0C60                         l1586 1498                         l2730 10EE  
                       l2490 0B1E                         l2466 0AAC                         l2650 0EBE  
                       l2642 0EA8                         l2634 0E94                         l1596 154C  
                       l2708 0A3A                         l2724 10DA                         l2476 0ADC  
                       l1676 1524                         l2812 0FAC                         l1694 14E0  
                       l2558 102C                         l1942 1072                         l2478 0AE2  
                       l2680 094E                         l1936 1040                         l2496 0B3C  
                       l2656 0ECC                         l2760 0F5C                         l2682 096A  
                       l2674 086A                         l2770 12EE                         l2498 0B42  
                       l2746 0F20                         l2826 0FCC                         l2684 0974  
                       l2676 08B8                         l2772 12F4                         l2748 0F22  
                       l2694 09D4                         l2774 12FC                         l2766 12E2  
                       l2758 0F5A                         l2696 09E2                         l2688 098A  
                       l2768 12E8                         l2698 09F6                         l2778 1304  
                       STR_1 0846                         STR_2 083D                         STR_3 084D  
                       STR_4 0834                         STR_5 0854                         STR_6 0840  
                       STR_7 0828                         STR_8 085B                         STR_9 081C  
                       u1580 101A                         u1587 1010                         u1837 14AC  
                       u1847 0F04                         u1857 0F3E                         u1867 158A  
                       _PEIE 007F96                         u1877 1578                         u1887 159A  
                       _RCIE 007CED                         _RCIF 007CF5                         _RCIP 007CFD  
                       _TMR0 000FD6                         _TXIF 007CF4                         _main 0F6C  
                       _hora 002E                         fsr0h 000FEA                         fsr1h 000FE2  
                       indf0 000FEF                         fsr2h 000FDA                         fsr0l 000FE9  
                       indf2 000FDF                         fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 004D       __size_of_WriteDataXLCD 003E                         prodh 000FF4  
                       prodl 000FF3                         start 0100       verificaCRCBUFFCOM@crc1 0060  
     verificaCRCBUFFCOM@crc2 0061                 ___param_bank 000000                  _Delay10TCYx 1596  
               _WriteCmdXLCD 13EE                  _Delay1KTCYx 1586                ?_SetDDRamAddr 0001  
                      ?_main 0001              _contador_alarme 002B                        STR_10 0861  
                      STR_11 080B                        STR_12 080B           _verificaCRCBUFFCOM 109A  
            __end_of___lwdiv 1240                        i1l202 00B8              __end_of___lwmod 13B0  
                      i1l198 0082                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _SPBRG 000FAF                        _PORTB 000F81                        _TRISA 000F92  
                      _TRISB 000F93                        _TXREG 000FAD        __size_of_Delay10KTCYx 0016  
                      _TXSTA 000FAC                        _crc16 0BD8          ?_verificaCRCBUFFCOM 0001  
            __end_of_dpowers 080B                        _telas 0E76              __end_of_pic_isr 0100  
                      pclath 000FFA                        tablat 000FF5              __end_of_tx_data 149E  
                      status 000FD8              __end_of_sprintf 0BD8              __initialization 132C  
       ??_verificaCRCBUFFCOM 001F                 __end_of_main 0FDC             __end_of_BusyXLCD 1466  
               _Delay10KTCYx 1570        __size_of_DelayPORXLCD 0008               ??_SetDDRamAddr 0013  
           __end_of_OpenXLCD 0DF4   __end_of_calculaCRCBUFFRESP 0E76                       ??_main 0022  
              __activetblptr 000003                _WriteDataXLCD 13B0                       ?_crc16 0012  
                     ?_telas 0001                       i1l1740 007E                       _TMR0IF 007F92  
               _DelayPORXLCD 15B2                       crc16@i 001A       __size_of_maquinaEstado 004C  
                  ??___lwdiv 0016                    ??___lwmod 001D                       _buffer 0071  
                     _estado 0031                       _memcpy 0FDC                       clear_0 1352  
                     clear_1 135E                       _tela_1 0CAA                       _tela_2 119C  
                     _tela_3 114A                       _tela_4 1292                       _minuto 002D  
                     _versao 004C               ?_WriteDataXLCD 0001                 _calcula_temp 0029  
               __pdataCOMRAM 0041                    ??_pic_isr 0001                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                  ??_tx_data 0012                    ??_sprintf 001E     verificaCRCBUFFCOM@CRC_OK 0062  
                 __accesstop 0060      __end_of__initialization 1364              __CFG_PBADEN$OFF 000000  
              ___rparam_used 000001        calculaCRCBUFFRESP@crc 0062               __pcstackCOMRAM 0001  
            telas@troca_tela 001F                __end_of_crc16 0CAA                __end_of_telas 0EF6  
       trataComando@iterator 0066           __size_of_despertar 0028                 ?_troca_telas 0001  
                    ??_crc16 0016                _maquinaEstado 12E0                      ??_telas 001F  
     __size_of_DelayFor18TCY 0008                   __pbssBANK0 0071           __size_of_enviaByte 001E  
                  ?_BusyXLCD 0001              WriteCmdXLCD@cmd 0013         __end_of_SetDDRamAddr 1292  
         __size_of_init_XLCD 001E                    ?_OpenXLCD 0001            WriteDataXLCD@data 0013  
               ?_Delay10TCYx 0001              ??_WriteDataXLCD 0013                 ?_Delay1KTCYx 0001  
                    ?_memcpy 0012                      ?_tela_1 0001                      ?_tela_2 0001  
                    ?_tela_3 0001                      ?_tela_4 0001                      _BUFFCOM 003A  
                    i1u78_20 00AA               ?_maquinaEstado 0001           __size_of_putrsXLCD 005C  
                 ??_BusyXLCD 0013                   ??_OpenXLCD 0017                      __Hparam 0000  
                    __Lparam 0000            __end_of_despertar 14EE                _DelayFor18TCY 15BA  
                    ___lwdiv 11EE                      ___lwmod 136E                 __psmallconst 0800  
          __end_of_enviaByte 1552                      __pcinit 132C              __size_of_memcpy 0062  
            putrsXLCD@buffer 0014              Delay10TCYx@unit 0012                      __ramtop 0800  
            __size_of_tela_1 00A6              __size_of_tela_2 0052              __size_of_tela_3 0052  
            __size_of_tela_4 004E                      __ptext0 0F6C                      __ptext1 149E  
                    __ptext2 1514                      __ptext3 0EF6                      __ptext4 0E76  
                    __ptext5 1292                      __ptext6 114A                      __ptext7 119C  
                    __ptext8 0CAA                      __ptext9 0A4E            __end_of_init_XLCD 1570  
                 _limpa_tela 14EE                    _T0CONbits 000FD5                      _dpowers 0801  
                    _pic_isr 0018                      _segundo 002C                      _revisao 004B  
                    _tx_data 1466                      _sprintf 0A4E         end_of_initialization 1364  
         _calculaCRCBUFFRESP 0DF4                      memcpy@d 001C                      memcpy@n 0017  
                    memcpy@s 0019                   _tela_atual 004A          ?_calculaCRCBUFFRESP 0001  
              enviaByte@BYTE 0012               ?_DelayFor18TCY 0001  __size_of_verificaCRCBUFFCOM 005A  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE            __end_of_putrsXLCD 109A                    _PORTAbits 000F80  
                  _PORTDbits 000F83         ??_calculaCRCBUFFRESP 001F              ??_maquinaEstado 0022  
                  _TRISBbits 000F93                    _TRISCbits 000F94                   _trata_data 10F4  
                 _trata_hora 1514        __size_of_SetDDRamAddr 0052         __size_of_troca_telas 0028  
     calculaCRCBUFFRESP@crc1 0060       calculaCRCBUFFRESP@crc2 0061            _trata_despertador 0EF6  
              ?_trataComando 0001           ?_trata_despertador 0001        verificaCRCBUFFCOM@crc 0063  
               _constante_ad 0041          ??_trata_despertador 0020         __size_of_Delay10TCYx 0010  
              __pidataCOMRAM 15A6               __end_of_memcpy 103E                  ?_limpa_tela 0001  
               _SetDDRamAddr 1240               __end_of_tela_1 0D50               __end_of_tela_2 11EE  
             __end_of_tela_3 119C               __end_of_tela_4 12E0         __size_of_Delay1KTCYx 0010  
         SetDDRamAddr@DDaddr 0016          start_initialization 132C          _contador_um_segundo 002F  
  __end_of_trata_despertador 0F6C               ??_trataComando 0064            __size_of_BusyXLCD 003A  
            ??_DelayFor18TCY 0013            __size_of_OpenXLCD 00A4                ?_WriteCmdXLCD 0001  
                tx_data@cont 0012                     ??_memcpy 0019                     ??_tela_1 001F  
                   ??_tela_2 001F                     ??_tela_3 001F                     ??_tela_4 001F  
                crc16@data_p 0012                  crc16@length 0014                  __pbssCOMRAM 0022  
              __pcstackBANK0 0060                  ?_trata_data 0001                  ?_trata_hora 0001  
            Delay1KTCYx@unit 0012                  sprintf@flag 006C                  sprintf@prec 006D  
                  crc16@data 001B          __size_of_limpa_tela 0026             ___lwdiv@dividend 0012  
             ??_WriteCmdXLCD 0013                    _desp_hora 0047                ?_Delay10KTCYx 0001  
                   ?___lwdiv 0012                     ?___lwmod 0019                    _despertar 14C6  
                  _despertou 002A                  __pintcodelo 0018        __end_of_WriteDataXLCD 13EE  
                __smallconst 0800                    _enviaByte 1534                     ?_pic_isr 0001  
                  _init_XLCD 1552               __size_of_crc16 00D2             ___lwdiv@quotient 0017  
                   ?_tx_data 0001                     ?_sprintf 0060                     _BUFFRESP 0033  
             __size_of_telas 0080                     _ADResult 0025   __size_of_trata_despertador 0076  
                   _LATBbits 000F8A                ?_DelayPORXLCD 0001                     _PIR1bits 000F9E  
            OpenXLCD@lcdtype 0017               ??_Delay10KTCYx 0012          __size_of_trata_data 0056  
        __size_of_trata_hora 0020                   ?_despertar 0001         __end_of_trataComando 0A4E  
                 ?_enviaByte 0001                    _putrsXLCD 103E             Delay10KTCYx@unit 0013  
                 ?_init_XLCD 0001                    copy_data0 1340                     _BusyXLCD 142C  
             ??_DelayPORXLCD 0013                     _OpenXLCD 0D50   __end_of_verificaCRCBUFFCOM 10F4  
                   __Hrparam 0000                     __Lrparam 0000             __size_of___lwdiv 0052  
           __size_of___lwmod 0042                 ??_limpa_tela 0017                   sprintf@val 006E  
                 ?_putrsXLCD 0014                     crc16@crc 001D  __size_of_calculaCRCBUFFRESP 0082  
              ??_troca_telas 0020             __size_of_pic_isr 00E8              ___lwdiv@divisor 0014  
            ___lwdiv@counter 0016        __end_of_maquinaEstado 132C                     __ptext10 136E  
                   __ptext11 11EE                     __ptext20 0DF4                     __ptext12 14EE  
                   __ptext21 0FDC                     __ptext13 103E                     __ptext30 1570  
                   __ptext22 0BD8                     __ptext14 13B0                     __ptext31 142C  
                   __ptext23 1534                     __ptext15 10F4                     __ptext32 15BA  
                   __ptext24 1552                     __ptext16 12E0                     __ptext33 1596  
                   __ptext25 0D50                     __ptext17 109A                     __ptext34 14C6  
                   __ptext26 13EE                     __ptext18 1466                     __ptext27 1240  
                   __ptext19 0868                     __ptext28 15B2                     __ptext29 1586  
                   _desp_min 0046         __end_of_WriteCmdXLCD 142C             __size_of_tx_data 0038  
           __size_of_sprintf 018A                __size_of_main 0070           __end_of_limpa_tela 1514  
              ??_Delay10TCYx 0012                     int$flags 004D                  ??_despertar 0012  
              ??_Delay1KTCYx 0012                  ??_enviaByte 0012                   _INTCONbits 000FF2  
                   memcpy@d1 0012                     memcpy@s1 0014                  ??_init_XLCD 0018  
               ??_trata_data 0012                 ??_trata_hora 0012         __end_of_Delay10KTCYx 1586  
                   intlevel1 0000                    sprintf@ap 006A                    sprintf@sp 0060  
        __end_of_troca_telas 14C6             ___lwmod@dividend 0019                  _serial_data 0032  
      __end_of_DelayFor18TCY 15C2        __size_of_trataComando 01E6           __end_of_trata_data 114A  
         __end_of_trata_hora 1534          __end_of_Delay10TCYx 15A6                  _temperatura 0022  
                   sprintf@c 0070                     sprintf@f 0062         __end_of_DelayPORXLCD 15BA  
                ??_putrsXLCD 0016              ___lwmod@divisor 001B          __end_of_Delay1KTCYx 1596  
            ___lwmod@counter 001D                 _trataComando 0868  
