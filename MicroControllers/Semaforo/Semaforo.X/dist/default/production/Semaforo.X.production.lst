

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 05 19:52:33 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	smallconst
    54  000800                     __psmallconst:
    55                           	opt stack 0
    56  000800  00                 	db	0
    57  000801                     _display:
    58                           	opt stack 0
    59  000801  3F                 	db	63
    60  000802  06                 	db	6
    61  000803  5B                 	db	91
    62  000804  4F                 	db	79
    63  000805  66                 	db	102
    64  000806  6D                 	db	109
    65  000807  7D                 	db	125
    66  000808  07                 	db	7
    67  000809  7F                 	db	127
    68  00080A  6F                 	db	111
    69  00080B                     __end_of_display:
    70                           	opt stack 0
    71  00080B  00                 	db	0	; dummy byte at the end
    72  0000                     
    73                           	psect	nvCOMRAM
    74  000015                     __pnvCOMRAM:
    75                           	opt stack 0
    76  000015                     _cont_segundos:
    77                           	opt stack 0
    78  000015                     	ds	1
    79  0000                     _TMR0	set	4054
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISB	set	3987
    82  0000                     _ADCON1	set	4033
    83  0000                     _T0CONbits	set	4053
    84  0000                     _INTCONbits	set	4082
    85  0000                     _PORTB	set	3969
    86  0000                     _PORTCbits	set	3970
    87  0000                     _TMR0IF	set	32658
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  000920                     __pcinit:
    93                           	opt stack 0
    94  000920                     start_initialization:
    95                           	opt stack 0
    96  000920                     __initialization:
    97                           	opt stack 0
    98                           
    99                           ; Clear objects allocated to COMRAM (3 bytes)
   100  000920  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
   101  000922  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   102  000924  6A12               	clrf	__pbssCOMRAM& (0+255),c
   103  000926                     end_of_initialization:
   104                           	opt stack 0
   105  000926                     __end_of__initialization:
   106                           	opt stack 0
   107  000926  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   108  000928  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   109  00092A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   110  00092C  6EF8               	movwf	tblptru,c
   111  00092E  0E08               	movlw	high __Lsmallconst
   112  000930  6EF7               	movwf	tblptrh,c
   113  000932  0100               	movlb	0
   114  000934  EF58  F004         	goto	_main	;jump to C main() function
   115                           tblptru	equ	0xFF8
   116                           tblptrh	equ	0xFF7
   117                           
   118                           	psect	bssCOMRAM
   119  000012                     __pbssCOMRAM:
   120                           	opt stack 0
   121  000012                     _contador_um_segundo:
   122                           	opt stack 0
   123  000012                     	ds	1
   124  000013                     _contador_interrupcao:
   125                           	opt stack 0
   126  000013                     	ds	1
   127  000014                     _estado_atual:
   128                           	opt stack 0
   129  000014                     	ds	1
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     ??_pic_isr:
   137  000001                     
   138                           ; 1 bytes @ 0x0
   139  000001                     	ds	17
   140  000012                     tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           
   143                           ; 1 bytes @ 0x11
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 105 in file "main.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   163 ;;      Params:         0       0       0       0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0
   165 ;;      Temps:          0       0       0       0       0       0       0       0       0
   166 ;;      Totals:         0       0       0       0       0       0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels required when called:    3
   169 ;; This function calls:
   170 ;;		_trata_segundo
   171 ;; This function is called by:
   172 ;;		Startup code after reset
   173 ;; This function uses a non-reentrant model
   174 ;;
   175                           
   176                           	psect	text0
   177  0008B0                     __ptext0:
   178                           	opt stack 0
   179  0008B0                     _main:
   180                           	opt stack 28
   181                           
   182                           ;main.c: 106: T0CONbits.TMR0ON = 0;
   183                           
   184                           ;incstack = 0
   185  0008B0  9ED5               	bcf	4053,7,c	;volatile
   186                           
   187                           ;main.c: 107: INTCONbits.TMR0IE = 1;
   188  0008B2  8AF2               	bsf	intcon,5,c	;volatile
   189                           
   190                           ;main.c: 109: INTCONbits.TMR0IF = 0;
   191  0008B4  94F2               	bcf	intcon,2,c	;volatile
   192                           
   193                           ;main.c: 111: T0CONbits.T08BIT = 0;
   194  0008B6  9CD5               	bcf	4053,6,c	;volatile
   195                           
   196                           ;main.c: 112: T0CONbits.PSA = 0;
   197  0008B8  96D5               	bcf	4053,3,c	;volatile
   198                           
   199                           ;main.c: 113: T0CONbits.T0PS0 = 1;
   200  0008BA  80D5               	bsf	4053,0,c	;volatile
   201                           
   202                           ;main.c: 114: T0CONbits.T0PS1 = 1;
   203  0008BC  82D5               	bsf	4053,1,c	;volatile
   204                           
   205                           ;main.c: 115: T0CONbits.T0PS2 = 0;
   206  0008BE  94D5               	bcf	4053,2,c	;volatile
   207                           
   208                           ;main.c: 117: T0CONbits.T0CS = 0;
   209  0008C0  9AD5               	bcf	4053,5,c	;volatile
   210                           
   211                           ;main.c: 118: TMR0 = 32768;
   212  0008C2  0E80               	movlw	128
   213  0008C4  6ED7               	movwf	4055,c	;volatile
   214  0008C6  0E00               	movlw	0
   215  0008C8  6ED6               	movwf	4054,c	;volatile
   216                           
   217                           ;main.c: 120: T0CONbits.TMR0ON = 1;
   218  0008CA  8ED5               	bsf	4053,7,c	;volatile
   219                           
   220                           ;main.c: 122: INTCONbits.GIEH = 1;
   221  0008CC  8EF2               	bsf	intcon,7,c	;volatile
   222                           
   223                           ;main.c: 123: INTCONbits.GIEL = 1;
   224  0008CE  8CF2               	bsf	intcon,6,c	;volatile
   225                           
   226                           ;main.c: 129: ADCON1 = 0x0F;
   227  0008D0  0E0F               	movlw	15
   228  0008D2  6EC1               	movwf	4033,c	;volatile
   229                           
   230                           ;main.c: 130: TRISB = 0x00;
   231  0008D4  0E00               	movlw	0
   232  0008D6  6E93               	movwf	3987,c	;volatile
   233                           
   234                           ;main.c: 131: TRISC = 0x00;
   235  0008D8  0E00               	movlw	0
   236  0008DA  6E94               	movwf	3988,c	;volatile
   237                           
   238                           ;main.c: 136: estado_atual = 0;
   239  0008DC  0E00               	movlw	0
   240  0008DE  6E14               	movwf	_estado_atual,c
   241                           
   242                           ;main.c: 137: cont_segundos = 7;
   243  0008E0  0E07               	movlw	7
   244  0008E2  6E15               	movwf	_cont_segundos,c
   245                           
   246                           ;main.c: 138: PORTCbits.RC0 = 1;
   247  0008E4  8082               	bsf	3970,0,c	;volatile
   248  0008E6                     l732:
   249                           
   250                           ;main.c: 141: if(contador_um_segundo == 1){
   251  0008E6  0412               	decf	_contador_um_segundo,w,c
   252  0008E8  A4D8               	btfss	status,2,c
   253  0008EA  D7FD               	goto	l732
   254                           
   255                           ;main.c: 142: trata_segundo();
   256  0008EC  EC06  F004         	call	_trata_segundo	;wreg free
   257                           
   258                           ;main.c: 143: contador_um_segundo = 0;
   259  0008F0  0E00               	movlw	0
   260  0008F2  6E12               	movwf	_contador_um_segundo,c
   261  0008F4  D7F8               	goto	l732
   262  0008F6                     __end_of_main:
   263                           	opt stack 0
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           intcon	equ	0xFF2
   267                           status	equ	0xFD8
   268                           
   269 ;; *************** function _trata_segundo *****************
   270 ;; Defined at:
   271 ;;		line 61 in file "main.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   285 ;;      Params:         0       0       0       0       0       0       0       0       0
   286 ;;      Locals:         0       0       0       0       0       0       0       0       0
   287 ;;      Temps:          0       0       0       0       0       0       0       0       0
   288 ;;      Totals:         0       0       0       0       0       0       0       0       0
   289 ;;Total ram usage:        0 bytes
   290 ;; Hardware stack levels used:    1
   291 ;; Hardware stack levels required when called:    2
   292 ;; This function calls:
   293 ;;		_troca_estado
   294 ;; This function is called by:
   295 ;;		_main
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text1
   300  00080C                     __ptext1:
   301                           	opt stack 0
   302  00080C                     _trata_segundo:
   303                           	opt stack 28
   304                           
   305                           ;main.c: 62: if(cont_segundos > 0 && estado_atual == 0){
   306                           
   307                           ;incstack = 0
   308  00080C  5015               	movf	_cont_segundos,w,c
   309  00080E  B4D8               	btfsc	status,2,c
   310  000810  D018               	goto	l680
   311  000812  5014               	movf	_estado_atual,w,c
   312  000814  A4D8               	btfss	status,2,c
   313  000816  D015               	goto	l680
   314                           
   315                           ;main.c: 63: PORTCbits.RC1 = 0;
   316  000818  9282               	bcf	3970,1,c	;volatile
   317                           
   318                           ;main.c: 64: PORTCbits.RC0 = 1;
   319  00081A  8082               	bsf	3970,0,c	;volatile
   320                           
   321                           ;main.c: 65: PORTCbits.RC2 = 0;
   322  00081C  9482               	bcf	3970,2,c	;volatile
   323                           
   324                           ;main.c: 66: PORTB = display[cont_segundos];
   325  00081E  5015               	movf	_cont_segundos,w,c
   326  000820  0D01               	mullw	1
   327  000822  0E01               	movlw	low _display
   328  000824  24F3               	addwf	prodl,w,c
   329  000826  6EF6               	movwf	tblptrl,c
   330  000828  0E08               	movlw	high _display
   331  00082A  20F4               	addwfc	prodh,w,c
   332  00082C  6EF7               	movwf	tblptrh,c
   333  00082E                     	if	0	;There are less than 3 active tblptr bytes
   334  00082E                     	endif
   335  00082E  0008               	tblrd		*
   336  000830  CFF5 FF81          	movff	tablat,3969	;volatile
   337                           
   338                           ;main.c: 67: cont_segundos--;
   339  000834  0615               	decf	_cont_segundos,f,c
   340                           
   341                           ;main.c: 68: if(cont_segundos == 0){
   342  000836  5015               	movf	_cont_segundos,w,c
   343  000838  A4D8               	btfss	status,2,c
   344  00083A  0012               	return	
   345                           
   346                           ;main.c: 69: troca_estado();
   347  00083C  EC7B  F004         	call	_troca_estado	;wreg free
   348                           
   349                           ;main.c: 70: }
   350                           ;main.c: 71: }else if(cont_segundos > 0 && estado_atual == 1){
   351  000840  0012               	return	
   352  000842                     l680:
   353  000842  5015               	movf	_cont_segundos,w,c
   354  000844  B4D8               	btfsc	status,2,c
   355  000846  D018               	goto	l694
   356  000848  0414               	decf	_estado_atual,w,c
   357  00084A  A4D8               	btfss	status,2,c
   358  00084C  D015               	goto	l694
   359                           
   360                           ;main.c: 72: PORTCbits.RC1 = 1;
   361  00084E  8282               	bsf	3970,1,c	;volatile
   362                           
   363                           ;main.c: 73: PORTCbits.RC0 = 0;
   364  000850  9082               	bcf	3970,0,c	;volatile
   365                           
   366                           ;main.c: 74: PORTCbits.RC2 = 0;
   367  000852  9482               	bcf	3970,2,c	;volatile
   368                           
   369                           ;main.c: 75: PORTB = display[cont_segundos];
   370  000854  5015               	movf	_cont_segundos,w,c
   371  000856  0D01               	mullw	1
   372  000858  0E01               	movlw	low _display
   373  00085A  24F3               	addwf	prodl,w,c
   374  00085C  6EF6               	movwf	tblptrl,c
   375  00085E  0E08               	movlw	high _display
   376  000860  20F4               	addwfc	prodh,w,c
   377  000862  6EF7               	movwf	tblptrh,c
   378  000864                     	if	0	;There are less than 3 active tblptr bytes
   379  000864                     	endif
   380  000864  0008               	tblrd		*
   381  000866  CFF5 FF81          	movff	tablat,3969	;volatile
   382                           
   383                           ;main.c: 76: cont_segundos--;
   384  00086A  0615               	decf	_cont_segundos,f,c
   385                           
   386                           ;main.c: 77: if(cont_segundos == 0){
   387  00086C  5015               	movf	_cont_segundos,w,c
   388  00086E  A4D8               	btfss	status,2,c
   389  000870  0012               	return	
   390                           
   391                           ;main.c: 78: troca_estado();
   392  000872  EC7B  F004         	call	_troca_estado	;wreg free
   393                           
   394                           ;main.c: 79: }
   395                           ;main.c: 80: }else if (cont_segundos > 0 && estado_atual == 2){
   396  000876  0012               	return	
   397  000878                     l694:
   398  000878  5015               	movf	_cont_segundos,w,c
   399  00087A  B4D8               	btfsc	status,2,c
   400  00087C  0012               	return	
   401  00087E  0E02               	movlw	2
   402  000880  1814               	xorwf	_estado_atual,w,c
   403  000882  A4D8               	btfss	status,2,c
   404  000884  0012               	return	
   405                           
   406                           ;main.c: 81: PORTCbits.RC0 = 0;
   407  000886  9082               	bcf	3970,0,c	;volatile
   408                           
   409                           ;main.c: 82: PORTCbits.RC2 = 1;
   410  000888  8482               	bsf	3970,2,c	;volatile
   411                           
   412                           ;main.c: 83: PORTCbits.RC1 = 0;
   413  00088A  9282               	bcf	3970,1,c	;volatile
   414                           
   415                           ;main.c: 84: PORTB = display[cont_segundos];
   416  00088C  5015               	movf	_cont_segundos,w,c
   417  00088E  0D01               	mullw	1
   418  000890  0E01               	movlw	low _display
   419  000892  24F3               	addwf	prodl,w,c
   420  000894  6EF6               	movwf	tblptrl,c
   421  000896  0E08               	movlw	high _display
   422  000898  20F4               	addwfc	prodh,w,c
   423  00089A  6EF7               	movwf	tblptrh,c
   424  00089C                     	if	0	;There are less than 3 active tblptr bytes
   425  00089C                     	endif
   426  00089C  0008               	tblrd		*
   427  00089E  CFF5 FF81          	movff	tablat,3969	;volatile
   428                           
   429                           ;main.c: 85: cont_segundos--;
   430  0008A2  0615               	decf	_cont_segundos,f,c
   431                           
   432                           ;main.c: 86: if(cont_segundos == 0){
   433  0008A4  5015               	movf	_cont_segundos,w,c
   434  0008A6  A4D8               	btfss	status,2,c
   435  0008A8  0012               	return	
   436                           
   437                           ;main.c: 87: troca_estado();
   438  0008AA  EC7B  F004         	call	_troca_estado	;wreg free
   439  0008AE  0012               	return	
   440  0008B0                     __end_of_trata_segundo:
   441                           	opt stack 0
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           prodh	equ	0xFF4
   447                           prodl	equ	0xFF3
   448                           intcon	equ	0xFF2
   449                           status	equ	0xFD8
   450                           
   451 ;; *************** function _troca_estado *****************
   452 ;; Defined at:
   453 ;;		line 42 in file "main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2, status,0
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   467 ;;      Params:         0       0       0       0       0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; Hardware stack levels required when called:    1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_trata_segundo
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text2
   482  0008F6                     __ptext2:
   483                           	opt stack 0
   484  0008F6                     _troca_estado:
   485                           	opt stack 28
   486                           
   487                           ;main.c: 43: if(estado_atual == 0){
   488                           
   489                           ;incstack = 0
   490  0008F6  5014               	movf	_estado_atual,w,c
   491  0008F8  A4D8               	btfss	status,2,c
   492  0008FA  D005               	goto	l660
   493                           
   494                           ;main.c: 46: estado_atual = 1;
   495  0008FC  0E01               	movlw	1
   496  0008FE  6E14               	movwf	_estado_atual,c
   497                           
   498                           ;main.c: 47: cont_segundos = 2;
   499  000900  0E02               	movlw	2
   500  000902  6E15               	movwf	_cont_segundos,c
   501                           
   502                           ;main.c: 48: }else if(estado_atual == 1){
   503  000904  0012               	return	
   504  000906                     l660:
   505  000906  0414               	decf	_estado_atual,w,c
   506  000908  A4D8               	btfss	status,2,c
   507  00090A  D005               	goto	l664
   508                           
   509                           ;main.c: 51: estado_atual = 2;
   510  00090C  0E02               	movlw	2
   511  00090E  6E14               	movwf	_estado_atual,c
   512                           
   513                           ;main.c: 52: cont_segundos = 4;
   514  000910  0E04               	movlw	4
   515  000912  6E15               	movwf	_cont_segundos,c
   516                           
   517                           ;main.c: 53: }else{
   518  000914  0012               	return	
   519  000916                     l664:
   520                           
   521                           ;main.c: 56: estado_atual = 0;
   522  000916  0E00               	movlw	0
   523  000918  6E14               	movwf	_estado_atual,c
   524                           
   525                           ;main.c: 57: cont_segundos = 7;
   526  00091A  0E07               	movlw	7
   527  00091C  6E15               	movwf	_cont_segundos,c
   528  00091E  0012               	return	
   529  000920                     __end_of_troca_estado:
   530                           	opt stack 0
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           prodh	equ	0xFF4
   536                           prodl	equ	0xFF3
   537                           intcon	equ	0xFF2
   538                           status	equ	0xFD8
   539                           
   540 ;; *************** function _pic_isr *****************
   541 ;; Defined at:
   542 ;;		line 92 in file "main.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   556 ;;      Params:         0       0       0       0       0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0       0       0       0       0
   558 ;;      Temps:         17       0       0       0       0       0       0       0       0
   559 ;;      Totals:        17       0       0       0       0       0       0       0       0
   560 ;;Total ram usage:       17 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		Interrupt level 1
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	intcodelo
   570  000018                     __pintcodelo:
   571                           	opt stack 0
   572  000018                     _pic_isr:
   573                           	opt stack 28
   574                           
   575                           ;incstack = 0
   576  000018  8016               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   577  00001A  CFD8 F001          	movff	status,??_pic_isr
   578  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   579  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   580  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   581  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   582  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   583  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   584  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   585  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   586  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   587  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   588  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   589  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   590  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   591  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   592  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   593  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   594                           
   595                           ;main.c: 93: if(TMR0IF){
   596  00005E  A4F2               	btfss	intcon,2,c	;volatile
   597  000060  D00E               	goto	i1l51
   598                           
   599                           ;main.c: 94: TMR0 = 32768;
   600  000062  0E80               	movlw	128
   601  000064  6ED7               	movwf	4055,c	;volatile
   602  000066  0E00               	movlw	0
   603  000068  6ED6               	movwf	4054,c	;volatile
   604                           
   605                           ;main.c: 95: INTCONbits.TMR0IF = 0;
   606  00006A  94F2               	bcf	intcon,2,c	;volatile
   607                           
   608                           ;main.c: 96: contador_interrupcao++;
   609  00006C  2A13               	incf	_contador_interrupcao,f,c
   610                           
   611                           ;main.c: 97: if(contador_interrupcao == 2){
   612  00006E  0E02               	movlw	2
   613  000070  1813               	xorwf	_contador_interrupcao,w,c
   614  000072  A4D8               	btfss	status,2,c
   615  000074  D004               	goto	i1l51
   616                           
   617                           ;main.c: 98: contador_um_segundo = 1;
   618  000076  0E01               	movlw	1
   619  000078  6E12               	movwf	_contador_um_segundo,c
   620                           
   621                           ;main.c: 99: contador_interrupcao = 0;
   622  00007A  0E00               	movlw	0
   623  00007C  6E13               	movwf	_contador_interrupcao,c
   624  00007E                     i1l51:
   625  00007E  C011  FFF5         	movff	??_pic_isr+16,tablat
   626  000082  C010  FFF8         	movff	??_pic_isr+15,tblptru
   627  000086  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   628  00008A  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   629  00008E  C00D  FFF4         	movff	??_pic_isr+12,prodh
   630  000092  C00C  FFF3         	movff	??_pic_isr+11,prodl
   631  000096  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   632  00009A  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   633  00009E  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   634  0000A2  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   635  0000A6  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   636  0000AA  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   637  0000AE  C005  FFFB         	movff	??_pic_isr+4,pclatu
   638  0000B2  C004  FFFA         	movff	??_pic_isr+3,pclath
   639  0000B6  C003  FFE0         	movff	??_pic_isr+2,bsr
   640  0000BA  C002  FFE8         	movff	??_pic_isr+1,wreg
   641  0000BE  C001  FFD8         	movff	??_pic_isr,status
   642  0000C2  9016               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   643  0000C4  0010               	retfie	
   644  0000C6                     __end_of_pic_isr:
   645                           	opt stack 0
   646                           pclatu	equ	0xFFB
   647                           pclath	equ	0xFFA
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           prodh	equ	0xFF4
   653                           prodl	equ	0xFF3
   654                           intcon	equ	0xFF2
   655                           fsr0h	equ	0xFEA
   656                           fsr0l	equ	0xFE9
   657                           wreg	equ	0xFE8
   658                           fsr1h	equ	0xFE2
   659                           fsr1l	equ	0xFE1
   660                           bsr	equ	0xFE0
   661                           fsr2h	equ	0xFDA
   662                           fsr2l	equ	0xFD9
   663                           status	equ	0xFD8
   664                           pclatu	equ	0xFFB
   665                           pclath	equ	0xFFA
   666                           tblptru	equ	0xFF8
   667                           tblptrh	equ	0xFF7
   668                           tblptrl	equ	0xFF6
   669                           tablat	equ	0xFF5
   670                           prodh	equ	0xFF4
   671                           prodl	equ	0xFF3
   672                           intcon	equ	0xFF2
   673                           fsr0h	equ	0xFEA
   674                           fsr0l	equ	0xFE9
   675                           wreg	equ	0xFE8
   676                           fsr1h	equ	0xFE2
   677                           fsr1l	equ	0xFE1
   678                           bsr	equ	0xFE0
   679                           fsr2h	equ	0xFDA
   680                           fsr2l	equ	0xFD9
   681                           status	equ	0xFD8
   682                           
   683                           	psect	rparam
   684  0000                     pclatu	equ	0xFFB
   685                           pclath	equ	0xFFA
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           prodh	equ	0xFF4
   691                           prodl	equ	0xFF3
   692                           intcon	equ	0xFF2
   693                           fsr0h	equ	0xFEA
   694                           fsr0l	equ	0xFE9
   695                           wreg	equ	0xFE8
   696                           fsr1h	equ	0xFE2
   697                           fsr1l	equ	0xFE1
   698                           bsr	equ	0xFE0
   699                           fsr2h	equ	0xFDA
   700                           fsr2l	equ	0xFD9
   701                           status	equ	0xFD8
   702                           
   703                           	psect	temp
   704  000016                     btemp:
   705                           	opt stack 0
   706  000016                     	ds	1
   707  0000                     int$flags	set	btemp
   708                           pclatu	equ	0xFFB
   709                           pclath	equ	0xFFA
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           prodh	equ	0xFF4
   715                           prodl	equ	0xFF3
   716                           intcon	equ	0xFF2
   717                           fsr0h	equ	0xFEA
   718                           fsr0l	equ	0xFE9
   719                           wreg	equ	0xFE8
   720                           fsr1h	equ	0xFE2
   721                           fsr1l	equ	0xFE1
   722                           bsr	equ	0xFE0
   723                           fsr2h	equ	0xFDA
   724                           fsr2l	equ	0xFD9
   725                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _trata_segundo
 ---------------------------------------------------------------------------------
 (1) _trata_segundo                                        0     0      0       0
                       _troca_estado
 ---------------------------------------------------------------------------------
 (2) _troca_estado                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _trata_segundo
     _troca_estado

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 05 19:52:33 2018

   _contador_interrupcao 0013                       bsr 000FE0    __size_of_troca_estado 002A  
                    l660 0906                      l732 08E6                      l664 0916  
                    l680 0842                      l694 0878                      wreg 000FE8  
          _cont_segundos 0015                     i1l51 007E            _trata_segundo 080C  
                   _TMR0 000FD6                     _main 08B0                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0016  
                   prodh 000FF4                     prodl 000FF3                     start 00C6  
           _troca_estado 08F6             ___param_bank 000000                    ?_main 0001  
                  _PORTB 000F81                    _TRISB 000F93                    _TRISC 000F94  
        __end_of_display 080B          __end_of_pic_isr 00C6           ?_trata_segundo 0001  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
        __initialization 0920             __end_of_main 08F6                   ??_main 0012  
          __activetblptr 000001                   _ADCON1 000FC1                   _TMR0IF 007F92  
              ??_pic_isr 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8          ??_trata_segundo 0012  
             __accesstop 0060  __end_of__initialization 0926          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001               __pnvCOMRAM 0015  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0920                  __ramtop 0800                  __ptext0 08B0  
                __ptext1 080C                  __ptext2 08F6                  _display 0801  
              _T0CONbits 000FD5                  _pic_isr 0018     end_of_initialization 0926  
              _PORTCbits 000F82      start_initialization 0920      _contador_um_segundo 0012  
  __end_of_trata_segundo 08B0            ?_troca_estado 0001             _estado_atual 0014  
            __pbssCOMRAM 0012           ??_troca_estado 0012              __pintcodelo 0018  
            __smallconst 0800                 ?_pic_isr 0001                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800     __end_of_troca_estado 0920  
       __size_of_pic_isr 00AE            __size_of_main 0046                 int$flags 0016  
             _INTCONbits 000FF2                 intlevel1 0000   __size_of_trata_segundo 00A4  
